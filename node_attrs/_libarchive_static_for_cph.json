{
 "PRed":[
  {
   "PR":{
    "__lazy_json__":"pr_json/317695090.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"Version",
    "migrator_version":0,
    "version":"3.4.0"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/321000614.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"ArchRebuild",
    "migrator_version":1,
    "name":"aarch64 and ppc64le addition"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/327977639.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"MigrationYaml",
    "migrator_version":0,
    "name":"zstd-1.4.3"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/341645112.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"MigrationYaml",
    "migrator_object_version":1,
    "migrator_version":0,
    "name":"zstd-1.4.4"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/357959316.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"Version",
    "migrator_version":0,
    "version":"3.4.1"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/374006748.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"Version",
    "migrator_version":0,
    "version":"3.4.2"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  }
 ],
 "bad":false,
 "conda-forge.yml":{
  "provider":{
   "linux_aarch64":"default",
   "linux_ppc64le":"azure",
   "win":"azure"
  }
 },
 "feedstock_name":"_libarchive_static_for_cph",
 "hash_type":"sha256",
 "meta_yaml":{
  "about":{
   "home":"http://www.libarchive.org/",
   "license":"BSD-2-Clause",
   "license_file":[
    "static_deps_licenses/bzip2.txt",
    "static_deps_licenses/libarchive.txt",
    "static_deps_licenses/zlib.txt",
    "static_deps_licenses/zstd.txt",
    "static_deps_licenses/bzip2.txt",
    "static_deps_licenses/libarchive.txt",
    "static_deps_licenses/zlib.txt",
    "static_deps_licenses/zstd.txt",
    "static_deps_licenses/libiconv.txt",
    "static_deps_licenses/bzip2.txt",
    "static_deps_licenses/libarchive.txt",
    "static_deps_licenses/zlib.txt",
    "static_deps_licenses/zstd.txt"
   ],
   "summary":"a static build of libarchive containing only conda-related parts"
  },
  "build":{
   "ignore_run_exports":[
    "bzip2",
    "libiconv",
    "zlib",
    "zstd",
    "bzip2",
    "libiconv",
    "zlib",
    "zstd",
    "bzip2",
    "libiconv",
    "zlib",
    "zstd"
   ],
   "missing_dso_whitelist":null,
   "number":"3"
  },
  "extra":{
   "recipe-maintainers":[
    "msarahan",
    "jjhelmus",
    "msarahan",
    "jjhelmus",
    "msarahan",
    "jjhelmus"
   ]
  },
  "package":{
   "name":"_libarchive_static_for_cph",
   "version":"3.3.3"
  },
  "requirements":{
   "build":[
    "c_compiler_stub",
    "msinttypes",
    "cmake",
    "m2-patch",
    "c_compiler_stub",
    "autoconf",
    "automake",
    "libtool",
    "pkg-config",
    "make",
    "c_compiler_stub",
    "autoconf",
    "automake",
    "libtool",
    "pkg-config",
    "make"
   ],
   "host":[
    "msinttypes",
    "bzip2",
    "zlib",
    "zstd 1.3.7 h1b0e4d7_0",
    "bzip2",
    "libiconv",
    "zlib",
    "zstd",
    "bzip2",
    "zlib",
    "zstd"
   ]
  },
  "source":{
   "patches":[
    "patches/0001-Add-lib-to-CMAKE_FIND_LIBRARY_PREFIXES-for-lzma.patch",
    "patches/0002-xar-fix-bad-seek-in-move_reading_point.patch",
    "patches/0003-VC9-compatibility-test-for-BCryptDeriveKeyPBKDF2.patch",
    "patches/0004-VC9-compatibility-define-BCRYPT_SUCCESS.patch",
    "patches/0006-VC-openssl-define-inline-as-__inline.patch",
    "patches/0007-CMake-VC9-compatibility-ignore-some-warnings.patch",
    "patches/0008-VC9-compatibility-remove-C99.patch",
    "patches/0009-CMake-Force-Multi-threaded-DLL-runtime.patch",
    "patches/0010-Use-CreateSymbolicLinkW-on-Windows-for-symlinks-WIP.patch",
    "patches/0001-Add-lib-to-CMAKE_FIND_LIBRARY_PREFIXES-for-lzma.patch",
    "patches/0002-xar-fix-bad-seek-in-move_reading_point.patch",
    "patches/0003-VC9-compatibility-test-for-BCryptDeriveKeyPBKDF2.patch",
    "patches/0004-VC9-compatibility-define-BCRYPT_SUCCESS.patch",
    "patches/0006-VC-openssl-define-inline-as-__inline.patch",
    "patches/0007-CMake-VC9-compatibility-ignore-some-warnings.patch",
    "patches/0008-VC9-compatibility-remove-C99.patch",
    "patches/0009-CMake-Force-Multi-threaded-DLL-runtime.patch",
    "patches/0010-Use-CreateSymbolicLinkW-on-Windows-for-symlinks-WIP.patch",
    "patches/0001-Add-lib-to-CMAKE_FIND_LIBRARY_PREFIXES-for-lzma.patch",
    "patches/0002-xar-fix-bad-seek-in-move_reading_point.patch",
    "patches/0003-VC9-compatibility-test-for-BCryptDeriveKeyPBKDF2.patch",
    "patches/0004-VC9-compatibility-define-BCRYPT_SUCCESS.patch",
    "patches/0006-VC-openssl-define-inline-as-__inline.patch",
    "patches/0007-CMake-VC9-compatibility-ignore-some-warnings.patch",
    "patches/0008-VC9-compatibility-remove-C99.patch",
    "patches/0009-CMake-Force-Multi-threaded-DLL-runtime.patch",
    "patches/0010-Use-CreateSymbolicLinkW-on-Windows-for-symlinks-WIP.patch"
   ],
   "sha256":"ba7eb1781c9fbbae178c4c6bad1c6eb08edab9a1496c64833d1715d022b30e2e",
   "url":"https://github.com/libarchive/libarchive/releases/download/v3.3.3/libarchive-3.3.3.tar.gz"
  },
  "test":{
   "commands":[
    "if not exist %PREFIX%\\Library\\include\\archive.h exit /b 1",
    "if not exist %PREFIX%\\Library\\include\\archive_entry.h exit /b 1",
    "if not exist %PREFIX%\\Library\\lib\\archive_static.lib exit /b 1",
    "if not exist %PREFIX%\\Library\\lib\\archive_and_deps.lib exit /b 1",
    "test -f \"${PREFIX}/include/archive.h\"",
    "test -f \"${PREFIX}/include/archive_entry.h\"",
    "test -f \"${PREFIX}/lib/libarchive.a\"",
    "test -f \"${PREFIX}/lib/libarchive_and_deps.a\"",
    "test -f \"${PREFIX}/include/archive.h\"",
    "test -f \"${PREFIX}/include/archive_entry.h\"",
    "test -f \"${PREFIX}/lib/libarchive.a\"",
    "test -f \"${PREFIX}/lib/libarchive_and_deps.a\""
   ]
  }
 },
 "name":"_libarchive_static_for_cph",
 "new_version":"3.4.2",
 "pinning_version":"2020.01.28",
 "raw_meta_yaml":"{% set version = \"3.3.3\" %}\n# 3.4.0 breaks some symlink stuff on macos.  Holding back for now.\n\n# Recipe for a static libarchive with support for the features needed for\n# conda-package-handling (bzip2, zlib, zstd).\n# This is not a general purpose libarchive\n\npackage:\n  name: _libarchive_static_for_cph\n  version: {{ version }}\n\nsource:\n  url: https://github.com/libarchive/libarchive/releases/download/v{{ version }}/libarchive-{{ version }}.tar.gz\n  sha256: ba7eb1781c9fbbae178c4c6bad1c6eb08edab9a1496c64833d1715d022b30e2e\n  patches:\n    - patches/0001-Add-lib-to-CMAKE_FIND_LIBRARY_PREFIXES-for-lzma.patch\n    - patches/0002-xar-fix-bad-seek-in-move_reading_point.patch\n    - patches/0003-VC9-compatibility-test-for-BCryptDeriveKeyPBKDF2.patch\n    - patches/0004-VC9-compatibility-define-BCRYPT_SUCCESS.patch\n    # This should not be applied in general. It exists so I can build it for\n    # debugging Visual Studio where warnings are errors for some reason.\n    # Hiding warnings is poor practice.\n    # - patches/0005-VC9-compatibility-ignore-some-warnings.patch\n    - patches/0006-VC-openssl-define-inline-as-__inline.patch\n    # These warnings are errors when compiling lz-4 support\n    - patches/0007-CMake-VC9-compatibility-ignore-some-warnings.patch\n    - patches/0008-VC9-compatibility-remove-C99.patch\n    - patches/0009-CMake-Force-Multi-threaded-DLL-runtime.patch\n    # 3.4.0 added official support for symlinks on win\n    - patches/0010-Use-CreateSymbolicLinkW-on-Windows-for-symlinks-WIP.patch\n\nbuild:\n  number: 3\n  ignore_run_exports:\n    - bzip2\n    - libiconv\n    - zlib\n    - zstd\n  # HACK: case-sensitive mismatch in latest conda-build\n  missing_dso_whitelist:\n    - Library/bin/VCRUNTIME140.dll    # [win]\n    - \"*/MSVCR90.dll\"                 # [win]\n    - \"MSVCR90.dll\"                   # [win]\n\nrequirements:\n  build:\n    - {{ compiler('c') }}\n    # Does not work in this recips at present\n    # we manually convert C99 to C89 instead.\n    # - c99-to-c89  # [win and vc<14]\n    - msinttypes  # [win and vc<14]\n    - autoconf    # [unix]\n    - automake    # [unix]\n    - libtool     # [unix]\n    - pkg-config  # [unix]\n    - cmake       # [win]\n    - make        # [unix]\n    - m2-patch    # [win]\n  host:\n    - msinttypes  # [win and vc<14]\n    - bzip2\n    - libiconv    # [osx]\n    - zlib\n    # on win + vc9 a zstd package with a static library is needed,\n    # defaults has one but conda-forge does not (yet).  Use the default\n    # package by specifying the full version and build string\n    - zstd 1.3.7 h1b0e4d7_0  # [win and vc<14]\n    - zstd                   # [not (win and vc<14)]\n\ntest:\n  commands:\n    # Verify headers are in place.\n    - test -f \"${PREFIX}/include/archive.h\"                              # [unix]\n    - test -f \"${PREFIX}/include/archive_entry.h\"                        # [unix]\n    - if not exist %PREFIX%\\Library\\include\\archive.h exit /b 1         # [win]\n    - if not exist %PREFIX%\\Library\\include\\archive_entry.h exit /b 1   # [win]\n\n    # Verify libraries are in place.\n    - test -f \"${PREFIX}/lib/libarchive.a\"                               # [unix]\n    - test -f \"${PREFIX}/lib/libarchive_and_deps.a\"                      # [unix]\n    - if not exist %PREFIX%\\Library\\lib\\archive_static.lib exit /b 1    # [win]\n    - if not exist %PREFIX%\\Library\\lib\\archive_and_deps.lib exit /b 1  # [win]\n\nabout:\n  home: http://www.libarchive.org/\n  summary: a static build of libarchive containing only conda-related parts\n  license: BSD-2-Clause\n  license_file:\n    - static_deps_licenses/bzip2.txt\n    - static_deps_licenses/libarchive.txt\n    - static_deps_licenses/zlib.txt\n    - static_deps_licenses/zstd.txt\n    - static_deps_licenses/msinttypes.txt  # [win and py27]\n    - static_deps_licenses/libiconv.txt    # [osx]\n\nextra:\n  recipe-maintainers:\n    - msarahan\n    - jjhelmus\n",
 "req":{
  "__set__":true,
  "elements":[
   "autoconf",
   "automake",
   "bzip2",
   "c_compiler_stub",
   "cmake",
   "libiconv",
   "libtool",
   "m2-patch",
   "make",
   "msinttypes",
   "pkg-config",
   "zlib",
   "zstd"
  ]
 },
 "requirements":{
  "build":{
   "__set__":true,
   "elements":[
    "autoconf",
    "automake",
    "c_compiler_stub",
    "cmake",
    "libtool",
    "m2-patch",
    "make",
    "msinttypes",
    "pkg-config"
   ]
  },
  "host":{
   "__set__":true,
   "elements":[
    "bzip2",
    "libiconv",
    "msinttypes",
    "zlib",
    "zstd"
   ]
  },
  "run":{
   "__set__":true,
   "elements":[]
  },
  "test":{
   "__set__":true,
   "elements":[]
  }
 },
 "smithy_version":"3.6.8",
 "strong_exports":false,
 "total_requirements":{
  "build":{
   "__set__":true,
   "elements":[
    "autoconf",
    "automake",
    "c_compiler_stub",
    "cmake",
    "libtool",
    "m2-patch",
    "make",
    "msinttypes",
    "pkg-config"
   ]
  },
  "host":{
   "__set__":true,
   "elements":[
    "bzip2",
    "libiconv",
    "msinttypes",
    "zlib",
    "zstd",
    "zstd 1.3.7 h1b0e4d7_0"
   ]
  },
  "run":{
   "__set__":true,
   "elements":[]
  },
  "test":{
   "__set__":true,
   "elements":[]
  }
 },
 "url":"https://github.com/libarchive/libarchive/releases/download/v3.3.3/libarchive-3.3.3.tar.gz",
 "version":"3.3.3"
}