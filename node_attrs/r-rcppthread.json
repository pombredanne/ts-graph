{
 "PRed":[
  {
   "PR":{
    "__lazy_json__":"pr_json/299236693.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"RBaseRebuild",
    "migrator_version":0,
    "name":"r-base-3.6.1"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/329988463.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"Version",
    "migrator_version":0,
    "version":"0.5.4"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/412946349.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"MigrationYaml",
    "migrator_object_version":2,
    "migrator_version":0,
    "name":"r400"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  }
 ],
 "bad":false,
 "conda-forge.yml":{
  "bot":{
   "automerge":true
  },
  "provider":{
   "win":"azure"
  }
 },
 "feedstock_name":"r-rcppthread",
 "hash_type":"sha256",
 "meta_yaml":{
  "about":{
   "home":"https://github.com/tnagler/RcppThread",
   "license":"MIT",
   "license_family":"MIT",
   "license_file":[
    "/lib/R/share/licenses/MIT",
    "LICENSE",
    "/lib/R/share/licenses/MIT",
    "LICENSE",
    "/lib/R/share/licenses/MIT",
    "LICENSE"
   ],
   "summary":"Provides a C++11-style thread class and thread pool that can safely be interrupted from R."
  },
  "build":{
   "merge_build_host":true,
   "noarch":"generic",
   "number":"1",
   "rpaths":[
    "lib/R/lib/",
    "lib/",
    "lib/R/lib/",
    "lib/",
    "lib/R/lib/",
    "lib/"
   ]
  },
  "extra":{
   "recipe-maintainers":[
    "conda-forge/r",
    "conda-forge/r",
    "conda-forge/r"
   ]
  },
  "package":{
   "name":"r-rcppthread",
   "version":"0.5.4"
  },
  "requirements":{
   "build":null,
   "host":[
    "r-base",
    "r-base",
    "r-base"
   ],
   "run":[
    "r-base",
    "r-base",
    "r-base"
   ]
  },
  "source":{
   "sha256":"ce3af6c73634ff2db4534b7aa1aee519ad1d88f88326bc9d25178cd8ccb39fd6",
   "url":[
    "https://cran.r-project.org/src/contrib/RcppThread_0.5.4.tar.gz",
    "https://cran.r-project.org/src/contrib/Archive/RcppThread/RcppThread_0.5.4.tar.gz",
    "https://cran.r-project.org/src/contrib/RcppThread_0.5.4.tar.gz",
    "https://cran.r-project.org/src/contrib/Archive/RcppThread/RcppThread_0.5.4.tar.gz",
    "https://cran.r-project.org/src/contrib/RcppThread_0.5.4.tar.gz",
    "https://cran.r-project.org/src/contrib/Archive/RcppThread/RcppThread_0.5.4.tar.gz"
   ]
  },
  "test":{
   "commands":[
    "\"%R%\" -e \"library('RcppThread')\"",
    "$R -e \"library('RcppThread')\"",
    "$R -e \"library('RcppThread')\""
   ]
  }
 },
 "name":"r-rcppthread",
 "new_version":"0.5.4",
 "pinning_version":"2020.05.04.05.46.47",
 "raw_meta_yaml":"{% set version = '0.5.4' %}\n{% set posix = 'm2-' if win else '' %}\n{% set native = 'm2w64-' if win else '' %}\n\npackage:\n  name: r-rcppthread\n  version: {{ version|replace(\"-\", \"_\") }}\n\nsource:\n  url:\n    - {{ cran_mirror }}/src/contrib/RcppThread_{{ version }}.tar.gz\n    - {{ cran_mirror }}/src/contrib/Archive/RcppThread/RcppThread_{{ version }}.tar.gz\n  sha256: ce3af6c73634ff2db4534b7aa1aee519ad1d88f88326bc9d25178cd8ccb39fd6\n\nbuild:\n  merge_build_host: True  # [win]\n  number: 1\n  noarch: generic\n  rpaths:\n    - lib/R/lib/\n    - lib/\n\nrequirements:\n  build:\n    - {{ posix }}zip               # [win]\n  host:\n    - r-base\n  run:\n    - r-base\n\ntest:\n  commands:\n    - $R -e \"library('RcppThread')\"           # [not win]\n    - \"\\\"%R%\\\" -e \\\"library('RcppThread')\\\"\"  # [win]\n\nabout:\n  home: https://github.com/tnagler/RcppThread\n  license: MIT\n  summary: Provides a C++11-style thread class and thread pool that can safely be interrupted\n    from R.\n  license_family: MIT\n  license_file:\n    - '{{ environ[\"PREFIX\"] }}/lib/R/share/licenses/MIT'\n    - LICENSE\n\nextra:\n  recipe-maintainers:\n    - conda-forge/r\n\n# Package: RcppThread\n# Title: R-Friendly Threading in C++\n# Version: 0.5.4\n# Authors@R: person(\"Thomas\", \"Nagler\", email = \"mail@tnagler.com\", role = c(\"aut\", \"cre\"))\n# Description: Provides a C++11-style thread class and thread pool that can safely be interrupted from R.\n# Depends: R (>= 3.3.0)\n# License: MIT + file LICENSE\n# Encoding: UTF-8\n# LazyData: true\n# SystemRequirements: C++11\n# URL: https://github.com/tnagler/RcppThread\n# BugReports: https://github.com/tnagler/RcppThread/issues\n# RoxygenNote: 6.1.1\n# Suggests: testthat, R.rsp, Rcpp\n# VignetteBuilder: R.rsp\n# NeedsCompilation: no\n# Packaged: 2019-10-18 22:03:00 UTC; n5\n# Author: Thomas Nagler [aut, cre]\n# Maintainer: Thomas Nagler <mail@tnagler.com>\n# Repository: CRAN\n# Date/Publication: 2019-10-19 05:20:15 UTC\n",
 "req":{
  "__set__":true,
  "elements":[
   "r-base"
  ]
 },
 "requirements":{
  "build":{
   "__set__":true,
   "elements":[]
  },
  "host":{
   "__set__":true,
   "elements":[
    "r-base"
   ]
  },
  "run":{
   "__set__":true,
   "elements":[
    "r-base"
   ]
  },
  "test":{
   "__set__":true,
   "elements":[]
  }
 },
 "smithy_version":"No azure token. Create a token and\nput it in ~/.conda-smithy/azure.token\n3.7.0\n",
 "strong_exports":false,
 "total_requirements":{
  "build":{
   "__set__":true,
   "elements":[]
  },
  "host":{
   "__set__":true,
   "elements":[
    "r-base"
   ]
  },
  "run":{
   "__set__":true,
   "elements":[
    "r-base"
   ]
  },
  "test":{
   "__set__":true,
   "elements":[]
  }
 },
 "url":[
  "https://cran.r-project.org/src/contrib/RcppThread_0.5.3.tar.gz",
  "https://cran.r-project.org/src/contrib/Archive/RcppThread/RcppThread_0.5.3.tar.gz",
  "https://cran.r-project.org/src/contrib/RcppThread_0.5.3.tar.gz",
  "https://cran.r-project.org/src/contrib/Archive/RcppThread/RcppThread_0.5.3.tar.gz",
  "https://cran.r-project.org/src/contrib/RcppThread_0.5.3.tar.gz",
  "https://cran.r-project.org/src/contrib/Archive/RcppThread/RcppThread_0.5.3.tar.gz"
 ],
 "version":"0.5.4"
}