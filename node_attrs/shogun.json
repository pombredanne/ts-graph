{
 "PRed":[
  {
   "PR":{
    "__lazy_json__":"pr_json/224469294.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"CompilerRebuild",
    "migrator_version":1,
    "name":"Python 3.7, GCC 7, R 3.5.1, openBLAS 0.3.2"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/294822419.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"Version",
    "migrator_version":0,
    "version":"6.1.4"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/336088893.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"MigrationYaml",
    "migrator_object_version":1,
    "migrator_version":0,
    "name":"python38"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/392790467.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"MigrationYaml",
    "migrator_object_version":1,
    "migrator_version":0,
    "name":"pypy"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/405062705.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"MigrationYaml",
    "migrator_object_version":1,
    "migrator_version":0,
    "name":"hdf51106"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/405386598.json"
   },
   "data":{
    "bot_rerun":1588884948.7618637,
    "migrator_name":"MigrationYaml",
    "migrator_object_version":1,
    "migrator_version":0,
    "name":"arpack37"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  }
 ],
 "bad":false,
 "conda-forge.yml":{},
 "feedstock_name":"shogun",
 "hash_type":"sha256",
 "meta_yaml":{
  "about":{
   "description":"The Shogun Machine learning toolbox offers a wide range of efficient and\nunified Machine Learning methods.\n",
   "dev_url":"https://github.com/shogun-toolbox/shogun/wiki",
   "doc_url":"http://shogun.ml/examples/latest/index.html",
   "home":"http://shogun.ml",
   "license":"GPL-3.0",
   "license_family":"GPL",
   "license_file":"COPYING",
   "summary":"Unified and efficient Machine Learning"
  },
  "build":{
   "features":[
    "blas_openblas"
   ],
   "number":"3",
   "script":"mkdir build\ncd build\n\npyinc=$($PYTHON -c \"from distutils import sysconfig; print(sysconfig.get_python_inc())\")\npylib=$(ldd $PYTHON | grep $PREFIX | grep 'libpython.*\\.so' | cut -d' ' -f3)\n\ncmake ..                                      ^\n    -G\"%CMAKE_GENERATOR%\"           ^\n    -DCMAKE_PREFIX_PATH=\"%LIBRARY_PREFIX%\"        ^\n    -DCMAKE_INSTALL_PREFIX=\"%LIBRARY_PREFIX%\"     ^\n    -DCMAKE_BUILD_TYPE=Release                ^\n    -DBUILD_EXAMPLES=OFF                      ^\n    -DBUILD_META_EXAMPLES=OFF                 ^\n    -DENABLE_TESTING=OFF                      ^\n    -DENABLE_COVERAGE=OFF                     ^\n    -DUSE_SVMLIGHT=OFF                        ^\n    -DPYTHON_EXECUTABLE=%PYTHON%    ^\n    -DPYTHON_INCLUDE_DIR=$pyinc               \\\n    -DPYTHON_LIBRARY=$pylib                   \\\n    -DLIBSHOGUN=OFF                           ^\n    -DINTERFACE_PYTHON=ON\n\ncmake --build . --target _interface_python --config Release --\n\ncmake --build . --target install --config Release --\n",
   "skip":true
  },
  "extra":{
   "recipe-maintainers":[
    "djsutherland",
    "djsutherland",
    "djsutherland"
   ]
  },
  "package":{
   "name":"shogun",
   "version":"6.1.3"
  },
  "requirements":{
   "build":[
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cmake",
    "swig",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cmake",
    "swig",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cmake",
    "swig"
   ],
   "host":[
    "python",
    "setuptools",
    "numpy",
    "shogun-cpp 6.1.3",
    "bzip2",
    "ctags",
    "curl",
    "eigen",
    "glpk",
    "hdf5",
    "libxml2",
    "lzo",
    "rxcpp 4.0.0",
    "snappy",
    "xz",
    "zlib",
    "python",
    "setuptools",
    "numpy",
    "shogun-cpp 6.1.3",
    "arpack",
    "bzip2",
    "ctags",
    "curl",
    "eigen",
    "glpk",
    "hdf5",
    "json-c",
    "libxml2",
    "lzo",
    "openblas",
    "libprotobuf",
    "rxcpp 4.0.0",
    "snappy",
    "xz",
    "zlib",
    "python",
    "setuptools",
    "numpy",
    "shogun-cpp 6.1.3",
    "arpack",
    "bzip2",
    "ctags",
    "curl",
    "eigen",
    "glpk",
    "hdf5",
    "json-c",
    "libxml2",
    "lzo",
    "openblas",
    "libprotobuf",
    "rxcpp 4.0.0",
    "snappy",
    "xz",
    "zlib"
   ],
   "run":[
    "python",
    "numpy",
    "shogun-cpp",
    "bzip2",
    "ctags",
    "curl",
    "glpk",
    "hdf5",
    "libxml2",
    "lzo",
    "snappy",
    "xz",
    "zlib",
    "python",
    "numpy",
    "shogun-cpp",
    "arpack",
    "bzip2",
    "ctags",
    "curl",
    "glpk",
    "hdf5",
    "json-c",
    "libxml2",
    "lzo",
    "openblas",
    "libprotobuf",
    "snappy",
    "xz",
    "zlib",
    "python",
    "numpy",
    "shogun-cpp",
    "arpack",
    "bzip2",
    "ctags",
    "curl",
    "glpk",
    "hdf5",
    "json-c",
    "libxml2",
    "lzo",
    "openblas",
    "libprotobuf",
    "snappy",
    "xz",
    "zlib"
   ]
  },
  "source":[
   {
    "patches":[
     "libpython-linking.patch"
    ],
    "sha256":"75f4d555efe06eaa7c4c12a1dc942f6e4d41a8ed495777a790b9bd9df936c19c",
    "url":"https://github.com/shogun-toolbox/shogun/archive/shogun_6.1.3.tar.gz"
   },
   {
    "folder":"src/gpl",
    "sha256":"ff8a46b7775e784f07e9ffb02e7cd9b101f508c1c7b7d8cdbf1024a2efacdb22",
    "url":"https://github.com/shogun-toolbox/shogun-gpl/archive/29ca2ff930cd5d963b3a78e79160cc04d48970c2.tar.gz"
   },
   {
    "patches":[
     "libpython-linking.patch"
    ],
    "sha256":"75f4d555efe06eaa7c4c12a1dc942f6e4d41a8ed495777a790b9bd9df936c19c",
    "url":"https://github.com/shogun-toolbox/shogun/archive/shogun_6.1.3.tar.gz"
   },
   {
    "folder":"src/gpl",
    "sha256":"ff8a46b7775e784f07e9ffb02e7cd9b101f508c1c7b7d8cdbf1024a2efacdb22",
    "url":"https://github.com/shogun-toolbox/shogun-gpl/archive/29ca2ff930cd5d963b3a78e79160cc04d48970c2.tar.gz"
   },
   {
    "patches":[
     "libpython-linking.patch"
    ],
    "sha256":"75f4d555efe06eaa7c4c12a1dc942f6e4d41a8ed495777a790b9bd9df936c19c",
    "url":"https://github.com/shogun-toolbox/shogun/archive/shogun_6.1.3.tar.gz"
   },
   {
    "folder":"src/gpl",
    "sha256":"ff8a46b7775e784f07e9ffb02e7cd9b101f508c1c7b7d8cdbf1024a2efacdb22",
    "url":"https://github.com/shogun-toolbox/shogun-gpl/archive/29ca2ff930cd5d963b3a78e79160cc04d48970c2.tar.gz"
   }
  ],
  "test":{
   "commands":[
    "conda inspect linkages -p $PREFIX shogun"
   ],
   "imports":[
    "shogun",
    "shogun",
    "shogun"
   ]
  }
 },
 "name":"shogun",
 "new_version":"6.1.4",
 "pinning_version":"2020.04.17.22.20.20",
 "raw_meta_yaml":"{% set name = \"shogun\" %}\n\n{% set version = \"6.1.3\" %}\n{% set commit = 'shogun_' + version %}\n{% set sha256 = \"75f4d555efe06eaa7c4c12a1dc942f6e4d41a8ed495777a790b9bd9df936c19c\" %}\n\n# Shogun doesn't produce a single tarball you can build from anymore;\n# need to get the gpl-shogun tarball too. Remember to update this when updating\n# the version!\n{% set gpl_commit = \"29ca2ff930cd5d963b3a78e79160cc04d48970c2\" %}\n{% set gpl_sha256 = \"ff8a46b7775e784f07e9ffb02e7cd9b101f508c1c7b7d8cdbf1024a2efacdb22\" %}\n\n{% set blas_variant = \"openblas\" %}\n\npackage:\n  name: {{ name|lower }}\n  version: {{ version }}\n\nsource:\n  - url: https://github.com/shogun-toolbox/shogun/archive/{{ commit }}.tar.gz\n    sha256: {{ sha256 }}\n    patches:\n      # https://github.com/shogun-toolbox/shogun/issues/4068\n      - libpython-linking.patch\n  - url: https://github.com/shogun-toolbox/shogun-gpl/archive/{{ gpl_commit }}.tar.gz\n    sha256: {{ gpl_sha256 }}\n    folder: src/gpl\n\n{% set lc, vs, ve, prefix, parbuild = \"\\\\\", \"$\", \"\", \"$PREFIX\", \"-j $CPU_COUNT\" %}  # [unix]\n{% set lc, vs, ve, prefix, parbuild = \"^\", \"%\", \"%\", \"%LIBRARY_PREFIX%\", \"\" %}      # [win]\nbuild:\n  number: 3\n  features:\n    - blas_{{ blas_variant }}  # [not win]\n  skip: true  # [win32 or (win and vc<14)]\n  script: |\n    mkdir build\n    cd build\n\n    # figure out include / library paths\n    # https://github.com/conda/conda-build/issues/2130 will be proper solution\n    pyinc=$($PYTHON -c \"from distutils import sysconfig; print(sysconfig.get_python_inc())\")                           # [unix]\n    pylib=$(otool -L $PYTHON | grep 'libpython.*\\.dylib' | tr '\\t' ' ' | cut -d' ' -f2 | sed \"s|@rpath|$PREFIX/lib|\")  # [osx]\n    pylib=$(ldd $PYTHON | grep $PREFIX | grep 'libpython.*\\.so' | cut -d' ' -f3)                                       # [linux]\n\n    cmake ..                                      {{ lc }}\n        -G\"{{vs}}CMAKE_GENERATOR{{ve}}\"           {{ lc }}\n        -DCMAKE_PREFIX_PATH=\"{{ prefix }}\"        {{ lc }}\n        -DCMAKE_INSTALL_PREFIX=\"{{ prefix }}\"     {{ lc }}\n        -DCMAKE_BUILD_TYPE=Release                {{ lc }}\n        -DBUILD_EXAMPLES=OFF                      {{ lc }}\n        -DBUILD_META_EXAMPLES=OFF                 {{ lc }}\n        -DENABLE_TESTING=OFF                      {{ lc }}\n        -DENABLE_COVERAGE=OFF                     {{ lc }}\n        -DUSE_SVMLIGHT=OFF                        {{ lc }}\n        -DPYTHON_EXECUTABLE={{vs}}PYTHON{{ve}}    {{ lc }}\n        -DPYTHON_INCLUDE_DIR=$pyinc               \\  # [unix]\n        -DPYTHON_LIBRARY=$pylib                   \\  # [unix]\n        -DLIBSHOGUN=OFF                           {{ lc }}\n        -DINTERFACE_PYTHON=ON\n    if errorlevel 1 exit 1  # [win]\n\n    cmake --build . --target _interface_python --config Release -- {{ parbuild }}\n    if errorlevel 1 exit 1  # [win]\n\n    cmake --build . --target install --config Release -- {{ parbuild }}\n    if errorlevel 1 exit 1  # [win]\n\n\nrequirements:\n  build:\n    - {{ compiler('c') }}\n    - {{ compiler('cxx') }}\n    - cmake\n    - swig\n  host:\n    - python\n    - setuptools\n    - numpy\n    - shogun-cpp {{ version }}\n    - arpack       # [not win]\n    - bzip2\n    - ctags\n    - curl\n    - eigen\n    - glpk\n    - hdf5\n    - json-c       # [not win]\n    - libxml2\n    - lzo\n    - openblas     # [not win]\n    - libprotobuf  # [not win]  # conda-forge doesn't have shared lib yet\n    - rxcpp 4.0.0\n    - snappy\n    - xz\n    - zlib\n  run:\n    - python\n    - {{ pin_compatible('numpy') }}\n    - {{ pin_compatible('shogun-cpp', max_pin='x.x.x') }}\n    - arpack       # [not win]\n    - bzip2\n    - ctags\n    - curl\n    - glpk\n    - hdf5\n    - json-c       # [not win]\n    - libxml2\n    - lzo\n    - openblas     # [not win]\n    - libprotobuf  # [not win]\n    - snappy\n    - xz\n    - zlib\n\ntest:\n  imports:\n    - shogun\n  commands:\n    - conda inspect linkages -p $PREFIX shogun  # [not win]\n    - conda inspect objects -p $PREFIX shogun   # [osx]\n\nabout:\n  home: http://shogun.ml\n  license: GPL-3.0\n  license_family: GPL\n  license_file: COPYING\n  summary: 'Unified and efficient Machine Learning'\n  description: |\n    The Shogun Machine learning toolbox offers a wide range of efficient and\n    unified Machine Learning methods.\n  doc_url: http://shogun.ml/examples/latest/index.html\n  dev_url: https://github.com/shogun-toolbox/shogun/wiki\n\nextra:\n  recipe-maintainers:\n    - djsutherland\n",
 "req":{
  "__set__":true,
  "elements":[
   "arpack",
   "bzip2",
   "c_compiler_stub",
   "cmake",
   "ctags",
   "curl",
   "cxx_compiler_stub",
   "eigen",
   "glpk",
   "hdf5",
   "json-c",
   "libprotobuf",
   "libxml2",
   "lzo",
   "numpy",
   "openblas",
   "python",
   "rxcpp",
   "setuptools",
   "shogun-cpp",
   "snappy",
   "swig",
   "xz",
   "zlib"
  ]
 },
 "requirements":{
  "build":{
   "__set__":true,
   "elements":[
    "c_compiler_stub",
    "cmake",
    "cxx_compiler_stub",
    "swig"
   ]
  },
  "host":{
   "__set__":true,
   "elements":[
    "arpack",
    "bzip2",
    "ctags",
    "curl",
    "eigen",
    "glpk",
    "hdf5",
    "json-c",
    "libprotobuf",
    "libxml2",
    "lzo",
    "numpy",
    "openblas",
    "python",
    "rxcpp",
    "setuptools",
    "shogun-cpp",
    "snappy",
    "xz",
    "zlib"
   ]
  },
  "run":{
   "__set__":true,
   "elements":[
    "arpack",
    "bzip2",
    "ctags",
    "curl",
    "glpk",
    "hdf5",
    "json-c",
    "libprotobuf",
    "libxml2",
    "lzo",
    "numpy",
    "openblas",
    "python",
    "shogun-cpp",
    "snappy",
    "xz",
    "zlib"
   ]
  },
  "test":{
   "__set__":true,
   "elements":[]
  }
 },
 "smithy_version":"No azure token. Create a token and\nput it in ~/.conda-smithy/azure.token\n3.6.16",
 "strong_exports":false,
 "total_requirements":{
  "build":{
   "__set__":true,
   "elements":[
    "c_compiler_stub",
    "cmake",
    "cxx_compiler_stub",
    "swig"
   ]
  },
  "host":{
   "__set__":true,
   "elements":[
    "arpack",
    "bzip2",
    "ctags",
    "curl",
    "eigen",
    "glpk",
    "hdf5",
    "json-c",
    "libprotobuf",
    "libxml2",
    "lzo",
    "numpy",
    "openblas",
    "python",
    "rxcpp 4.0.0",
    "setuptools",
    "shogun-cpp 6.1.3",
    "snappy",
    "xz",
    "zlib"
   ]
  },
  "run":{
   "__set__":true,
   "elements":[
    "arpack",
    "bzip2",
    "ctags",
    "curl",
    "glpk",
    "hdf5",
    "json-c",
    "libprotobuf",
    "libxml2",
    "lzo",
    "numpy",
    "openblas",
    "python",
    "shogun-cpp",
    "snappy",
    "xz",
    "zlib"
   ]
  },
  "test":{
   "__set__":true,
   "elements":[]
  }
 },
 "url":"https://github.com/shogun-toolbox/shogun/archive/shogun_6.1.3.tar.gz",
 "version":"6.1.3"
}