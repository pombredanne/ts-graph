{
 "PRed":[
  {
   "PR":{
    "__lazy_json__":"pr_json/239850544.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"Version",
    "migrator_version":0,
    "version":"2.0.5"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/242349514.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"Version",
    "migrator_version":0,
    "version":"2.1.0"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/244504657.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"CompilerRebuild",
    "migrator_version":1,
    "name":"Python 3.7, GCC 7, R 3.5.1, openBLAS 0.3.2"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  },
  {
   "data":{
    "bot_rerun":false,
    "migrator_name":"Version",
    "migrator_version":0,
    "version":"2.1.1"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/259494018.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"ArchRebuild",
    "migrator_version":1,
    "name":"aarch64 and ppc64le addition"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/281671389.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"Version",
    "migrator_version":0,
    "version":"2.2.0"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/340944505.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"Version",
    "migrator_version":0,
    "version":"2.3.0"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  }
 ],
 "bad":false,
 "conda-forge.yml":{
  "compiler_stack":"comp7",
  "max_py_ver":"37",
  "max_r_ver":"35",
  "provider":{
   "linux_aarch64":"azure",
   "linux_ppc64le":"azure"
  }
 },
 "feedstock_name":"libidn2",
 "hash_type":"sha256",
 "meta_yaml":{
  "about":{
   "home":"https://www.gnu.org/software/libidn/#libidn2",
   "license":"LGPLv2",
   "license_file":"COPYING",
   "summary":"Library for internationalized domain names (IDNA2008) support"
  },
  "build":{
   "number":"0",
   "run_exports":[
    "libidn2",
    "libidn2",
    "libidn2"
   ],
   "skip":true
  },
  "extra":{
   "recipe-maintainers":[
    "hmaarrfk",
    "hmaarrfk",
    "hmaarrfk"
   ]
  },
  "package":{
   "name":"libidn2",
   "version":"2.3.0"
  },
  "requirements":{
   "build":[
    "c_compiler_stub",
    "make",
    "pkg-config",
    "c_compiler_stub",
    "make",
    "pkg-config",
    "c_compiler_stub",
    "make",
    "pkg-config"
   ],
   "host":[
    "gettext",
    "libunistring",
    "gettext",
    "libunistring",
    "gettext",
    "libunistring"
   ]
  },
  "source":{
   "sha256":"e1cb1db3d2e249a6a3eb6f0946777c2e892d5c5dc7bd91c74394fc3a01cab8b5",
   "url":"https://ftp.gnu.org/gnu/libidn/libidn2-2.3.0.tar.gz"
  },
  "test":{
   "commands":[
    "test -f \"${PREFIX}/include/idn2.h\"",
    "test -f \"${PREFIX}/lib/libidn2${SHLIB_EXT}\"",
    "test -f \"${PREFIX}/include/idn2.h\"",
    "test -f \"${PREFIX}/lib/libidn2${SHLIB_EXT}\"",
    "test -f \"${PREFIX}/include/idn2.h\"",
    "test -f \"${PREFIX}/lib/libidn2${SHLIB_EXT}\""
   ]
  }
 },
 "name":"libidn2",
 "new_version":"2.3.0",
 "pinning_version":"2019.11.13",
 "raw_meta_yaml":"{% set version = \"2.3.0\" %}\n\npackage:\n  name: libidn2\n  version: {{ version }}\n\nsource:\n  url: https://ftp.gnu.org/gnu/libidn/libidn2-{{ version }}.tar.gz\n  sha256: e1cb1db3d2e249a6a3eb6f0946777c2e892d5c5dc7bd91c74394fc3a01cab8b5\n\nbuild:\n  skip: True  # [win]\n  number: 0\n  run_exports:\n    # _Amazing_ backwards compatibility so pin to major number:\n    #    https://abi-laboratory.pro/tracker/timeline/libidn2/\n    - {{ pin_subpackage('libidn2', min_pin='x', max_pin='x') }}\n\nrequirements:\n  build:\n    - {{ compiler('c') }}\n    - make\n    - pkg-config\n  host:\n    - gettext\n    - libunistring\n\ntest:\n  commands:\n    - test -f \"${PREFIX}/include/idn2.h\"\n    - test -f \"${PREFIX}/lib/libidn2${SHLIB_EXT}\"\n\nabout:\n  home: \"https://www.gnu.org/software/libidn/#libidn2\"\n  license: LGPLv2\n  license_file: COPYING\n  summary: \"Library for internationalized domain names (IDNA2008) support\"\n\nextra:\n  recipe-maintainers:\n    - hmaarrfk\n    # This recipe I got from\n    # - chenghlee\n",
 "req":{
  "__set__":true,
  "elements":[
   "c_compiler_stub",
   "gettext",
   "libunistring",
   "make",
   "pkg-config"
  ]
 },
 "requirements":{
  "build":{
   "__set__":true,
   "elements":[
    "c_compiler_stub",
    "make",
    "pkg-config"
   ]
  },
  "host":{
   "__set__":true,
   "elements":[
    "gettext",
    "libunistring"
   ]
  },
  "run":{
   "__set__":true,
   "elements":[]
  },
  "test":{
   "__set__":true,
   "elements":[]
  }
 },
 "smithy_version":"3.6.2",
 "strong_exports":false,
 "total_requirements":{
  "build":{
   "__set__":true,
   "elements":[
    "c_compiler_stub",
    "make",
    "pkg-config"
   ]
  },
  "host":{
   "__set__":true,
   "elements":[
    "gettext",
    "libunistring"
   ]
  },
  "run":{
   "__set__":true,
   "elements":[]
  },
  "test":{
   "__set__":true,
   "elements":[]
  }
 },
 "url":"https://ftp.gnu.org/gnu/libidn/libidn2-2.1.1.tar.gz",
 "version":"2.3.0"
}