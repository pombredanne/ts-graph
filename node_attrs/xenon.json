{
 "PRed":[
  {
   "data":{
    "bot_rerun":false,
    "migrator_name":"Version",
    "migrator_version":0,
    "version":"0.5.4"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "data":{
    "bot_rerun":false,
    "migrator_name":"Version",
    "migrator_version":0,
    "version":"0.5.5"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/323775354.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"Version",
    "migrator_version":0,
    "version":"0.6.0"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/325876537.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"Version",
    "migrator_version":0,
    "version":"0.7.0"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  }
 ],
 "bad":false,
 "conda-forge.yml":{},
 "feedstock_name":"xenon",
 "hash_type":"sha256",
 "meta_yaml":{
  "about":{
   "description":"Xenon is a monitoring tool based on Radon. It monitors your code\u2019s complexity.\nIdeally, Xenon is run every time you commit code. Through command line options,\nyou can set various thresholds for the complexity of your code. It will fail\n(i.e. it will exit with a non-zero exit code) when any of these requirements is\nnot met.\n",
   "home":"https://github.com/rubik/xenon",
   "license":"MIT",
   "license_family":"MIT",
   "license_file":"/LICENSE",
   "summary":"Monitor code metrics for Python on your CI server"
  },
  "build":{
   "entry_points":[
    "xenon = xenon:main",
    "xenon = xenon:main",
    "xenon = xenon:main"
   ],
   "noarch":"python",
   "number":"0",
   "script":"python setup.py install --single-version-externally-managed --record record.txt"
  },
  "extra":{
   "recipe-maintainers":[
    "IgorTG",
    "IgorTG",
    "IgorTG"
   ]
  },
  "package":{
   "name":"xenon",
   "version":"0.7.0"
  },
  "requirements":{
   "build":[
    "python",
    "setuptools",
    "python",
    "setuptools",
    "python",
    "setuptools"
   ],
   "run":[
    "radon",
    "requests >=2.0",
    "pyaml >=3.11",
    "python",
    "radon",
    "requests >=2.0",
    "pyaml >=3.11",
    "python",
    "radon",
    "requests >=2.0",
    "pyaml >=3.11",
    "python"
   ]
  },
  "source":{
   "fn":"xenon-0.7.0.tar.gz",
   "sha256":"5e6433c9297d965bf666256a0a030b6e13660ab87680220c4eb07241f101625b",
   "url":"https://pypi.io/packages/source/x/xenon/xenon-0.7.0.tar.gz"
  },
  "test":{
   "commands":[
    "xenon -v",
    "xenon -v",
    "xenon -v"
   ],
   "imports":[
    "xenon",
    "xenon",
    "xenon"
   ]
  }
 },
 "name":"xenon",
 "new_version":"0.7.0",
 "pinning_version":"2019.10.01",
 "raw_meta_yaml":"{% set name = \"xenon\" %}\n{% set version = \"0.7.0\" %}\n{% set sha256 = \"5e6433c9297d965bf666256a0a030b6e13660ab87680220c4eb07241f101625b\" %}\n\n\npackage:\n  name: {{ name|lower }}\n  version: {{ version }}\n\nsource:\n  fn: {{ name }}-{{ version }}.tar.gz\n  url: https://pypi.io/packages/source/{{ name[0] }}/{{ name }}/{{ name }}-{{ version }}.tar.gz\n  sha256: {{ sha256 }}\n\nbuild:\n  noarch: python\n  number: 0\n  script: python setup.py install --single-version-externally-managed --record record.txt\n  entry_points:\n    - xenon = xenon:main\n\nrequirements:\n  build:\n    - python\n    - setuptools\n  run:\n    - radon\n    - requests >=2.0\n    - pyaml >=3.11\n    - python\n\ntest:\n  imports:\n    - xenon\n  commands:\n    - xenon -v\n\nabout:\n  home: https://github.com/rubik/xenon\n  license: MIT\n  license_family: MIT\n  license_file: '{{ environ[\"RECIPE_DIR\"] }}/LICENSE'\n  summary: 'Monitor code metrics for Python on your CI server'\n\n  description: |\n    Xenon is a monitoring tool based on Radon. It monitors your code\u2019s complexity.\n    Ideally, Xenon is run every time you commit code. Through command line options,\n    you can set various thresholds for the complexity of your code. It will fail \n    (i.e. it will exit with a non-zero exit code) when any of these requirements is\n    not met.\n\nextra:\n  recipe-maintainers:\n    - IgorTG\n",
 "req":{
  "__set__":true,
  "elements":[
   "pyaml",
   "python",
   "radon",
   "requests",
   "setuptools"
  ]
 },
 "requirements":{
  "build":{
   "__set__":true,
   "elements":[
    "python",
    "setuptools"
   ]
  },
  "host":{
   "__set__":true,
   "elements":[]
  },
  "run":{
   "__set__":true,
   "elements":[
    "pyaml",
    "python",
    "radon",
    "requests"
   ]
  },
  "test":{
   "__set__":true,
   "elements":[]
  }
 },
 "smithy_version":"3.5.0",
 "strong_exports":false,
 "total_requirements":{
  "build":{
   "__set__":true,
   "elements":[
    "python",
    "setuptools"
   ]
  },
  "host":{
   "__set__":true,
   "elements":[]
  },
  "run":{
   "__set__":true,
   "elements":[
    "pyaml >=3.11",
    "python",
    "radon",
    "requests >=2.0"
   ]
  },
  "test":{
   "__set__":true,
   "elements":[]
  }
 },
 "url":"https://pypi.io/packages/source/x/xenon/xenon-0.5.5.tar.gz",
 "version":"0.7.0"
}