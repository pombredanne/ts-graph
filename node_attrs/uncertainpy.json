{
 "PRed":[
  {
   "PR":{
    "__lazy_json__":"pr_json/375677989.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"MatplotlibBase",
    "migrator_version":0,
    "name":"matplotlib-to-matplotlib-base"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/380948954.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"Version",
    "migrator_version":0,
    "version":"1.2.1"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  }
 ],
 "bad":false,
 "conda-forge.yml":{},
 "feedstock_name":"uncertainpy",
 "hash_type":"sha256",
 "meta_yaml":{
  "about":{
   "description":"Uncertainpy is a python toolbox for uncertainty quantification and sensitivity analysis tailored towards computational\nneuroscience.\n\nUncertainpy is model independent and treats the model as a black box where the model can be left unchanged. Uncertainpy\nimplements both quasi-Monte Carlo methods and polynomial chaos expansions using either point collocation or the\npseudo-spectral method. Both of the polynomial chaos expansion methods have support for the rosenblatt transformation\nto handle dependent input parameters.\n\nUncertainpy is feature based, i.e., if applicable, it recognizes and calculates the uncertainty in features of the model,\nas well as the model itself. Examples of features in neuroscience can be spike timing and the action potential shape.\n\nUncertainpy is tailored towards neuroscience models, and comes with several common neuroscience models and features\nbuilt in, but new models and features can easily be implemented. It should be noted that while Uncertainpy is tailored\ntowards neuroscience, the implemented methods are general, and Uncertainpy can be used for many other types of models\nand features within other fields.\n",
   "dev_url":"https://github.com/simetenn/uncertainpy",
   "doc_url":"https://uncertainpy.readthedocs.io/en/latest/?badge=latest",
   "home":"https://github.com/simetenn/uncertainpy",
   "license":"GPL-3.0",
   "license_family":"GPL",
   "license_file":"LICENSE.txt",
   "summary":"A python toolbox for uncertainty quantification and sensitivity analysis tailored towards neuroscience models."
  },
  "build":{
   "noarch":"python",
   "number":"0",
   "script":" -m pip install . --no-deps --ignore-installed -vv "
  },
  "extra":{
   "recipe-maintainers":[
    "volpatto",
    "simetenn",
    "volpatto",
    "simetenn",
    "volpatto",
    "simetenn"
   ]
  },
  "package":{
   "name":"uncertainpy",
   "version":"1.2.1"
  },
  "requirements":{
   "host":[
    "pip",
    "python >=3",
    "pip",
    "python >=3",
    "pip",
    "python >=3"
   ],
   "run":[
    "chaospy",
    "h5py",
    "matplotlib-base >=2",
    "multiprocess",
    "numpy",
    "python",
    "salib",
    "scipy",
    "seaborn",
    "six",
    "tqdm",
    "xvfbwrapper",
    "chaospy",
    "h5py",
    "matplotlib-base >=2",
    "multiprocess",
    "numpy",
    "python",
    "salib",
    "scipy",
    "seaborn",
    "six",
    "tqdm",
    "xvfbwrapper",
    "chaospy",
    "h5py",
    "matplotlib-base >=2",
    "multiprocess",
    "numpy",
    "python",
    "salib",
    "scipy",
    "seaborn",
    "six",
    "tqdm",
    "xvfbwrapper"
   ]
  },
  "source":{
   "sha256":"e631ae5debe2523daa35119a406d78c0c05b18b695f28f2b9ef91dc29d23973f",
   "url":"https://pypi.io/packages/source/u/uncertainpy/uncertainpy-1.2.1.tar.gz"
  },
  "test":{
   "imports":[
    "uncertainpy",
    "uncertainpy.core",
    "uncertainpy.features",
    "uncertainpy.models",
    "uncertainpy.plotting",
    "uncertainpy.plotting.prettyplot",
    "uncertainpy.utils",
    "uncertainpy",
    "uncertainpy.core",
    "uncertainpy.features",
    "uncertainpy.models",
    "uncertainpy.plotting",
    "uncertainpy.plotting.prettyplot",
    "uncertainpy.utils",
    "uncertainpy",
    "uncertainpy.core",
    "uncertainpy.features",
    "uncertainpy.models",
    "uncertainpy.plotting",
    "uncertainpy.plotting.prettyplot",
    "uncertainpy.utils"
   ]
  }
 },
 "name":"uncertainpy",
 "new_version":"1.2.1",
 "pinning_version":"2020.02.20",
 "raw_meta_yaml":"{% set name = \"uncertainpy\" %}\n{% set version = \"1.2.1\" %}\n\npackage:\n  name: {{ name|lower }}\n  version: {{ version }}\n\nsource:\n  url: https://pypi.io/packages/source/{{ name[0] }}/{{ name }}/{{ name }}-{{ version }}.tar.gz\n  sha256: e631ae5debe2523daa35119a406d78c0c05b18b695f28f2b9ef91dc29d23973f\n\nbuild:\n  number: 0\n  noarch: python\n  script: '{{ PYTHON }} -m pip install . --no-deps --ignore-installed -vv '\n\nrequirements:\n  host:\n    - pip\n    - python >=3\n  run:\n    - chaospy\n    - h5py\n    - matplotlib-base >=2\n    - multiprocess\n    - numpy\n    - python\n    - salib\n    - scipy\n    - seaborn\n    - six\n    - tqdm\n    - xvfbwrapper\n\ntest:\n  imports:\n    - uncertainpy\n    - uncertainpy.core\n    - uncertainpy.features\n    - uncertainpy.models\n    - uncertainpy.plotting\n    - uncertainpy.plotting.prettyplot\n    - uncertainpy.utils\n\nabout:\n  home: https://github.com/simetenn/uncertainpy\n  license: GPL-3.0\n  license_family: GPL\n  license_file: LICENSE.txt\n  summary: A python toolbox for uncertainty quantification and sensitivity analysis tailored towards neuroscience models.\n  description: |\n    Uncertainpy is a python toolbox for uncertainty quantification and sensitivity analysis tailored towards computational \n    neuroscience.\n\n    Uncertainpy is model independent and treats the model as a black box where the model can be left unchanged. Uncertainpy \n    implements both quasi-Monte Carlo methods and polynomial chaos expansions using either point collocation or the \n    pseudo-spectral method. Both of the polynomial chaos expansion methods have support for the rosenblatt transformation \n    to handle dependent input parameters.\n\n    Uncertainpy is feature based, i.e., if applicable, it recognizes and calculates the uncertainty in features of the model,\n    as well as the model itself. Examples of features in neuroscience can be spike timing and the action potential shape.\n\n    Uncertainpy is tailored towards neuroscience models, and comes with several common neuroscience models and features \n    built in, but new models and features can easily be implemented. It should be noted that while Uncertainpy is tailored \n    towards neuroscience, the implemented methods are general, and Uncertainpy can be used for many other types of models \n    and features within other fields.\n  doc_url: https://uncertainpy.readthedocs.io/en/latest/?badge=latest\n  dev_url: https://github.com/simetenn/uncertainpy\n\nextra:\n  recipe-maintainers:\n    - volpatto\n    - simetenn\n",
 "req":{
  "__set__":true,
  "elements":[
   "chaospy",
   "h5py",
   "matplotlib-base",
   "multiprocess",
   "numpy",
   "pip",
   "python",
   "salib",
   "scipy",
   "seaborn",
   "six",
   "tqdm",
   "xvfbwrapper"
  ]
 },
 "requirements":{
  "build":{
   "__set__":true,
   "elements":[]
  },
  "host":{
   "__set__":true,
   "elements":[
    "pip",
    "python"
   ]
  },
  "run":{
   "__set__":true,
   "elements":[
    "chaospy",
    "h5py",
    "matplotlib-base",
    "multiprocess",
    "numpy",
    "python",
    "salib",
    "scipy",
    "seaborn",
    "six",
    "tqdm",
    "xvfbwrapper"
   ]
  },
  "test":{
   "__set__":true,
   "elements":[]
  }
 },
 "smithy_version":"3.6.8",
 "strong_exports":false,
 "total_requirements":{
  "build":{
   "__set__":true,
   "elements":[]
  },
  "host":{
   "__set__":true,
   "elements":[
    "pip",
    "python >=3"
   ]
  },
  "run":{
   "__set__":true,
   "elements":[
    "chaospy",
    "h5py",
    "matplotlib-base >=2",
    "multiprocess",
    "numpy",
    "python",
    "salib",
    "scipy",
    "seaborn",
    "six",
    "tqdm",
    "xvfbwrapper"
   ]
  },
  "test":{
   "__set__":true,
   "elements":[]
  }
 },
 "url":"https://pypi.io/packages/source/u/uncertainpy/uncertainpy-1.2.0.tar.gz",
 "version":"1.2.1"
}