{
 "PRed":[
  {
   "data":{
    "bot_rerun":false,
    "migrator_name":"Version",
    "migrator_version":0,
    "version":"3.1.0"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/197277229.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"Compiler",
    "migrator_version":0
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/198516439.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"Version",
    "migrator_version":0,
    "version":"3.1.1"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/204299688.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"Pinning",
    "migrator_version":0
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/210192122.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"Version",
    "migrator_version":0,
    "version":"3.1.2"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/211437688.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"CompilerRebuild",
    "migrator_version":1,
    "name":"Python 3.7, GCC 7, R 3.5.1, openBLAS 0.3.2"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/226731945.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"Version",
    "migrator_version":0,
    "version":"3.1.3"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/230270725.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"Version",
    "migrator_version":0,
    "version":"4.0.0"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/264681828.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"Version",
    "migrator_version":0,
    "version":"4.0.1"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/270705260.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"Version",
    "migrator_version":0,
    "version":"3.1.4"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/282253416.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"ArchRebuild",
    "migrator_version":1,
    "name":"aarch64 and ppc64le addition"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/308257046.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"GFortranOSXRebuild",
    "migrator_version":0,
    "name":"fortran_compiler_stub-7"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/325453504.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"Version",
    "migrator_version":0,
    "version":"4.0.2"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/400047457.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"Version",
    "migrator_version":0,
    "version":"4.0.3"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  }
 ],
 "bad":false,
 "conda-forge.yml":{
  "provider":{
   "linux_aarch64":"default",
   "linux_ppc64le":"default"
  }
 },
 "feedstock_name":"openmpi",
 "hash_type":"sha256",
 "meta_yaml":{
  "about":{
   "description":"The Open MPI Project is an open source Message Passing Interface\nimplementation that is developed and maintained by a consortium of academic,\nresearch, and industry partners.\n",
   "dev_url":"https://github.com/open-mpi/ompi",
   "doc_url":"https://www.open-mpi.org/doc/",
   "home":"https://www.open-mpi.org/",
   "license":"BSD-3-Clause",
   "license_family":"BSD",
   "license_file":"LICENSE",
   "summary":"An open source Message Passing Interface implementation."
  },
  "build":{
   "number":"1",
   "skip":true
  },
  "extra":{
   "recipe-maintainers":[
    "astrofrog-conda-forge",
    "bekozi",
    "dalcinl",
    "leofang",
    "minrk",
    "msarahan",
    "ocefpaf",
    "astrofrog-conda-forge",
    "bekozi",
    "dalcinl",
    "leofang",
    "minrk",
    "msarahan",
    "ocefpaf",
    "astrofrog-conda-forge",
    "bekozi",
    "dalcinl",
    "leofang",
    "minrk",
    "msarahan",
    "ocefpaf"
   ]
  },
  "outputs":[
   {
    "build":{
     "ignore_run_exports":[
      "cudatoolkit"
     ],
     "run_exports":[
      "openmpi"
     ]
    },
    "name":"openmpi",
    "requirements":{
     "build":[
      "c_compiler_stub",
      "cxx_compiler_stub",
      "fortran_compiler_stub",
      "perl 5.26.2"
     ],
     "host":[
      "zlib"
     ],
     "run":[
      "zlib",
      "mpi 1.0 openmpi"
     ],
     "run_constrained":null
    },
    "script":"build-mpi.sh",
    "test":{
     "files":[
      "mpiexec.sh",
      "tests/helloworld.sh"
     ],
     "script":"run_test.sh"
    }
   },
   {
    "build":{
     "script":[
      "echo 'ok'"
     ]
    },
    "name":"openmpi-mpicc",
    "requirements":{
     "run":[
      "openmpi",
      "c_compiler_stub"
     ]
    },
    "test":{
     "files":[
      "mpiexec.sh",
      "tests/helloworld.c"
     ],
     "script":"run_test.sh"
    }
   },
   {
    "build":{
     "script":[
      "echo 'ok'"
     ]
    },
    "name":"openmpi-mpicxx",
    "requirements":{
     "run":[
      "openmpi",
      "cxx_compiler_stub"
     ]
    },
    "test":{
     "files":[
      "mpiexec.sh",
      "tests/helloworld.cxx"
     ],
     "script":"run_test.sh"
    }
   },
   {
    "build":{
     "script":[
      "echo 'ok'"
     ]
    },
    "name":"openmpi-mpifort",
    "requirements":{
     "run":[
      "openmpi",
      "fortran_compiler_stub"
     ]
    },
    "test":{
     "files":[
      "mpiexec.sh",
      "tests/helloworld.f",
      "tests/helloworld.f90"
     ],
     "script":"run_test.sh"
    }
   },
   {
    "build":{
     "ignore_run_exports":[
      "cudatoolkit"
     ],
     "run_exports":[
      "openmpi"
     ]
    },
    "name":"openmpi",
    "requirements":{
     "build":[
      "c_compiler_stub",
      "cxx_compiler_stub",
      "fortran_compiler_stub",
      "make",
      "perl 5.26.2"
     ],
     "host":[
      "zlib"
     ],
     "run":[
      "zlib",
      "mpi 1.0 openmpi"
     ],
     "run_constrained":null
    },
    "script":"build-mpi.sh",
    "test":{
     "files":[
      "mpiexec.sh",
      "tests/helloworld.sh"
     ],
     "script":"run_test.sh"
    }
   },
   {
    "build":{
     "script":[
      "echo \"\""
     ]
    },
    "name":"openmpi-mpicc",
    "requirements":{
     "run":[
      "openmpi",
      "c_compiler_stub"
     ]
    },
    "test":{
     "files":[
      "mpiexec.sh",
      "tests/helloworld.c"
     ],
     "script":"run_test.sh"
    }
   },
   {
    "build":{
     "script":[
      "echo \"\""
     ]
    },
    "name":"openmpi-mpicxx",
    "requirements":{
     "run":[
      "openmpi",
      "cxx_compiler_stub"
     ]
    },
    "test":{
     "files":[
      "mpiexec.sh",
      "tests/helloworld.cxx"
     ],
     "script":"run_test.sh"
    }
   },
   {
    "build":{
     "script":[
      "echo \"\""
     ]
    },
    "name":"openmpi-mpifort",
    "requirements":{
     "run":[
      "openmpi",
      "fortran_compiler_stub"
     ]
    },
    "test":{
     "files":[
      "mpiexec.sh",
      "tests/helloworld.f",
      "tests/helloworld.f90"
     ],
     "script":"run_test.sh"
    }
   },
   {
    "build":{
     "ignore_run_exports":[
      "cudatoolkit"
     ],
     "run_exports":[
      "openmpi"
     ]
    },
    "name":"openmpi",
    "requirements":{
     "build":[
      "c_compiler_stub",
      "cxx_compiler_stub",
      "fortran_compiler_stub",
      "cuda_compiler_stub",
      "make",
      "perl 5.26.2"
     ],
     "host":[
      "zlib"
     ],
     "run":[
      "zlib",
      "mpi 1.0 openmpi"
     ],
     "run_constrained":[
      "cudatoolkit >="
     ]
    },
    "script":"build-mpi.sh",
    "test":{
     "files":[
      "mpiexec.sh",
      "tests/helloworld.sh"
     ],
     "script":"run_test.sh"
    }
   },
   {
    "build":{
     "script":[
      "echo 'ok'"
     ]
    },
    "name":"openmpi-mpicc",
    "requirements":{
     "run":[
      "openmpi",
      "c_compiler_stub"
     ]
    },
    "test":{
     "files":[
      "mpiexec.sh",
      "tests/helloworld.c"
     ],
     "script":"run_test.sh"
    }
   },
   {
    "build":{
     "script":[
      "echo 'ok'"
     ]
    },
    "name":"openmpi-mpicxx",
    "requirements":{
     "run":[
      "openmpi",
      "cxx_compiler_stub"
     ]
    },
    "test":{
     "files":[
      "mpiexec.sh",
      "tests/helloworld.cxx"
     ],
     "script":"run_test.sh"
    }
   },
   {
    "build":{
     "script":[
      "echo 'ok'"
     ]
    },
    "name":"openmpi-mpifort",
    "requirements":{
     "run":[
      "openmpi",
      "fortran_compiler_stub"
     ]
    },
    "test":{
     "files":[
      "mpiexec.sh",
      "tests/helloworld.f",
      "tests/helloworld.f90"
     ],
     "script":"run_test.sh"
    }
   }
  ],
  "package":{
   "name":"openmpi-mpi",
   "version":"4.0.3"
  },
  "source":{
   "fn":"openmpi-4.0.3.tar.bz2",
   "sha256":"1402feced8c3847b3ab8252165b90f7d1fa28c23b6b2ca4632b6e4971267fd03",
   "url":"https://www.open-mpi.org/software/ompi/v4.0/downloads/openmpi-4.0.3.tar.bz2"
  }
 },
 "name":"openmpi-mpi",
 "new_version":"4.0.3",
 "new_version_attempts":{
  "4.0.3":1
 },
 "outputs_names":[
  "openmpi",
  "openmpi-mpicc",
  "openmpi-mpicxx",
  "openmpi-mpifort"
 ],
 "pinning_version":"2020.04.07",
 "raw_meta_yaml":"{% set version = \"4.0.3\" %}\n{% set major = version.rpartition('.')[0] %}\n\npackage:\n  # must not match any outputs for requirements to be handled correctly\n  name: openmpi-mpi\n  version: {{ version }}\n\nsource:\n  fn: openmpi-{{ version }}.tar.bz2\n  url: https://www.open-mpi.org/software/ompi/v{{ major }}/downloads/openmpi-{{ version }}.tar.bz2\n  sha256: 1402feced8c3847b3ab8252165b90f7d1fa28c23b6b2ca4632b6e4971267fd03\n\nbuild:\n  number: 1\n  skip: true  # [win or (linux64 and cuda_compiler_version != '9.2')]\n\noutputs:\n  - name: openmpi\n    script: build-mpi.sh\n    build:\n      run_exports:\n        - {{ pin_subpackage('openmpi', min_pin='x.x.x', max_pin='x.x') }}\n      ignore_run_exports:\n        - cudatoolkit\n    requirements:\n      build:\n        - {{ compiler('c') }}\n        - {{ compiler('cxx') }}\n        - {{ compiler('fortran') }}\n        - {{ compiler('cuda') }}  # [linux64]\n        - make  # [unix]\n        - perl 5.26.2\n      host:\n        - zlib\n      run:\n        - zlib\n        - mpi 1.0 openmpi\n      run_constrained:\n        - cudatoolkit >={{ cuda_compiler_version }}  # [linux64]\n    test:\n      script: run_test.sh\n      files:\n        - mpiexec.sh\n        - tests/helloworld.sh\n\n  - name: openmpi-mpicc\n    build:\n      script:\n        - echo 'ok'  # [not osx]\n        # make CONDA_BUILD_SYSROOT a 'used variable'\n        # so that conda-build knows to pass it to the test env\n        - echo \"{{CONDA_BUILD_SYSROOT}}\"  # [osx]\n    requirements:\n      run:\n        - {{ pin_subpackage('openmpi', exact=True) }}\n        # host C compilers work fine (better) on mac\n        - {{ compiler('c') }}\n    test:\n      script: run_test.sh\n      files:\n        - mpiexec.sh\n        - tests/helloworld.c\n\n  - name: openmpi-mpicxx\n    build:\n      script:\n        - echo 'ok'  # [not osx]\n        # make CONDA_BUILD_SYSROOT a 'used variable'\n        # so that conda-build knows to pass it to the test env\n        - echo \"{{CONDA_BUILD_SYSROOT}}\"  # [osx]\n    requirements:\n      run:\n        - {{ pin_subpackage('openmpi', exact=True) }}\n        # host C compilers work fine (better) on mac\n        - {{ compiler('cxx') }}\n    test:\n      script: run_test.sh\n      files:\n        - mpiexec.sh\n        - tests/helloworld.cxx\n\n  - name: openmpi-mpifort\n    build:\n      script:\n        - echo 'ok'  # [not osx]\n        # make CONDA_BUILD_SYSROOT a 'used variable'\n        # so that conda-build knows to pass it to the test env\n        - echo \"{{CONDA_BUILD_SYSROOT}}\"  # [osx]\n    requirements:\n      run:\n        - {{ pin_subpackage('openmpi', exact=True) }}\n        - {{ compiler('fortran') }}\n    test:\n      script: run_test.sh\n      files:\n        - mpiexec.sh\n        - tests/helloworld.f\n        - tests/helloworld.f90\n\nabout:\n  home: https://www.open-mpi.org/\n  license: BSD-3-Clause\n  license_family: BSD\n  license_file: LICENSE\n  summary: An open source Message Passing Interface implementation.\n  description: |\n    The Open MPI Project is an open source Message Passing Interface\n    implementation that is developed and maintained by a consortium of academic,\n    research, and industry partners.\n  doc_url: https://www.open-mpi.org/doc/\n  dev_url: https://github.com/open-mpi/ompi\n\nextra:\n  recipe-maintainers:\n    - astrofrog-conda-forge\n    - bekozi\n    - dalcinl\n    - leofang\n    - minrk\n    - msarahan\n    - ocefpaf\n",
 "req":{
  "__set__":true,
  "elements":[
   "c_compiler_stub",
   "cuda_compiler_stub",
   "cxx_compiler_stub",
   "fortran_compiler_stub",
   "make",
   "mpi",
   "openmpi",
   "perl",
   "zlib"
  ]
 },
 "requirements":{
  "build":{
   "__set__":true,
   "elements":[
    "c_compiler_stub",
    "cuda_compiler_stub",
    "cxx_compiler_stub",
    "fortran_compiler_stub",
    "make",
    "perl"
   ]
  },
  "host":{
   "__set__":true,
   "elements":[
    "zlib"
   ]
  },
  "run":{
   "__set__":true,
   "elements":[
    "c_compiler_stub",
    "cxx_compiler_stub",
    "fortran_compiler_stub",
    "mpi",
    "openmpi",
    "zlib"
   ]
  },
  "test":{
   "__set__":true,
   "elements":[]
  }
 },
 "smithy_version":"No azure token. Create a token and\nput it in ~/.conda-smithy/azure.token\n3.6.15",
 "strong_exports":false,
 "total_requirements":{
  "build":{
   "__set__":true,
   "elements":[
    "c_compiler_stub",
    "cuda_compiler_stub",
    "cxx_compiler_stub",
    "fortran_compiler_stub",
    "make",
    "perl 5.26.2"
   ]
  },
  "host":{
   "__set__":true,
   "elements":[
    "zlib"
   ]
  },
  "run":{
   "__set__":true,
   "elements":[
    "c_compiler_stub",
    "cxx_compiler_stub",
    "fortran_compiler_stub",
    "mpi 1.0 openmpi",
    "openmpi",
    "zlib"
   ]
  },
  "test":{
   "__set__":true,
   "elements":[]
  }
 },
 "url":"https://www.open-mpi.org/software/ompi/v4.0/downloads/openmpi-4.0.1.tar.bz2",
 "version":"4.0.3"
}