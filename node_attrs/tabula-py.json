{
 "PRed":[
  {
   "data":{
    "bot_rerun":false,
    "migrator_name":"Version",
    "migrator_version":0,
    "version":"1.2.0"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/222670731.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"CompilerRebuild",
    "migrator_version":1,
    "name":"Python 3.7, GCC 7, R 3.5.1, openBLAS 0.3.2"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  },
  {
   "data":{
    "bot_rerun":false,
    "migrator_name":"Version",
    "migrator_version":0,
    "version":"1.4.0"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/303852071.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"Version",
    "migrator_version":0,
    "version":"1.4.1"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/301769808.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"Version",
    "migrator_version":0,
    "version":"1.3.1"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/336102818.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"MigrationYaml",
    "migrator_object_version":1,
    "migrator_version":0,
    "name":"python38"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/345494434.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"Version",
    "migrator_version":0,
    "version":"1.4.2"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/353338207.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"Version",
    "migrator_version":0,
    "version":"1.4.3"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/359194327.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"Version",
    "migrator_version":0,
    "version":"2.0.0"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/360509278.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"Version",
    "migrator_version":0,
    "version":"2.0.1"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/404811962.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"MigrationYaml",
    "migrator_object_version":1,
    "migrator_version":0,
    "name":"pypy"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  }
 ],
 "bad":false,
 "conda-forge.yml":{
  "provider":{
   "win":"azure"
  }
 },
 "feedstock_name":"tabula-py",
 "hash_type":"sha256",
 "meta_yaml":{
  "about":{
   "description":"tabula-py is a simple Python wrapper of tabula-java, which can read\ntable of PDF. You can read tables from PDF and convert into pandas's\nDataFrame. tabula-py also enables you to convert a PDF file into\nCSV/TSV/JSON file.\n",
   "dev_url":"https://github.com/chezou/tabula-py",
   "doc_url":"https://tabula.technology/",
   "home":"https://github.com/chezou/tabula-py",
   "license":"MIT",
   "license_family":"MIT",
   "license_file":"LICENSE",
   "summary":"Simple wrapper of tabula-java: extract table from PDF into pandas DataFrame"
  },
  "build":{
   "number":"1",
   "script":[
    "python -m pip install --no-deps --ignore-installed .",
    "python -m pip install --no-deps --ignore-installed .",
    "python -m pip install --no-deps --ignore-installed ."
   ]
  },
  "extra":{
   "recipe-maintainers":[
    "CurtLH",
    "sodre",
    "CurtLH",
    "sodre",
    "CurtLH",
    "sodre"
   ]
  },
  "package":{
   "name":"tabula-py",
   "version":"1.4.1"
  },
  "requirements":{
   "host":[
    "python",
    "pip",
    "flake8",
    "python",
    "pip",
    "flake8",
    "python",
    "pip",
    "flake8"
   ],
   "run":[
    "python",
    "pandas",
    "numpy",
    "requests",
    "openjdk",
    "python",
    "pandas",
    "numpy",
    "requests",
    "openjdk",
    "python",
    "pandas",
    "numpy",
    "requests",
    "distro",
    "openjdk"
   ]
  },
  "source":{
   "sha256":"ac9eec0a342ebf4583e171bc667f04a1c5346c3ec35c5fe5e08009dd4433a9a1",
   "url":"https://pypi.io/packages/source/t/tabula-py/tabula-py-1.4.1.tar.gz"
  },
  "test":{
   "imports":[
    "tabula",
    "tabula",
    "tabula"
   ]
  }
 },
 "name":"tabula-py",
 "new_version":"2.1.0",
 "pinning_version":"2020.04.16.16.23.46",
 "raw_meta_yaml":"{% set name = \"tabula-py\" %}\n{% set version = \"1.4.1\" %}\n\npackage:\n  name: {{ name|lower }}\n  version: {{ version }}\n\nsource:\n  url: https://pypi.io/packages/source/{{ name[0] }}/{{ name }}/{{ name }}-{{ version }}.tar.gz\n  sha256: ac9eec0a342ebf4583e171bc667f04a1c5346c3ec35c5fe5e08009dd4433a9a1\n\nbuild:\n  number: 1\n  skip: True  # [py2k]\n  script:\n    - python -m pip install --no-deps --ignore-installed .\n\nrequirements:\n  host:\n    - python\n    - pip\n    - flake8\n  run:\n    - python\n    - pandas\n    - numpy\n    - requests\n    - distro  # [linux]\n    - openjdk\n\ntest:\n  imports:\n    - tabula\n\nabout:\n  home: https://github.com/chezou/tabula-py\n  license: MIT\n  license_family: MIT\n  license_file: LICENSE\n  summary: 'Simple wrapper of tabula-java: extract table from PDF into pandas DataFrame'\n  description: |\n    tabula-py is a simple Python wrapper of tabula-java, which can read \n    table of PDF. You can read tables from PDF and convert into pandas's \n    DataFrame. tabula-py also enables you to convert a PDF file into \n    CSV/TSV/JSON file.\n  doc_url: https://tabula.technology/\n  dev_url: https://github.com/chezou/tabula-py\n\nextra:\n  recipe-maintainers:\n    - CurtLH\n    - sodre\n",
 "req":{
  "__set__":true,
  "elements":[
   "distro",
   "flake8",
   "numpy",
   "openjdk",
   "pandas",
   "pip",
   "python",
   "requests"
  ]
 },
 "requirements":{
  "build":{
   "__set__":true,
   "elements":[]
  },
  "host":{
   "__set__":true,
   "elements":[
    "flake8",
    "pip",
    "python"
   ]
  },
  "run":{
   "__set__":true,
   "elements":[
    "distro",
    "numpy",
    "openjdk",
    "pandas",
    "python",
    "requests"
   ]
  },
  "test":{
   "__set__":true,
   "elements":[]
  }
 },
 "smithy_version":"No azure token. Create a token and\nput it in ~/.conda-smithy/azure.token\n3.6.16",
 "strong_exports":false,
 "total_requirements":{
  "build":{
   "__set__":true,
   "elements":[]
  },
  "host":{
   "__set__":true,
   "elements":[
    "flake8",
    "pip",
    "python"
   ]
  },
  "run":{
   "__set__":true,
   "elements":[
    "distro",
    "numpy",
    "openjdk",
    "pandas",
    "python",
    "requests"
   ]
  },
  "test":{
   "__set__":true,
   "elements":[]
  }
 },
 "url":"https://pypi.io/packages/source/t/tabula-py/tabula-py-1.4.1.tar.gz",
 "version":"1.4.1"
}