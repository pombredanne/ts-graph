{
 "PRed":[
  {
   "PR":{
    "__lazy_json__":"pr_json/196996633.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"Compiler",
    "migrator_version":0
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/227969628.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"Version",
    "migrator_version":0,
    "version":"1.0.2"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/233369473.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"CompilerRebuild",
    "migrator_version":1,
    "name":"Python 3.7, GCC 7, R 3.5.1, openBLAS 0.3.2"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/262373199.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"BlasRebuild",
    "migrator_version":0,
    "name":"blas2"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/274134671.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"Version",
    "migrator_version":0,
    "version":"1.0.4"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/274141450.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"Version",
    "migrator_version":0,
    "version":"1.0.3"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/314730806.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"Version",
    "migrator_version":0,
    "version":"1.1.0"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/336095942.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"MigrationYaml",
    "migrator_object_version":1,
    "migrator_version":0,
    "name":"python38"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/393085120.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"MigrationYaml",
    "migrator_object_version":1,
    "migrator_version":0,
    "name":"pypy"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/404754139.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"Version",
    "migrator_version":0,
    "version":"1.1.1"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  }
 ],
 "bad":false,
 "conda-forge.yml":{
  "provider":{
   "win":"azure"
  }
 },
 "feedstock_name":"mkl_random",
 "hash_type":"sha256",
 "meta_yaml":{
  "about":{
   "description":"NumPy-based implementation of random number generation sampling using Intel (R) Math Kernel Library, mirroring numpy.random, but exposing all choices of sampling algorithms available in MKL.",
   "home":"http://github.com/IntelPython/mkl_random",
   "license":"BSD 3-Clause",
   "license_file":"LICENSE.txt",
   "summary":"Intel (R) MKL-powered package for sampling from common probability distributions into NumPy arrays."
  },
  "build":{
   "ignore_run_exports":[
    "blas",
    "blas",
    "blas"
   ],
   "number":"0"
  },
  "extra":{
   "recipe-maintainers":[
    "oleksandr-pavlyk",
    "oleksandr-pavlyk",
    "oleksandr-pavlyk"
   ]
  },
  "package":{
   "name":"mkl_random",
   "version":"1.1.1"
  },
  "requirements":{
   "build":[
    "c_compiler_stub",
    "cxx_compiler_stub",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "c_compiler_stub",
    "cxx_compiler_stub"
   ],
   "host":[
    "python",
    "setuptools",
    "mkl-devel",
    "cython",
    "numpy",
    "python",
    "setuptools",
    "mkl-devel",
    "cython",
    "numpy 1.14.*",
    "python",
    "setuptools",
    "mkl-devel",
    "cython",
    "numpy"
   ],
   "run":[
    "python",
    "mkl",
    "numpy",
    "python",
    "mkl",
    "numpy",
    "python",
    "mkl",
    "numpy"
   ]
  },
  "source":{
   "sha256":"e57d2d57e2796f408fd64fd723bf14259537965af50dd92be049417edfba8816",
   "url":"https://github.com/IntelPython/mkl_random/archive/v1.1.1.tar.gz"
  },
  "test":{
   "commands":[
    "nosetests -v mkl_random",
    "nosetests -v mkl_random",
    "nosetests -v mkl_random"
   ],
   "imports":[
    "mkl_random",
    "mkl_random.mklrand",
    "mkl_random",
    "mkl_random.mklrand",
    "mkl_random",
    "mkl_random.mklrand"
   ],
   "requires":[
    "nose",
    "numpy >=1.14",
    "nose",
    "numpy >=1.14",
    "nose",
    "numpy >=1.14"
   ]
  }
 },
 "name":"mkl_random",
 "new_version":"1.1.1",
 "new_version_attempts":{
  "1.1.1":1
 },
 "new_version_errors":{},
 "pinning_version":"2020.04.16.16.23.46",
 "raw_meta_yaml":"{% set version = \"1.1.1\" %}\n\npackage:\n  name: mkl_random\n  version: {{ version }}\n\nsource:\n  url: https://github.com/IntelPython/mkl_random/archive/v{{ version }}.tar.gz\n  sha256: e57d2d57e2796f408fd64fd723bf14259537965af50dd92be049417edfba8816\n\nbuild:\n  number: 0\n  skip: true  # [win and py27]\n  ignore_run_exports:\n    - blas\n\nrequirements:\n  build:\n    - {{ compiler('c') }}\n    - {{ compiler('cxx') }}\n  host:\n    - python\n    - setuptools\n    - mkl-devel\n    - cython\n    - numpy 1.14.*    # [osx]\n    - numpy    # [not osx]\n  run:\n    - python\n    - mkl\n    - {{ pin_compatible('numpy') }}\n\ntest:\n  commands:\n    - nosetests -v mkl_random\n  requires:\n    - nose\n    - numpy >=1.14\n  imports:\n    - mkl_random\n    - mkl_random.mklrand\n\nabout:\n  home: http://github.com/IntelPython/mkl_random\n  license: BSD 3-Clause\n  license_file: LICENSE.txt\n  description: NumPy-based implementation of random number generation sampling using Intel (R) Math Kernel Library, mirroring numpy.random, but exposing all choices\n    of sampling algorithms available in MKL.\n  summary: Intel (R) MKL-powered package for sampling from common probability distributions into NumPy arrays.\n\n\nextra:\n  recipe-maintainers:\n    - oleksandr-pavlyk\n",
 "req":{
  "__set__":true,
  "elements":[
   "c_compiler_stub",
   "cxx_compiler_stub",
   "cython",
   "mkl",
   "mkl-devel",
   "numpy",
   "python",
   "setuptools"
  ]
 },
 "requirements":{
  "build":{
   "__set__":true,
   "elements":[
    "c_compiler_stub",
    "cxx_compiler_stub"
   ]
  },
  "host":{
   "__set__":true,
   "elements":[
    "cython",
    "mkl-devel",
    "numpy",
    "python",
    "setuptools"
   ]
  },
  "run":{
   "__set__":true,
   "elements":[
    "mkl",
    "numpy",
    "python"
   ]
  },
  "test":{
   "__set__":true,
   "elements":[
    "nose",
    "numpy"
   ]
  }
 },
 "smithy_version":"No azure token. Create a token and\nput it in ~/.conda-smithy/azure.token\n3.6.16",
 "strong_exports":false,
 "total_requirements":{
  "build":{
   "__set__":true,
   "elements":[
    "c_compiler_stub",
    "cxx_compiler_stub"
   ]
  },
  "host":{
   "__set__":true,
   "elements":[
    "cython",
    "mkl-devel",
    "numpy",
    "numpy 1.14.*",
    "python",
    "setuptools"
   ]
  },
  "run":{
   "__set__":true,
   "elements":[
    "mkl",
    "numpy",
    "python"
   ]
  },
  "test":{
   "__set__":true,
   "elements":[
    "nose",
    "numpy >=1.14"
   ]
  }
 },
 "url":"https://github.com/IntelPython/mkl_random/archive/v1.1.0.tar.gz",
 "version":"1.1.1"
}