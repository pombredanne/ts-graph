{
 "PRed":[
  {
   "PR":{
    "__lazy_json__":"pr_json/303617724.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"RBaseRebuild",
    "migrator_version":0,
    "name":"r-base-3.6.1"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/414064017.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"MigrationYaml",
    "migrator_object_version":2,
    "migrator_version":0,
    "name":"r400"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  }
 ],
 "bad":false,
 "conda-forge.yml":{
  "bot":{
   "automerge":true
  },
  "provider":{
   "win":"azure"
  }
 },
 "feedstock_name":"r-metacycle",
 "hash_type":"sha256",
 "meta_yaml":{
  "about":{
   "home":"https://CRAN.R-project.org/package=MetaCycle",
   "license":"GPL (>= 2)",
   "license_family":"GPL3",
   "license_file":"/lib/R/share/licenses/GPL-2",
   "summary":"There are two functions-meta2d and meta3d for detecting rhythmic signals from time-series datasets. For analyzing time-series datasets without individual information, 'meta2d' is  suggested, which could incorporates multiple methods from ARSER,  JTK_CYCLE and Lomb-Scargle in the detection of interested rhythms. For  analyzing time-series datasets with individual information, 'meta3d' is  suggested, which takes use of any one of these three methods to analyze  time-series data individual by individual and gives out integrated values  based on analysis result of each individual."
  },
  "build":{
   "merge_build_host":true,
   "noarch":"generic",
   "number":"2",
   "rpaths":[
    "lib/R/lib/",
    "lib/",
    "lib/R/lib/",
    "lib/",
    "lib/R/lib/",
    "lib/"
   ]
  },
  "extra":{
   "recipe-maintainers":[
    "conda-forge/r",
    "conda-forge/r",
    "conda-forge/r"
   ]
  },
  "package":{
   "name":"r-metacycle",
   "version":"1.2.0"
  },
  "requirements":{
   "build":null,
   "host":[
    "r-base",
    "r-gnm",
    "r-base",
    "r-gnm",
    "r-base",
    "r-gnm"
   ],
   "run":[
    "r-base",
    "r-gnm",
    "r-base",
    "r-gnm",
    "r-base",
    "r-gnm"
   ]
  },
  "source":{
   "sha256":"1300172b57264c71d0a4fb877a7c102db2a1f01d4896dfa32c179ccfb2ae01d2",
   "url":[
    "https://cran.r-project.org/src/contrib/MetaCycle_1.2.0.tar.gz",
    "https://cran.r-project.org/src/contrib/Archive/MetaCycle/MetaCycle_1.2.0.tar.gz",
    "https://cran.r-project.org/src/contrib/MetaCycle_1.2.0.tar.gz",
    "https://cran.r-project.org/src/contrib/Archive/MetaCycle/MetaCycle_1.2.0.tar.gz",
    "https://cran.r-project.org/src/contrib/MetaCycle_1.2.0.tar.gz",
    "https://cran.r-project.org/src/contrib/Archive/MetaCycle/MetaCycle_1.2.0.tar.gz"
   ]
  },
  "test":{
   "commands":[
    "\"%R%\" -e \"library('MetaCycle')\"",
    "$R -e \"library('MetaCycle')\"",
    "$R -e \"library('MetaCycle')\""
   ]
  }
 },
 "name":"r-metacycle",
 "new_version":"1.2.0",
 "pinning_version":"2020.05.04.19.59.17",
 "raw_meta_yaml":"{% set version = '1.2.0' %}\n{% set posix = 'm2-' if win else '' %}\n{% set native = 'm2w64-' if win else '' %}\n\npackage:\n  name: r-metacycle\n  version: {{ version|replace(\"-\", \"_\") }}\n\nsource:\n  url:\n    - {{ cran_mirror }}/src/contrib/MetaCycle_{{ version }}.tar.gz\n    - {{ cran_mirror }}/src/contrib/Archive/MetaCycle/MetaCycle_{{ version }}.tar.gz\n  sha256: 1300172b57264c71d0a4fb877a7c102db2a1f01d4896dfa32c179ccfb2ae01d2\n\nbuild:\n  merge_build_host: True  # [win]\n  number: 2\n  noarch: generic\n  rpaths:\n    - lib/R/lib/\n    - lib/\n\nrequirements:\n  build:\n    - {{ posix }}zip               # [win]\n  host:\n    - r-base\n    - r-gnm\n  run:\n    - r-base\n    - r-gnm\n\ntest:\n  commands:\n    - $R -e \"library('MetaCycle')\"           # [not win]\n    - \"\\\"%R%\\\" -e \\\"library('MetaCycle')\\\"\"  # [win]\n\nabout:\n  home: https://CRAN.R-project.org/package=MetaCycle\n  license: GPL (>= 2)\n  summary: There are two functions-meta2d and meta3d for detecting rhythmic signals from time-series\n    datasets. For analyzing time-series datasets without individual information, 'meta2d'\n    is  suggested, which could incorporates multiple methods from ARSER,  JTK_CYCLE\n    and Lomb-Scargle in the detection of interested rhythms. For  analyzing time-series\n    datasets with individual information, 'meta3d' is  suggested, which takes use of\n    any one of these three methods to analyze  time-series data individual by individual\n    and gives out integrated values  based on analysis result of each individual.\n  license_family: GPL3\n  license_file: '{{ environ[\"PREFIX\"] }}/lib/R/share/licenses/GPL-2'\n\nextra:\n  recipe-maintainers:\n    - conda-forge/r\n\n# Package: MetaCycle\n# Type: Package\n# Title: Evaluate Periodicity in Large Scale Data\n# Version: 1.2.0\n# Authors@R: c( person(\"Gang\", \"Wu\",, email = \"wggucas@gmail.com\", role = c(\"aut\", \"cre\")), person(\"Ron\", \"Anafi\",, email = \"ranafi@gmail.com\", role = c(\"aut\", \"ctb\")), person(\"John\", \"Hogenesch\",, email = \"hogenesch@gmail.com\", role = c(\"aut\", \"ctb\")), person(\"Michael\", \"Hughes\",, email = \"michael.evan.hughes@gmail.com\", role = c(\"aut\", \"ctb\")), person(\"Karl\", \"Kornacker\",, email = \"kornacker@midohio.twcbc.com\", role = c(\"aut\", \"ctb\")), person(\"Xavier\", \"Li\",, email = \"haohan.li.97@gmail.com\", role = c(\"aut\", \"ctb\")), person(\"Matthew\", \"Carlucci\",, email = \"matt.carlucci.96@gmail.com\", role = c(\"aut\", \"ctb\")) )\n# Description: There are two functions-meta2d and meta3d for detecting rhythmic signals from time-series datasets. For analyzing time-series datasets without individual information, 'meta2d' is  suggested, which could incorporates multiple methods from ARSER,  JTK_CYCLE and Lomb-Scargle in the detection of interested rhythms. For  analyzing time-series datasets with individual information, 'meta3d' is  suggested, which takes use of any one of these three methods to analyze  time-series data individual by individual and gives out integrated values  based on analysis result of each individual.\n# Depends: R (>= 3.0.2)\n# Imports: gnm\n# Suggests: knitr, rmarkdown, parallel\n# VignetteBuilder: knitr\n# License: GPL (>= 2)\n# LazyData: true\n# Author: Gang Wu [aut, cre], Ron Anafi [aut, ctb], John Hogenesch [aut, ctb], Michael Hughes [aut, ctb], Karl Kornacker [aut, ctb], Xavier Li [aut, ctb], Matthew Carlucci [aut, ctb]\n# Maintainer: Gang Wu <wggucas@gmail.com>\n# NeedsCompilation: no\n# Repository: CRAN\n# RoxygenNote: 6.1.1\n# Packaged: 2019-04-18 21:27:44 UTC; wug8hn\n# Date/Publication: 2019-04-18 22:00:03 UTC\n",
 "req":{
  "__set__":true,
  "elements":[
   "r-base",
   "r-gnm"
  ]
 },
 "requirements":{
  "build":{
   "__set__":true,
   "elements":[]
  },
  "host":{
   "__set__":true,
   "elements":[
    "r-base",
    "r-gnm"
   ]
  },
  "run":{
   "__set__":true,
   "elements":[
    "r-base",
    "r-gnm"
   ]
  },
  "test":{
   "__set__":true,
   "elements":[]
  }
 },
 "smithy_version":"No azure token. Create a token and\nput it in ~/.conda-smithy/azure.token\n3.7.0\n",
 "strong_exports":false,
 "total_requirements":{
  "build":{
   "__set__":true,
   "elements":[]
  },
  "host":{
   "__set__":true,
   "elements":[
    "r-base",
    "r-gnm"
   ]
  },
  "run":{
   "__set__":true,
   "elements":[
    "r-base",
    "r-gnm"
   ]
  },
  "test":{
   "__set__":true,
   "elements":[]
  }
 },
 "url":[
  "https://cran.r-project.org/src/contrib/MetaCycle_1.2.0.tar.gz",
  "https://cran.r-project.org/src/contrib/Archive/MetaCycle/MetaCycle_1.2.0.tar.gz",
  "https://cran.r-project.org/src/contrib/MetaCycle_1.2.0.tar.gz",
  "https://cran.r-project.org/src/contrib/Archive/MetaCycle/MetaCycle_1.2.0.tar.gz",
  "https://cran.r-project.org/src/contrib/MetaCycle_1.2.0.tar.gz",
  "https://cran.r-project.org/src/contrib/Archive/MetaCycle/MetaCycle_1.2.0.tar.gz"
 ],
 "version":"1.2.0"
}