{
 "PRed":[
  {
   "PR":{
    "__lazy_json__":"pr_json/215490264.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"Version",
    "migrator_version":0,
    "version":"2018.2"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/224917649.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"Version",
    "migrator_version":0,
    "version":"2018.2.1"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/229935651.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"CompilerRebuild",
    "migrator_version":1,
    "name":"Python 3.7, GCC 7, R 3.5.1, openBLAS 0.3.2"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/239334741.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"Version",
    "migrator_version":0,
    "version":"2018.2.2"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "data":{
    "bot_rerun":false,
    "migrator_name":"Version",
    "migrator_version":0,
    "version":"2018.2.3"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/259646827.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"Version",
    "migrator_version":0,
    "version":"2018.2.5"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/293364812.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"Version",
    "migrator_version":0,
    "version":"2019.1"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/306348458.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"Version",
    "migrator_version":0,
    "version":"2019.1.1"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/334738247.json"
   },
   "data":{
    "bot_rerun":1581026886.5091689,
    "migrator_name":"ArchRebuild",
    "migrator_version":1,
    "name":"aarch64 and ppc64le addition"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/336082179.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"MigrationYaml",
    "migrator_object_version":1,
    "migrator_version":0,
    "name":"python38"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/337893158.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"Version",
    "migrator_version":0,
    "version":"2019.1.2"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/392334904.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"MigrationYaml",
    "migrator_object_version":1,
    "migrator_version":0,
    "name":"pypy"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/411077319.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"Version",
    "migrator_version":0,
    "version":"2020.1"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/415761800.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"ArchRebuild",
    "migrator_version":1,
    "name":"aarch64 and ppc64le addition"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  }
 ],
 "bad":false,
 "conda-forge.yml":{
  "provider":{
   "linux_aarch64":"default",
   "linux_ppc64le":"default",
   "win":"azure"
  }
 },
 "feedstock_name":"pyopencl",
 "hash_type":"sha256",
 "meta_yaml":{
  "about":{
   "description":"\nPyOpenCL lets you access GPUs, multi-core CPUs, and other massively\nparallel compute devices from Python, through the OpenCL parallel\ncompute interface.\n",
   "dev_url":"http://github.com/inducer/pyopencl",
   "doc_url":"https://documen.tician.de/pyopencl",
   "home":"http://pypi.python.org/pypi/pyopencl",
   "license":"MIT",
   "license_file":"LICENSE",
   "summary":"Python wrapper for OpenCL"
  },
  "build":{
   "number":"0"
  },
  "extra":{
   "recipe-maintainers":[
    "inducer",
    "isuruf",
    "inducer",
    "isuruf",
    "inducer",
    "isuruf"
   ]
  },
  "package":{
   "name":"pyopencl",
   "version":"2020.1"
  },
  "requirements":{
   "build":[
    "cxx_compiler_stub",
    "m2w64_cxx_compiler_stub",
    "cxx_compiler_stub",
    "cxx_compiler_stub"
   ],
   "host":[
    "python",
    "libpython",
    "setuptools",
    "pybind11",
    "numpy",
    "khronos-opencl-icd-loader",
    "python",
    "setuptools",
    "pybind11",
    "numpy",
    "khronos-opencl-icd-loader",
    "python",
    "setuptools",
    "pybind11",
    "numpy",
    "ocl-icd"
   ],
   "run":[
    "python",
    "numpy",
    "pytools",
    "setuptools",
    "six",
    "mako",
    "appdirs",
    "khronos-opencl-icd-loader",
    "python",
    "numpy",
    "pytools",
    "setuptools",
    "six",
    "mako",
    "appdirs",
    "khronos-opencl-icd-loader",
    "ocl_icd_wrapper_apple",
    "python",
    "numpy",
    "pytools",
    "setuptools",
    "six",
    "mako",
    "appdirs",
    "ocl-icd"
   ]
  },
  "source":{
   "fn":"pyopencl-2020.1.tar.gz",
   "patches":[
    "osx_flags.diff",
    "osx_flags.diff",
    "osx_flags.diff"
   ],
   "sha256":"7513f7054f4eeb5361de1f5113883145fc67dbabde73a2148f221ae05af4d22c",
   "url":"https://pypi.io/packages/source/p/pyopencl/pyopencl-2020.1.tar.gz"
  },
  "test":{
   "commands":null,
   "imports":[
    "pyopencl",
    "pyopencl",
    "pyopencl"
   ],
   "requires":[
    "pytest",
    "pytest",
    "pytest",
    "pocl  >=0.14"
   ],
   "source_files":[
    "test",
    "test",
    "test"
   ]
  }
 },
 "name":"pyopencl",
 "new_version":"2020.1",
 "new_version_attempts":{
  "2020.1":1
 },
 "new_version_errors":{},
 "pinning_version":"2020.05.10.05.52.45",
 "raw_meta_yaml":"{% set name = \"pyopencl\" %}\n{% set version = \"2020.1\" %}\n{% set build_number = 0 %}\n{% set sha256 = \"7513f7054f4eeb5361de1f5113883145fc67dbabde73a2148f221ae05af4d22c\" %}\n\npackage:\n  name: {{ name|lower }}\n  version: {{ version }}\n\nsource:\n  fn: {{ name }}-{{ version }}.tar.gz\n  url: https://pypi.io/packages/source/{{ name[0] }}/{{ name }}/{{ name }}-{{ version }}.tar.gz\n  sha256: {{ sha256 }}\n  patches:\n    - osx_flags.diff\n\nbuild:\n  number: {{ build_number }}\n\nrequirements:\n  build:\n    - {{ compiler('cxx') }}\n    - {{ compiler('m2w64_cxx') }}      # [win and vc<14]\n  host:\n    - python\n    - libpython      # [win and vc<14]\n    - setuptools\n    - pybind11\n    - numpy\n    - ocl-icd      # [linux]\n    - khronos-opencl-icd-loader      # [win or osx]\n\n  run:\n    - python\n    - {{ pin_compatible(\"numpy\") }}\n    - pytools\n        # for pkg_resources\n    - setuptools\n    - six\n    - mako\n    - appdirs\n    - khronos-opencl-icd-loader      # [win or osx]\n    - ocl_icd_wrapper_apple      # [osx]\n    - ocl-icd      # [linux]\n\ntest:\n  requires:\n    - pytest\n    - pocl  >=0.14      # [linux]\n  imports:\n    - {{ name }}\n  source_files:\n    - test\n  commands:\n    # apple implementation on 10.14 is buggy. So skip test_can_build_and_run_binary\n    - cd test && python -m pytest -k \"not test_can_build_and_run_binary\"       # [osx]\n\nabout:\n  home: http://pypi.python.org/pypi/pyopencl\n  doc_url: https://documen.tician.de/pyopencl\n  dev_url: http://github.com/inducer/pyopencl\n  license: MIT\n  license_file: LICENSE\n  summary: Python wrapper for OpenCL\n  description: |\n\n    PyOpenCL lets you access GPUs, multi-core CPUs, and other massively\n    parallel compute devices from Python, through the OpenCL parallel\n    compute interface.\n\nextra:\n  recipe-maintainers:\n    - inducer\n    - isuruf\n",
 "req":{
  "__set__":true,
  "elements":[
   "appdirs",
   "cxx_compiler_stub",
   "khronos-opencl-icd-loader",
   "libpython",
   "m2w64_cxx_compiler_stub",
   "mako",
   "numpy",
   "ocl-icd",
   "ocl_icd_wrapper_apple",
   "pybind11",
   "python",
   "pytools",
   "setuptools",
   "six"
  ]
 },
 "requirements":{
  "build":{
   "__set__":true,
   "elements":[
    "cxx_compiler_stub",
    "m2w64_cxx_compiler_stub"
   ]
  },
  "host":{
   "__set__":true,
   "elements":[
    "khronos-opencl-icd-loader",
    "libpython",
    "numpy",
    "ocl-icd",
    "pybind11",
    "python",
    "setuptools"
   ]
  },
  "run":{
   "__set__":true,
   "elements":[
    "appdirs",
    "khronos-opencl-icd-loader",
    "mako",
    "numpy",
    "ocl-icd",
    "ocl_icd_wrapper_apple",
    "python",
    "pytools",
    "setuptools",
    "six"
   ]
  },
  "test":{
   "__set__":true,
   "elements":[
    "pocl",
    "pytest"
   ]
  }
 },
 "smithy_version":"No azure token. Create a token and\nput it in ~/.conda-smithy/azure.token\n3.7.0\n",
 "strong_exports":false,
 "total_requirements":{
  "build":{
   "__set__":true,
   "elements":[
    "cxx_compiler_stub",
    "m2w64_cxx_compiler_stub"
   ]
  },
  "host":{
   "__set__":true,
   "elements":[
    "khronos-opencl-icd-loader",
    "libpython",
    "numpy",
    "ocl-icd",
    "pybind11",
    "python",
    "setuptools"
   ]
  },
  "run":{
   "__set__":true,
   "elements":[
    "appdirs",
    "khronos-opencl-icd-loader",
    "mako",
    "numpy",
    "ocl-icd",
    "ocl_icd_wrapper_apple",
    "python",
    "pytools",
    "setuptools",
    "six"
   ]
  },
  "test":{
   "__set__":true,
   "elements":[
    "pocl  >=0.14",
    "pytest"
   ]
  }
 },
 "url":"https://pypi.io/packages/source/p/pyopencl/pyopencl-2019.1.1.tar.gz",
 "version":"2020.1"
}