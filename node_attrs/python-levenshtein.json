{
 "PRed":[
  {
   "PR":{
    "__lazy_json__":"pr_json/199942773.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"Noarch",
    "migrator_version":0
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/217502694.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"CompilerRebuild",
    "migrator_version":1,
    "name":"Python 3.7, GCC 7, R 3.5.1, openBLAS 0.3.2"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/335804352.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"MigrationYaml",
    "migrator_object_version":1,
    "migrator_version":0,
    "name":"python38"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/387735816.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"MigrationYaml",
    "migrator_object_version":1,
    "migrator_version":0,
    "name":"pypy"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/393863759.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"ArchRebuild",
    "migrator_version":1,
    "name":"aarch64 and ppc64le addition"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  }
 ],
 "bad":false,
 "conda-forge.yml":{
  "compiler_stack":"comp7",
  "max_py_ver":"37",
  "max_r_ver":"35",
  "provider":{
   "win":"azure"
  }
 },
 "feedstock_name":"python-levenshtein",
 "hash_type":"sha256",
 "meta_yaml":{
  "about":{
   "description":"A Python extension written in C for fast computation of: Levenshtein (edit)\ndistance and edit sequence manipulation; string similarity; approximate median\nstrings, and generally string averaging; string sequence and set similarity.\nLevenshtein has a some overlap with difflib (SequenceMatcher). It supports\nonly strings, not arbitrary sequence types, but on the other hand it's much\nfaster.\n",
   "dev_url":"http://github.com/ztane/python-Levenshtein",
   "doc_url":"https://rawgit.com/ztane/python-Levenshtein/master/docs/Levenshtein.html",
   "home":"http://github.com/ztane/python-Levenshtein",
   "license":"GPL-2.0",
   "license_family":"GPL",
   "license_file":"COPYING",
   "summary":"Python extension for computing string edit distances and similarities."
  },
  "build":{
   "number":"1001",
   "script":" -m pip install . --no-deps -vv"
  },
  "extra":{
   "recipe-maintainers":[
    "pmlandwehr",
    "peterjc",
    "pmlandwehr",
    "peterjc",
    "pmlandwehr",
    "peterjc"
   ]
  },
  "package":{
   "name":"python-levenshtein",
   "version":"0.12.0"
  },
  "requirements":{
   "build":[
    "c_compiler_stub",
    "c_compiler_stub",
    "c_compiler_stub"
   ],
   "host":[
    "python",
    "pip",
    "python",
    "pip",
    "python",
    "pip"
   ],
   "run":[
    "python",
    "python",
    "python"
   ]
  },
  "source":{
   "fn":"python-levenshtein-0.12.0.tar.gz",
   "sha256":"033a11de5e3d19ea25c9302d11224e1a1898fe5abd23c61c7c360c25195e3eb1",
   "url":"https://pypi.io/packages/source/p/python-levenshtein/python-Levenshtein-0.12.0.tar.gz"
  },
  "test":{
   "commands":[
    "python -c \"import sys; from Levenshtein import distance as d; assert 3==d('Good', 'Bad')\"",
    "python -c \"import sys; from Levenshtein import distance as d; assert 3==d('Good', 'Bad')\"",
    "python -c \"import sys; from Levenshtein import distance as d; assert 3==d('Good', 'Bad')\""
   ],
   "imports":[
    "Levenshtein",
    "Levenshtein",
    "Levenshtein"
   ]
  }
 },
 "name":"python-levenshtein",
 "new_version":"0.12.0",
 "pinning_version":"2020.03.24",
 "raw_meta_yaml":"{% set name = \"python-levenshtein\" %}\n{% set camelName = \"python-Levenshtein\" %}\n{% set version = \"0.12.0\" %}\n{% set hash_type = \"sha256\" %}\n{% set hash_val = \"033a11de5e3d19ea25c9302d11224e1a1898fe5abd23c61c7c360c25195e3eb1\" %}\n\npackage:\n  name: {{ name }}\n  version: {{ version }}\n\nsource:\n  fn: {{ name }}-{{ version }}.tar.gz\n  url: https://pypi.io/packages/source/{{ name[0] }}/{{ name }}/{{ camelName }}-{{ version }}.tar.gz\n  {{ hash_type }}: {{ hash_val }}\n\nbuild:\n  number: 1001\n  script: \"{{ PYTHON }} -m pip install . --no-deps -vv\"\n\nrequirements:\n  build:\n    - {{ compiler('c') }}\n  host:\n    - python\n    - pip\n  run:\n    - python\n\ntest:\n  imports:\n    - Levenshtein\n  commands:\n    # Trivial test to ensure compiled C code is indeed available\n    - python -c \"import sys; from Levenshtein import distance as d; assert 3==d('Good', 'Bad')\"\n\nabout:\n  home: http://github.com/ztane/python-Levenshtein\n  license: GPL-2.0\n  license_family: GPL\n  license_file: COPYING\n  summary: 'Python extension for computing string edit distances and similarities.'\n  description: |\n    A Python extension written in C for fast computation of: Levenshtein (edit)\n    distance and edit sequence manipulation; string similarity; approximate median\n    strings, and generally string averaging; string sequence and set similarity.\n    Levenshtein has a some overlap with difflib (SequenceMatcher). It supports\n    only strings, not arbitrary sequence types, but on the other hand it's much\n    faster.\n  doc_url: https://rawgit.com/ztane/python-Levenshtein/master/docs/Levenshtein.html\n  dev_url: http://github.com/ztane/python-Levenshtein\n\nextra:\n  recipe-maintainers:\n    - pmlandwehr\n    - peterjc\n",
 "req":{
  "__set__":true,
  "elements":[
   "c_compiler_stub",
   "pip",
   "python"
  ]
 },
 "requirements":{
  "build":{
   "__set__":true,
   "elements":[
    "c_compiler_stub"
   ]
  },
  "host":{
   "__set__":true,
   "elements":[
    "pip",
    "python"
   ]
  },
  "run":{
   "__set__":true,
   "elements":[
    "python"
   ]
  },
  "test":{
   "__set__":true,
   "elements":[]
  }
 },
 "smithy_version":"No azure token. Create a token and\nput it in ~/.conda-smithy/azure.token\n3.6.15",
 "strong_exports":false,
 "total_requirements":{
  "build":{
   "__set__":true,
   "elements":[
    "c_compiler_stub"
   ]
  },
  "host":{
   "__set__":true,
   "elements":[
    "pip",
    "python"
   ]
  },
  "run":{
   "__set__":true,
   "elements":[
    "python"
   ]
  },
  "test":{
   "__set__":true,
   "elements":[]
  }
 },
 "url":"https://pypi.io/packages/source/p/python-levenshtein/python-Levenshtein-0.12.0.tar.gz",
 "version":"0.12.0"
}