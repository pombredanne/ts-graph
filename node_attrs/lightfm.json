{
 "PRed":[
  {
   "PR":{
    "__lazy_json__":"pr_json/196933259.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"Compiler",
    "migrator_version":0
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/222703464.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"CompilerRebuild",
    "migrator_version":1,
    "name":"Python 3.7, GCC 7, R 3.5.1, openBLAS 0.3.2"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/339439045.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"MigrationYaml",
    "migrator_object_version":1,
    "migrator_version":0,
    "name":"python38"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/395387562.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"MigrationYaml",
    "migrator_object_version":1,
    "migrator_version":0,
    "name":"pypy"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  }
 ],
 "bad":false,
 "conda-forge.yml":{
  "compiler_stack":"comp7",
  "max_py_ver":"37",
  "max_r_ver":"35"
 },
 "feedstock_name":"lightfm",
 "hash_type":"sha256",
 "meta_yaml":{
  "about":{
   "description":"LightFM is a Python implementation of a number of popular recommendation\nalgorithms for both implicit and explicit feedback, including efficient\nimplementation of BPR and WARP ranking losses. It's easy to use,\nfast (via multithreaded model estimation), and produces high quality results.\n",
   "dev_url":"https://github.com/lyst/lightfm",
   "doc_url":"http://lyst.github.io/lightfm/docs/home.html",
   "home":"https://github.com/lyst/lightfm",
   "license":"Apache-2.0",
   "license_family":"Apache",
   "license_file":"LICENSE",
   "summary":"A Python implementation of LightFM, a hybrid recommendation algorithm."
  },
  "build":{
   "number":"1001",
   "script":" -m pip install . --no-deps -vv"
  },
  "extra":{
   "recipe-maintainers":[
    "maciejkula",
    "rth",
    "maciejkula",
    "rth",
    "maciejkula",
    "rth"
   ]
  },
  "package":{
   "name":"lightfm",
   "version":"1.15"
  },
  "requirements":{
   "build":[
    "c_compiler_stub",
    "c_compiler_stub",
    "c_compiler_stub"
   ],
   "host":[
    "python",
    "pip",
    "cython",
    "numpy",
    "scipy >=0.17",
    "requests",
    "python",
    "pip",
    "cython",
    "numpy",
    "scipy >=0.17",
    "requests",
    "python",
    "pip",
    "cython",
    "numpy",
    "scipy >=0.17",
    "requests"
   ],
   "run":[
    "python",
    "numpy",
    "scipy >=0.17",
    "requests",
    "python",
    "numpy",
    "scipy >=0.17",
    "requests",
    "python",
    "numpy",
    "scipy >=0.17",
    "requests"
   ]
  },
  "source":{
   "sha256":"7dc3fd48f0ef32c7e8de8e38b2bbe7063b56b570c702453d7467b43b413f6806",
   "url":"https://pypi.io/packages/source/l/lightfm/lightfm-1.15.tar.gz"
  },
  "test":{
   "imports":[
    "lightfm",
    "lightfm.lightfm",
    "lightfm",
    "lightfm.lightfm",
    "lightfm._lightfm_fast_openmp",
    "lightfm",
    "lightfm.lightfm"
   ]
  }
 },
 "name":"lightfm",
 "new_version":"1.15",
 "pinning_version":"2020.03.28",
 "raw_meta_yaml":"{% set version = \"1.15\" %}\n\npackage:\n  name: lightfm\n  version: {{ version }}\n\nsource:\n  url: https://pypi.io/packages/source/l/lightfm/lightfm-{{ version }}.tar.gz\n  sha256: 7dc3fd48f0ef32c7e8de8e38b2bbe7063b56b570c702453d7467b43b413f6806\n\nbuild:\n  number: 1001\n  script: \"{{ PYTHON }} -m pip install . --no-deps -vv\"\n\nrequirements:\n  build:\n    - {{ compiler('c') }}\n  host:\n    - python\n    - pip\n    - cython\n    - numpy\n    - scipy >=0.17\n    - requests\n  run:\n    - python\n    - {{ pin_compatible('numpy') }}\n    - scipy >=0.17\n    - requests\n\ntest:\n  imports:\n    # ensure OpenMP backend is used on linux\n    - lightfm._lightfm_fast_openmp  # [linux]\n    - lightfm\n    - lightfm.lightfm\n\nabout:\n  home: https://github.com/lyst/lightfm\n  license: Apache-2.0\n  license_family: Apache\n  license_file: LICENSE\n  summary: 'A Python implementation of LightFM, a hybrid recommendation algorithm.'\n  description: |\n      LightFM is a Python implementation of a number of popular recommendation\n      algorithms for both implicit and explicit feedback, including efficient\n      implementation of BPR and WARP ranking losses. It's easy to use,\n      fast (via multithreaded model estimation), and produces high quality results.\n  doc_url: http://lyst.github.io/lightfm/docs/home.html\n  dev_url: https://github.com/lyst/lightfm\n\nextra:\n  recipe-maintainers:\n    - maciejkula\n    - rth\n",
 "req":{
  "__set__":true,
  "elements":[
   "c_compiler_stub",
   "cython",
   "numpy",
   "pip",
   "python",
   "requests",
   "scipy"
  ]
 },
 "requirements":{
  "build":{
   "__set__":true,
   "elements":[
    "c_compiler_stub"
   ]
  },
  "host":{
   "__set__":true,
   "elements":[
    "cython",
    "numpy",
    "pip",
    "python",
    "requests",
    "scipy"
   ]
  },
  "run":{
   "__set__":true,
   "elements":[
    "numpy",
    "python",
    "requests",
    "scipy"
   ]
  },
  "test":{
   "__set__":true,
   "elements":[]
  }
 },
 "smithy_version":"No azure token. Create a token and\nput it in ~/.conda-smithy/azure.token\n3.6.15",
 "strong_exports":false,
 "total_requirements":{
  "build":{
   "__set__":true,
   "elements":[
    "c_compiler_stub"
   ]
  },
  "host":{
   "__set__":true,
   "elements":[
    "cython",
    "numpy",
    "pip",
    "python",
    "requests",
    "scipy >=0.17"
   ]
  },
  "run":{
   "__set__":true,
   "elements":[
    "numpy",
    "python",
    "requests",
    "scipy >=0.17"
   ]
  },
  "test":{
   "__set__":true,
   "elements":[]
  }
 },
 "url":"https://pypi.io/packages/source/l/lightfm/lightfm-1.15.tar.gz",
 "version":"1.15"
}