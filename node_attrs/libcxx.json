{
 "PRed":[
  {
   "PR":{
    "__lazy_json__":"pr_json/198232334.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"Version",
    "migrator_version":0,
    "version":"6.0.1"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/199662984.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"Compiler",
    "migrator_version":0
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/216617161.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"Version",
    "migrator_version":0,
    "version":"7.0.0"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/224538014.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"CompilerRebuild",
    "migrator_version":1,
    "name":"Python 3.7, GCC 7, R 3.5.1, openBLAS 0.3.2"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/238893962.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"Version",
    "migrator_version":0,
    "version":"7.0.1"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/263083648.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"Version",
    "migrator_version":0,
    "version":"8.0.0"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/269409164.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"ArchRebuild",
    "migrator_version":1,
    "name":"aarch64 and ppc64le addition"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/335476023.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"MigrationYaml",
    "migrator_object_version":1,
    "migrator_version":0,
    "name":"python38"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/349179346.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"Version",
    "migrator_version":0,
    "version":"9.0.0"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/375719107.json"
   },
   "data":{
    "bot_rerun":1581808085.6738896,
    "migrator_name":"Version",
    "migrator_version":0,
    "version":"11-init"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/400243969.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"Version",
    "migrator_version":0,
    "version":"10.0.0"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  }
 ],
 "bad":false,
 "conda-forge.yml":{
  "provider":{
   "linux_aarch64":"azure",
   "linux_ppc64le":"azure",
   "osx":"travis",
   "win":"azure"
  }
 },
 "feedstock_name":"libcxx",
 "hash_type":"sha256",
 "meta_yaml":{
  "about":{
   "home":"http://llvm.org/",
   "license":"Apache-2.0 WITH LLVM-exception",
   "license_family":"Apache",
   "license_file":"LICENSE.TXT",
   "summary":"LLVM C++ standard library"
  },
  "build":{
   "ignore_run_exports":[
    "libstdcxx-ng",
    "libstdcxx-ng",
    "libstdcxx-ng"
   ],
   "missing_dso_whitelist":[
    "/usr/lib/libc++abi.dylib",
    "/usr/lib/libc++abi.dylib",
    "/usr/lib/libc++abi.dylib"
   ],
   "number":"2",
   "skip":true
  },
  "extra":{
   "recipe-maintainers":[
    "SylvainCorlay",
    "inducer",
    "jakirkham",
    "isuruf",
    "beckermr",
    "timsnyder",
    "SylvainCorlay",
    "inducer",
    "jakirkham",
    "isuruf",
    "beckermr",
    "timsnyder",
    "SylvainCorlay",
    "inducer",
    "jakirkham",
    "isuruf",
    "beckermr",
    "timsnyder"
   ]
  },
  "outputs":[
   {
    "files":[
     "include/c++",
     "Library/include/c++",
     "lib/libc++.*",
     "lib/libc++fs.*",
     "lib/libc++experimental.*",
     "Library/bin/c++*.dll",
     "Library/lib/c++*.lib",
     "Library/lib/libc++*.lib"
    ],
    "name":"libcxx",
    "test":{
     "commands":[
      "if not exist %LIBRARY_INC%\\\\c++\\\\v1\\\\iterator exit 1",
      "compile_test.bat"
     ],
     "files":[
      "test_sources",
      "compile_test.bat"
     ],
     "requires":[
      "clang",
      "clangxx",
      "cxx_compiler_stub"
     ]
    }
   },
   {
    "build":{
     "skip":true
    },
    "files":[
     "lib/libc++abi.*"
    ],
    "name":"libcxxabi",
    "requirements":{
     "run_constrained":[
      "libcxx 10.0.0.*"
     ]
    },
    "test":{
     "commands":null
    }
   },
   {
    "files":[
     "include/c++",
     "Library/include/c++",
     "lib/libc++.*",
     "lib/libc++fs.*",
     "lib/libc++experimental.*",
     "Library/bin/c++*.dll",
     "Library/lib/c++*.lib",
     "Library/lib/libc++*.lib"
    ],
    "name":"libcxx",
    "test":{
     "commands":[
      "test -f $PREFIX/include/c++/v1/iterator",
      "bash compile_test.sh",
      "if [ -f $PREFIX/lib/libc++abi.dylib ]; then exit 1; fi"
     ],
     "downstreams":[
      "python-symengine",
      "openturns",
      "libcxx-testing"
     ],
     "files":[
      "test_sources",
      "compile_test.sh"
     ],
     "requires":[
      "clang <10",
      "clangxx"
     ]
    }
   },
   {
    "build":{
     "skip":true
    },
    "files":[
     "lib/libc++abi.*"
    ],
    "name":"libcxxabi",
    "requirements":{
     "run_constrained":[
      "libcxx 10.0.0.*"
     ]
    },
    "test":{
     "commands":null
    }
   },
   {
    "files":[
     "include/c++",
     "Library/include/c++",
     "lib/libc++.*",
     "lib/libc++fs.*",
     "lib/libc++experimental.*",
     "Library/bin/c++*.dll",
     "Library/lib/c++*.lib",
     "Library/lib/libc++*.lib"
    ],
    "name":"libcxx",
    "requirements":{
     "run":[
      "libcxxabi"
     ]
    },
    "test":{
     "commands":[
      "test -f $PREFIX/include/c++/v1/iterator",
      "bash compile_test.sh",
      "test -f $PREFIX/lib/libc++abi.so"
     ],
     "files":[
      "test_sources",
      "compile_test.sh"
     ],
     "requires":[
      "clang",
      "clangxx",
      "cxx_compiler_stub"
     ]
    }
   },
   {
    "build":null,
    "files":[
     "lib/libc++abi.*"
    ],
    "name":"libcxxabi",
    "requirements":{
     "run_constrained":[
      "libcxx 10.0.0.*"
     ]
    },
    "test":{
     "commands":[
      "test -f $PREFIX/lib/libc++abi.so"
     ]
    }
   }
  ],
  "package":{
   "name":"libcxx_and_libcxxabi",
   "version":"10.0.0"
  },
  "requirements":{
   "build":[
    "cmake",
    "cxx_compiler_stub",
    "python >3",
    "cmake",
    "make",
    "cxx_compiler_stub",
    "cmake",
    "make",
    "cxx_compiler_stub",
    "python >3"
   ],
   "host":[
    "clangdev 10.0.0",
    "llvmdev 10.0.0"
   ]
  },
  "source":[
   {
    "patches":null,
    "sha256":"270f8a3f176f1981b0f6ab8aa556720988872ec2b48ed3b605d0ced8d09156c7",
    "url":"https://github.com/llvm/llvm-project/releases/download/llvmorg-10.0.0/libcxx-10.0.0.src.tar.xz"
   },
   {
    "patches":null,
    "sha256":"270f8a3f176f1981b0f6ab8aa556720988872ec2b48ed3b605d0ced8d09156c7",
    "url":"https://github.com/llvm/llvm-project/releases/download/llvmorg-10.0.0/libcxx-10.0.0.src.tar.xz"
   },
   {
    "patches":null,
    "sha256":"270f8a3f176f1981b0f6ab8aa556720988872ec2b48ed3b605d0ced8d09156c7",
    "url":"https://github.com/llvm/llvm-project/releases/download/llvmorg-10.0.0/libcxx-10.0.0.src.tar.xz"
   },
   {
    "folder":"libcxxabi",
    "sha256":"e71bac75a88c9dde455ad3f2a2b449bf745eafd41d2d8432253b2964e0ca14e1",
    "url":"https://github.com/llvm/llvm-project/releases/download/llvmorg-10.0.0/libcxxabi-10.0.0.src.tar.xz"
   }
  ]
 },
 "name":"libcxx_and_libcxxabi",
 "new_version":"10.0.0",
 "new_version_attempts":{
  "10.0.0":31
 },
 "outputs_names":[
  "libcxx",
  "libcxxabi"
 ],
 "pinning_version":"2020.04.07",
 "raw_meta_yaml":"{% set version = \"10.0.0\" %}\n\npackage:\n  name: libcxx_and_libcxxabi\n  version: {{ version }}\n\nsource:\n  - url: https://github.com/llvm/llvm-project/releases/download/llvmorg-{{ version }}/libcxx-{{ version }}.src.tar.xz\n    sha256: 270f8a3f176f1981b0f6ab8aa556720988872ec2b48ed3b605d0ced8d09156c7\n    patches:\n      # See https://bugs.llvm.org/show_bug.cgi?id=39696\n      - ppc64le-constexpr.patch  # [ppc64le]\n\n  - url: https://github.com/llvm/llvm-project/releases/download/llvmorg-{{ version }}/libcxxabi-{{ version }}.src.tar.xz  # [linux]\n    sha256: e71bac75a88c9dde455ad3f2a2b449bf745eafd41d2d8432253b2964e0ca14e1  # [linux]\n    folder: libcxxabi  # [linux]\n\nbuild:\n  number: 2\n  skip: true  # [win and vc<14]\n  skip: true  # [win]\n  skip: true  # [ppc64le or aarch64]\n  ignore_run_exports:\n    - libstdcxx-ng\n  missing_dso_whitelist:\n    - /usr/lib/libc++abi.dylib\n\nrequirements:\n  build:\n    - cmake\n    - make                    # [unix]\n    - {{ compiler('cxx') }}\n    - python >3               # [not osx]\n  host:\n    - clangdev {{ version }}  # [not osx]\n    - llvmdev {{ version }}   # [not osx]\n\noutputs:\n  - name: libcxx\n    files:\n      - include/c++\n      - Library/include/c++\n      - lib/libc++.*\n      - lib/libc++fs.*\n      - lib/libc++experimental.*\n      - Library/bin/c++*.dll\n      - Library/lib/c++*.lib\n      - Library/lib/libc++*.lib\n    requirements:   # [linux]\n      run:   # [linux]\n        - {{ pin_subpackage(\"libcxxabi\", exact=True) }}    # [linux]\n    test:\n      requires:\n        # osx tests for exception passing fail on vlang v10 due to exception in clang\n        - clang <10              # [osx]\n        - clang                  # [not osx]\n        - clangxx\n        - {{ compiler('cxx') }}  # [not osx]\n      files:\n        - test_sources\n        - compile_test.sh   # [unix]\n        - compile_test.bat  # [win]\n      commands:\n        - if not exist %LIBRARY_INC%\\\\c++\\\\v1\\\\iterator exit 1     # [win]\n        - test -f $PREFIX/include/c++/v1/iterator      # [unix]\n        - bash compile_test.sh   # [unix]\n        - compile_test.bat       # [win]\n        # !!!!!!!!!!!! README !!!!!!!!!!!!!!!!!!\n        # we do not ship libcxxabi on OSX - this breaks exception passing\n        - if [ -f $PREFIX/lib/libc++abi.dylib ]; then exit 1; fi  # [osx]\n        - test -f $PREFIX/lib/libc++abi.so  # [linux]\n\n      # Following 2 projects had issues with libc++, so check them\n      # before releasing just to be sure.\n      downstreams:   # [osx]\n        - python-symengine  # [osx]\n        - openturns         # [osx]\n        - libcxx-testing    # [osx]\n\n  - name: libcxxabi\n    build:\n      skip: true  # [not linux]\n    files:\n      - lib/libc++abi.*\n    requirements:\n      run_constrained:\n        - libcxx {{ version }}.*\n    test:\n      commands:\n        - test -f $PREFIX/lib/libc++abi.so  # [linux]\n\nabout:\n  home: http://llvm.org/\n  license: Apache-2.0 WITH LLVM-exception\n  license_file: LICENSE.TXT\n  license_family: Apache\n  summary: LLVM C++ standard library\n\nextra:\n  recipe-maintainers:\n    - SylvainCorlay\n    - inducer\n    - jakirkham\n    - isuruf\n    - beckermr\n    - timsnyder\n",
 "req":{
  "__set__":true,
  "elements":[
   "clangdev",
   "cmake",
   "cxx_compiler_stub",
   "libcxxabi",
   "llvmdev",
   "make",
   "python"
  ]
 },
 "requirements":{
  "build":{
   "__set__":true,
   "elements":[
    "cmake",
    "cxx_compiler_stub",
    "make",
    "python"
   ]
  },
  "host":{
   "__set__":true,
   "elements":[
    "clangdev",
    "llvmdev"
   ]
  },
  "run":{
   "__set__":true,
   "elements":[
    "libcxxabi"
   ]
  },
  "test":{
   "__set__":true,
   "elements":[
    "clang",
    "clangxx",
    "cxx_compiler_stub"
   ]
  }
 },
 "smithy_version":"No azure token. Create a token and\nput it in ~/.conda-smithy/azure.token\n3.6.15",
 "strong_exports":false,
 "total_requirements":{
  "build":{
   "__set__":true,
   "elements":[
    "cmake",
    "cxx_compiler_stub",
    "make",
    "python >3"
   ]
  },
  "host":{
   "__set__":true,
   "elements":[
    "clangdev 10.0.0",
    "llvmdev 10.0.0"
   ]
  },
  "run":{
   "__set__":true,
   "elements":[
    "libcxxabi"
   ]
  },
  "test":{
   "__set__":true,
   "elements":[
    "clang",
    "clang <10",
    "clangxx",
    "cxx_compiler_stub"
   ]
  }
 },
 "url":"https://github.com/llvm/llvm-project/releases/download/llvmorg-8.0.1/libcxx-8.0.1.src.tar.xz",
 "version":"10.0.0"
}