{
 "PRed":[
  {
   "data":{
    "bot_rerun":false,
    "migrator_name":"Version",
    "migrator_version":0,
    "version":"3.6.5"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/198231537.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"Version",
    "migrator_version":0,
    "version":"3.7.0"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/215590052.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"CompilerRebuild",
    "migrator_version":1,
    "name":"Python 3.7, GCC 7, R 3.5.1, openBLAS 0.3.2"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/224463655.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"Version",
    "migrator_version":0,
    "version":"3.7.1"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/240751594.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"Version",
    "migrator_version":0,
    "version":"3.7.2"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/248383454.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"ArchRebuild",
    "migrator_version":1,
    "name":"aarch64 and ppc64le addition"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  },
  {
   "data":{
    "bot_rerun":false,
    "migrator_name":"OpenSSLRebuild",
    "migrator_version":1,
    "name":"OpenSSL"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/255231225.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"Rebuild",
    "migrator_object_version":1,
    "migrator_version":0,
    "name":"OpenSSL"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/255260242.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"Rebuild",
    "migrator_object_version":2,
    "migrator_version":0,
    "name":"OpenSSL"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/256025025.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"Rebuild",
    "migrator_object_version":3,
    "migrator_version":0,
    "name":"OpenSSL"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/264310125.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"Version",
    "migrator_version":0,
    "version":"3.7.3"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/293450398.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"Rebuild",
    "migrator_version":0,
    "name":"readline-8.0"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/295483916.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"Version",
    "migrator_version":0,
    "version":"3.7.4"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/327917295.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"Version",
    "migrator_version":0,
    "version":"3.8.0"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/356492749.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"Version",
    "migrator_version":0,
    "version":"3.8.1"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  }
 ],
 "bad":false,
 "conda-forge.yml":{
  "compiler_stack":"comp7",
  "max_py_ver":"38",
  "max_r_ver":"35",
  "provider":{
   "linux_aarch64":"native",
   "linux_ppc64le":"native",
   "osx":"azure",
   "win":"azure"
  }
 },
 "feedstock_name":"python",
 "hash_type":"sha256",
 "meta_yaml":{
  "about":{
   "description":"Python is a widely used high-level, general-purpose, interpreted, dynamic\nprogramming language. Its design philosophy emphasizes code\nreadability, and its syntax allows programmers to express concepts in\nfewer lines of code than would be possible in languages such as C++ or\nJava. The language provides constructs intended to enable clear programs\non both a small and large scale.\n",
   "dev_url":"https://docs.python.org/devguide/",
   "doc_source_url":"https://github.com/python/pythondotorg/blob/master/docs/source/index.rst",
   "doc_url":"https://www.python.org/doc/versions/",
   "home":"http://www.python.org/",
   "license":"Python-2.0",
   "license_file":"LICENSE",
   "summary":"General purpose programming language"
  },
  "build":{
   "detect_binary_files_with_prefix":true,
   "ignore_run_exports":[
    "bzip2"
   ],
   "no_link":null,
   "number":"7",
   "run_exports":{
    "noarch":[
     "python",
     "python",
     "python"
    ],
    "weak":[
     "python_abi 3.8.* *_cp38",
     "python_abi 3.8.* *_cp38",
     "python_abi 3.8.* *_cp38"
    ]
   },
   "script_env":[
    "PY_INTERP_LINKAGE_NATURE",
    "PY_INTERP_DEBUG",
    "PY_INTERP_LINKAGE_NATURE",
    "PY_INTERP_DEBUG",
    "PY_INTERP_LINKAGE_NATURE",
    "PY_INTERP_DEBUG"
   ],
   "skip":true,
   "string":"h__cpython"
  },
  "extra":{
   "recipe-maintainers":[
    "isuruf",
    "jakirkham",
    "jjhelmus",
    "mingwandroid",
    "msarahan",
    "pelson",
    "ocefpaf",
    "scopatz",
    "isuruf",
    "jakirkham",
    "jjhelmus",
    "mingwandroid",
    "msarahan",
    "pelson",
    "ocefpaf",
    "scopatz",
    "isuruf",
    "jakirkham",
    "jjhelmus",
    "mingwandroid",
    "msarahan",
    "pelson",
    "ocefpaf",
    "scopatz"
   ]
  },
  "package":{
   "name":"python",
   "version":"3.8.2"
  },
  "requirements":{
   "build":[
    "c_compiler_stub",
    "cxx_compiler_stub",
    "m2-patch",
    "posix",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "make",
    "pkg-config",
    "llvm-tools",
    "patch",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cdt_stub",
    "cdt_stub",
    "cdt_stub",
    "make",
    "pkg-config",
    "patch",
    "ld_impl_",
    "binutils_impl_ >=2.33.1"
   ],
   "host":[
    "sqlite",
    "openssl",
    "bzip2",
    "sqlite",
    "xz",
    "zlib",
    "openssl",
    "readline",
    "tk",
    "libffi",
    "bzip2",
    "sqlite",
    "xz",
    "zlib",
    "openssl",
    "readline",
    "tk",
    "ncurses",
    "libffi",
    "ld_impl_"
   ],
   "run":[
    "ld_impl_"
   ],
   "run_constrained":[
    "python_abi 3.8.* *_cp38",
    "python_abi 3.8.* *_cp38",
    "python_abi 3.8.* *_cp38"
   ]
  },
  "source":[
   {
    "md5":"e9d6ebc92183a177b8e8a58cad5b8d67",
    "patches":[
     "patches/0001-Add-Anaconda-Distribution-version-logic.patch",
     "patches/0002-Darwin-Add-arch-x86_64-to-UnicCCompiler-ld_args.patch",
     "patches/0003-Win32-Change-FD_SETSIZE-from-512-to-2048.patch",
     "patches/0004-Win32-distutils-Add-support-to-cygwinccompiler-for-V.patch",
     "patches/0005-Do-not-pass-g-to-GCC-when-not-Py_DEBUG.patch",
     "patches/0006-Support-cross-compiling-byte-code.patch",
     "patches/0007-Win32-Fixes-for-Windows-GCC-interop-needed-by-RPy2-a.patch",
     "patches/0008-Darwin-Look-in-sysroot-usr-lib-include-if-sysroot-is.patch",
     "patches/0009-runtime_library_dir_option-Use-1st-word-of-CC-as-com.patch",
     "patches/0010-Win32-Do-not-download-externals.patch",
     "patches/0011-Add-support-for-_CONDA_PYTHON_SYSCONFIGDATA_NAME-if-.patch",
     "patches/0012-Fix-find_library-so-that-it-looks-in-sys.prefix-lib-.patch",
     "patches/0013-Disable-new-dtags-in-unixccompiler.py.patch",
     "patches/0014-Fix-cross-compilation-on-Debian-based-distros.patch",
     "patches/0015-Disable-registry-lookup-unless-CONDA_PY_ALLOW_REG_PA.patch",
     "patches/0016-Unvendor-openssl.patch",
     "patches/0017-Unvendor-sqlite3.patch",
     "patches/0018-venv-Revert-a-change-from-https-github.com-python-cp.patch",
     "patches/0019-Win-Add-back-the-DLLSuffix-used-to-find-the-openssl-.patch",
     "patches/0020-Use-ranlib-from-env-if-env-variable-is-set.patch",
     "patches/0021-roll-back-2e33ecd-for-py_compile.main.patch",
     "patches/0022-Add-CondaEcosystemModifyDllSearchPath.patch"
    ],
    "url":"https://www.python.org/ftp/python/3.8.2/Python-3.8.2.tar.xz"
   },
   {
    "folder":"externals/xz-5.2.2",
    "sha256":"02b6d6f1e0369940e7e1f0d324992e069d09f5f3d32d86e2d22cd8b82ac3fb3f",
    "url":"https://github.com/python/cpython-source-deps/archive/xz-5.2.2.zip"
   },
   {
    "folder":"externals/tcl-core-8.6.9.0",
    "sha256":"ea9e724536ec13b476ebbd47948303b92fdd90a33aa94f30fcc2f5c3a899f69e",
    "url":"https://github.com/python/cpython-source-deps/archive/tcl-core-8.6.9.0.zip"
   },
   {
    "folder":"externals/tk-8.6.9.0",
    "sha256":"f3112b6bbc3bd163c877030187e73ce9a113ce03eff559ec5b9df697e3a08fad",
    "url":"https://github.com/python/cpython-source-deps/archive/tk-8.6.9.0.zip"
   },
   {
    "folder":"externals/tcltk-8.6.9.0",
    "sha256":"37cd629a75d2a34974a3d771ccab5c9e3caf3d138cea81040f9cdba1aded1cf2",
    "url":"https://github.com/python/cpython-bin-deps/archive/tcltk-8.6.9.0.zip"
   },
   {
    "folder":"externals/tix-8.4.3.6",
    "sha256":"e558e3dc5e67ac0942f8fceafce00ca46b177da9ebeaf38ec7fafd9b9913ac56",
    "url":"https://github.com/python/cpython-source-deps/archive/tix-8.4.3.6.zip"
   },
   {
    "folder":"externals/bzip2-1.0.6",
    "sha256":"c42fd1432a2667b964a74bc423bb7485059c4a6d5dc92946d59dbf9a6bdb988d",
    "url":"https://github.com/python/cpython-source-deps/archive/bzip2-1.0.6.zip"
   },
   {
    "folder":"externals/zlib-1.2.11",
    "sha256":"debb1952945fa6c25817a40abe90641b572c83171f244937b70b9fe156f5a63a",
    "url":"https://github.com/python/cpython-source-deps/archive/zlib-1.2.11.zip"
   },
   {
    "folder":"externals/nasm-2.11.06",
    "sha256":"de3c87b26a80e789986d8e6950c6304175d3829afe9c6c7211eb7257266ab0ac",
    "url":"https://github.com/python/cpython-bin-deps/archive/nasm-2.11.06.zip"
   },
   {
    "folder":"externals/libffi",
    "sha256":"4872e72e188a5aa1124db0c3b163a4163e84ead359a514d86dd7c6fa2d2ff02a",
    "url":"https://github.com/python/cpython-bin-deps/archive/libffi.zip"
   },
   {
    "md5":"e9d6ebc92183a177b8e8a58cad5b8d67",
    "patches":[
     "patches/0001-Add-Anaconda-Distribution-version-logic.patch",
     "patches/0002-Darwin-Add-arch-x86_64-to-UnicCCompiler-ld_args.patch",
     "patches/0003-Win32-Change-FD_SETSIZE-from-512-to-2048.patch",
     "patches/0004-Win32-distutils-Add-support-to-cygwinccompiler-for-V.patch",
     "patches/0005-Do-not-pass-g-to-GCC-when-not-Py_DEBUG.patch",
     "patches/0006-Support-cross-compiling-byte-code.patch",
     "patches/0007-Win32-Fixes-for-Windows-GCC-interop-needed-by-RPy2-a.patch",
     "patches/0008-Darwin-Look-in-sysroot-usr-lib-include-if-sysroot-is.patch",
     "patches/0009-runtime_library_dir_option-Use-1st-word-of-CC-as-com.patch",
     "patches/0010-Win32-Do-not-download-externals.patch",
     "patches/0011-Add-support-for-_CONDA_PYTHON_SYSCONFIGDATA_NAME-if-.patch",
     "patches/0012-Fix-find_library-so-that-it-looks-in-sys.prefix-lib-.patch",
     "patches/0013-Disable-new-dtags-in-unixccompiler.py.patch",
     "patches/0014-Fix-cross-compilation-on-Debian-based-distros.patch",
     "patches/0015-Disable-registry-lookup-unless-CONDA_PY_ALLOW_REG_PA.patch",
     "patches/0016-Unvendor-openssl.patch",
     "patches/0017-Unvendor-sqlite3.patch",
     "patches/0018-venv-Revert-a-change-from-https-github.com-python-cp.patch",
     "patches/0019-Win-Add-back-the-DLLSuffix-used-to-find-the-openssl-.patch",
     "patches/0020-Use-ranlib-from-env-if-env-variable-is-set.patch",
     "patches/0021-roll-back-2e33ecd-for-py_compile.main.patch",
     "patches/0022-Add-CondaEcosystemModifyDllSearchPath.patch"
    ],
    "url":"https://www.python.org/ftp/python/3.8.2/Python-3.8.2.tar.xz"
   },
   {
    "md5":"e9d6ebc92183a177b8e8a58cad5b8d67",
    "patches":[
     "patches/0001-Add-Anaconda-Distribution-version-logic.patch",
     "patches/0002-Darwin-Add-arch-x86_64-to-UnicCCompiler-ld_args.patch",
     "patches/0003-Win32-Change-FD_SETSIZE-from-512-to-2048.patch",
     "patches/0004-Win32-distutils-Add-support-to-cygwinccompiler-for-V.patch",
     "patches/0005-Do-not-pass-g-to-GCC-when-not-Py_DEBUG.patch",
     "patches/0006-Support-cross-compiling-byte-code.patch",
     "patches/0007-Win32-Fixes-for-Windows-GCC-interop-needed-by-RPy2-a.patch",
     "patches/0008-Darwin-Look-in-sysroot-usr-lib-include-if-sysroot-is.patch",
     "patches/0009-runtime_library_dir_option-Use-1st-word-of-CC-as-com.patch",
     "patches/0010-Win32-Do-not-download-externals.patch",
     "patches/0011-Add-support-for-_CONDA_PYTHON_SYSCONFIGDATA_NAME-if-.patch",
     "patches/0012-Fix-find_library-so-that-it-looks-in-sys.prefix-lib-.patch",
     "patches/0013-Disable-new-dtags-in-unixccompiler.py.patch",
     "patches/0014-Fix-cross-compilation-on-Debian-based-distros.patch",
     "patches/0015-Disable-registry-lookup-unless-CONDA_PY_ALLOW_REG_PA.patch",
     "patches/0016-Unvendor-openssl.patch",
     "patches/0017-Unvendor-sqlite3.patch",
     "patches/0018-venv-Revert-a-change-from-https-github.com-python-cp.patch",
     "patches/0019-Win-Add-back-the-DLLSuffix-used-to-find-the-openssl-.patch",
     "patches/0020-Use-ranlib-from-env-if-env-variable-is-set.patch",
     "patches/0021-roll-back-2e33ecd-for-py_compile.main.patch",
     "patches/0022-Add-CondaEcosystemModifyDllSearchPath.patch"
    ],
    "url":"https://www.python.org/ftp/python/3.8.2/Python-3.8.2.tar.xz"
   }
  ],
  "test":{
   "commands":[
    "python -V",
    "2to3 -h",
    "pydoc -h",
    "python -m venv %%TEMP%%\\venv",
    "pushd tests",
    "pushd distutils",
    "python setup.py install -v -v",
    "python -c \"import foobar\"",
    "popd",
    "pushd distutils.cext",
    "python setup.py install -v -v",
    "python -c \"import greet; greet.greet('Python user')\" | rg \"Hello Python\"",
    "popd",
    "pushd cmake",
    "cmake -GNinja -DPY_VER=3.8.2",
    "popd",
    "popd",
    "python -V",
    "python3 -V",
    "2to3 -h",
    "pydoc -h",
    "python3-config --help",
    "python -c \"import sysconfig; print(sysconfig.get_config_var('CC'))\"",
    "for f in ${CONDA_PREFIX}/lib/python*/_sysconfig*.py; do echo \"Checking $f:\"; if [[ `rg @ $f` ]]; then echo \"FAILED ON $f\"; cat $f; exit 1; fi; done",
    "pushd tests",
    "pushd distutils",
    "python setup.py install -v -v",
    "python -c \"import foobar\"",
    "popd",
    "pushd distutils.cext",
    "python setup.py install -v -v",
    "python -c \"import greet; greet.greet('Python user')\" | rg \"Hello Python\"",
    "popd",
    "pushd prefix-replacement",
    "bash build-and-test.sh",
    "popd",
    "pushd cmake",
    "cmake -GNinja -DPY_VER=3.8.2",
    "popd",
    "popd",
    "test ! -f default.profraw",
    "python -V",
    "python3 -V",
    "2to3 -h",
    "pydoc -h",
    "python3-config --help",
    "python -c \"import sysconfig; print(sysconfig.get_config_var('CC'))\"",
    "_CONDA_PYTHON_SYSCONFIGDATA_NAME=_sysconfigdata_x86_64_conda_cos6_linux_gnu python -c \"import sysconfig; print(sysconfig.get_config_var('CC'))\"",
    "for f in ${CONDA_PREFIX}/lib/python*/_sysconfig*.py; do echo \"Checking $f:\"; if [[ `rg @ $f` ]]; then echo \"FAILED ON $f\"; cat $f; exit 1; fi; done",
    "pushd tests",
    "pushd distutils",
    "python setup.py install -v -v",
    "python -c \"import foobar\"",
    "popd",
    "pushd distutils.cext",
    "python setup.py install -v -v",
    "python -c \"import greet; greet.greet('Python user')\" | rg \"Hello Python\"",
    "popd",
    "pushd prefix-replacement",
    "bash build-and-test.sh",
    "popd",
    "pushd cmake",
    "cmake -GNinja -DPY_VER=3.8.2",
    "popd",
    "popd"
   ],
   "files":[
    "tests/distutils/*",
    "tests/distutils.cext/*",
    "tests/cmake/*",
    "tests/cython/*",
    "tests/prefix-replacement/*",
    "tests/distutils/*",
    "tests/distutils.cext/*",
    "tests/cmake/*",
    "tests/cython/*",
    "tests/prefix-replacement/*",
    "tests/distutils/*",
    "tests/distutils.cext/*",
    "tests/cmake/*",
    "tests/cython/*",
    "tests/prefix-replacement/*"
   ],
   "requires":[
    "ripgrep",
    "cmake",
    "ninja",
    "cython",
    "setuptools",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "ripgrep",
    "cmake",
    "ninja",
    "cython",
    "setuptools",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "ripgrep",
    "cmake",
    "ninja",
    "cython",
    "setuptools",
    "c_compiler_stub",
    "cxx_compiler_stub"
   ]
  }
 },
 "name":"python",
 "new_version":"3.8.3",
 "new_version_attempts":{
  "3.8.3":49
 },
 "new_version_errors":{
  "3.8.3":"The recipe did not change in the version migration, a URL did not hash, or there is jinja2 syntax the bot cannot handle!\n\nPlease check the URLs in your recipe with version '3.8.3' to make sure they exist!\n\nWe also found the following errors:\n\n - recipe did not appear to change even though the bot said it should have\n"
 },
 "pinning_version":"2019.12.18",
 "raw_meta_yaml":"{% set version = \"3.8.2\" %}\n{% set linkage_nature = os.environ.get('PY_INTERP_LINKAGE_NATURE', '') %}\n{% set debug = os.environ.get('PY_INTERP_DEBUG', '') %}\n{% if linkage_nature != '' %}\n  {% set linkage_nature = \"_\" ~ linkage_nature %}\n{% endif %}\n{% if debug != '' %}\n  {% set debug = \"_d\" ~ debug %}\n{% endif %}\n\npackage:\n  name: python\n  version: {{ version }}\n\nsource:\n  - url: https://www.python.org/ftp/python/{{ version }}/Python-{{ version }}.tar.xz\n    # md5 from: https://www.python.org/downloads/release/python-382/\n    md5: e9d6ebc92183a177b8e8a58cad5b8d67\n    patches:\n{% if 'conda-forge' not in channel_targets %}\n      - patches/0001-Add-Anaconda-Distribution-version-logic.patch\n{% endif %}\n      - patches/0002-Darwin-Add-arch-x86_64-to-UnicCCompiler-ld_args.patch\n      - patches/0003-Win32-Change-FD_SETSIZE-from-512-to-2048.patch\n      - patches/0004-Win32-distutils-Add-support-to-cygwinccompiler-for-V.patch\n      - patches/0005-Do-not-pass-g-to-GCC-when-not-Py_DEBUG.patch\n      - patches/0006-Support-cross-compiling-byte-code.patch\n      - patches/0007-Win32-Fixes-for-Windows-GCC-interop-needed-by-RPy2-a.patch\n      - patches/0008-Darwin-Look-in-sysroot-usr-lib-include-if-sysroot-is.patch\n      - patches/0009-runtime_library_dir_option-Use-1st-word-of-CC-as-com.patch\n      - patches/0010-Win32-Do-not-download-externals.patch\n      - patches/0011-Add-support-for-_CONDA_PYTHON_SYSCONFIGDATA_NAME-if-.patch\n      - patches/0012-Fix-find_library-so-that-it-looks-in-sys.prefix-lib-.patch\n      - patches/0013-Disable-new-dtags-in-unixccompiler.py.patch\n      - patches/0014-Fix-cross-compilation-on-Debian-based-distros.patch\n      - patches/0015-Disable-registry-lookup-unless-CONDA_PY_ALLOW_REG_PA.patch\n      - patches/0016-Unvendor-openssl.patch\n      - patches/0017-Unvendor-sqlite3.patch\n      # https://bugs.python.org/issue35644\n      - patches/0018-venv-Revert-a-change-from-https-github.com-python-cp.patch\n      - patches/0019-Win-Add-back-the-DLLSuffix-used-to-find-the-openssl-.patch\n      - patches/0020-Use-ranlib-from-env-if-env-variable-is-set.patch\n      - patches/0021-roll-back-2e33ecd-for-py_compile.main.patch\n      # Python 3.8 is pretty broken without this.\n      - patches/0022-Add-CondaEcosystemModifyDllSearchPath.patch\n\n  # TODO :: Depend on our own packages for these:\n  - url: https://github.com/python/cpython-source-deps/archive/xz-5.2.2.zip          # [win]\n    folder: externals/xz-5.2.2                                                       # [win]\n    sha256: 02b6d6f1e0369940e7e1f0d324992e069d09f5f3d32d86e2d22cd8b82ac3fb3f         # [win]\n  # Not used as of 3.7b3 (tcltk from cpython-bin- is), but kept for archival and license reasons.\n  - url: https://github.com/python/cpython-source-deps/archive/tcl-core-8.6.9.0.zip  # [win]\n    folder: externals/tcl-core-8.6.9.0                                               # [win]\n    sha256: ea9e724536ec13b476ebbd47948303b92fdd90a33aa94f30fcc2f5c3a899f69e         # [win]\n  # Not used as of 3.7b3 (tcltk from cpython-bin- is), but kept for archival and license reasons.\n  - url: https://github.com/python/cpython-source-deps/archive/tk-8.6.9.0.zip        # [win]\n    folder: externals/tk-8.6.9.0                                                     # [win]\n    sha256: f3112b6bbc3bd163c877030187e73ce9a113ce03eff559ec5b9df697e3a08fad         # [win]\n  - url: https://github.com/python/cpython-bin-deps/archive/tcltk-8.6.9.0.zip        # [win]\n    folder: externals/tcltk-8.6.9.0                                                  # [win]\n    sha256: 37cd629a75d2a34974a3d771ccab5c9e3caf3d138cea81040f9cdba1aded1cf2         # [win]\n  - url: https://github.com/python/cpython-source-deps/archive/tix-8.4.3.6.zip       # [win]\n    folder: externals/tix-8.4.3.6                                                    # [win]\n    sha256: e558e3dc5e67ac0942f8fceafce00ca46b177da9ebeaf38ec7fafd9b9913ac56         # [win]\n  - url: https://github.com/python/cpython-source-deps/archive/bzip2-1.0.6.zip       # [win]\n    folder: externals/bzip2-1.0.6                                                    # [win]\n    sha256: c42fd1432a2667b964a74bc423bb7485059c4a6d5dc92946d59dbf9a6bdb988d         # [win]\n  - url: https://github.com/python/cpython-source-deps/archive/zlib-1.2.11.zip       # [win]\n    folder: externals/zlib-1.2.11                                                    # [win]\n    sha256: debb1952945fa6c25817a40abe90641b572c83171f244937b70b9fe156f5a63a         # [win]\n  - url: https://github.com/python/cpython-bin-deps/archive/nasm-2.11.06.zip         # [win]\n    folder: externals/nasm-2.11.06                                                   # [win]\n    sha256: de3c87b26a80e789986d8e6950c6304175d3829afe9c6c7211eb7257266ab0ac         # [win]\n  - url: https://github.com/python/cpython-bin-deps/archive/libffi.zip               # [win]\n    folder: externals/libffi                                                         # [win]\n    sha256: 4872e72e188a5aa1124db0c3b163a4163e84ead359a514d86dd7c6fa2d2ff02a         # [win]\n\n\nbuild:\n  number: 7\n  # Windows has issues updating python if conda is using files itself.\n  # Copy rather than link.\n  no_link:\n    - DLLs/_ctypes.pyd  # [win]\n  # We delete the shared libraries.\n  ignore_run_exports:   # [unix]\n    - bzip2             # [unix]\n  # Disabled until new conda-build release\n  detect_binary_files_with_prefix: True\n  # detect_binary_files_with_prefix: False\n  # binary_has_prefix_files:\n  #   - lib/libpython3.8.*.1.0\n  #   - bin/python3.8  # [linux]\n  #   - lib/libpython3.8.a  # [linux]\n  #   - lib/libpython3.8.nolto.a  # [linux]\n  #   - lib/libpython3.so  # [linux]\n  #   - lib/python3.8/lib-dynload/_hashlib.cpython-38-x86_64-linux-gnu.so  # [linux]\n  #   - lib/libpython3.dylib  # [osx]\n  # match python.org compiler standard\n  skip: True            # [win and int(float(vc)) < 14]\n# Would like to be able to append to the calculated build string here, ping @msarahan, is this possible?\n  string: h{{ PKG_HASH }}_{{ PKG_BUILDNUM }}{{ linkage_nature }}{{ debug }}_cpython\n  run_exports:\n    noarch:\n      - python\n    weak:\n      - python_abi 3.8.* *_cp38\n  script_env:\n   - PY_INTERP_LINKAGE_NATURE\n   - PY_INTERP_DEBUG\n# Not until: https://github.com/mingwandroid/conda-build/commit/c68a7d100866df7a3e9c0e3177fc7ef0ff76def9\n# {% if 'conda-forge' not in channel_targets %}\n#      - CONDA_FORGE=yes\n# {% else %}\n#      - CONDA_FORGE=no\n# {% endif %}\n\nrequirements:\n  build:\n    - {{ compiler('c') }}\n    - {{ compiler('cxx') }}\n    - {{ cdt('xorg-x11-proto-devel') }}  # [linux]\n    - {{ cdt('libx11-devel') }}  # [linux]\n    - {{ cdt('libuuid-devel') }}  # [linux and not (ppc64le or aarch64)]\n    - make  # [not win]\n    - pkg-config  # [not win]\n    # configure script looks for llvm-ar for lto\n    - llvm-tools  # [osx]\n    - patch  # [not win]\n    - m2-patch  # [win]\n    - posix  # [win]\n    - ld_impl_{{ target_platform }}  # [linux]\n    - binutils_impl_{{ target_platform }} >=2.33.1  # [linux]\n  host:\n    - bzip2  # [not win]\n    - sqlite\n    - xz  # [not win]\n    - zlib  # [not win]\n    - openssl\n    - readline  # [not win]\n    - tk  # [not win]\n    - ncurses  # [linux]\n    - libffi  # [not win]\n    - ld_impl_{{ target_platform }}  # [linux]\n  run:\n    - ld_impl_{{ target_platform }}  # [linux]\n  run_constrained:\n    - python_abi 3.8.* *_cp38\n\ntest:\n  requires:\n    - ripgrep\n    - cmake\n    - ninja\n    - cython\n    - setuptools\n    - {{ compiler('c') }}\n    # Tried to use enable_language(C) to avoid needing this. It does not work.\n    - {{ compiler('cxx') }}\n  files:\n    - tests/distutils/*\n    - tests/distutils.cext/*\n    - tests/cmake/*\n    - tests/cython/*\n    - tests/prefix-replacement/*\n  commands:\n    - python -V\n    - python3 -V            # [not win]\n    - 2to3 -h\n    - pydoc -h\n    - python3-config --help  # [not win]\n    - python -m venv %%TEMP%%\\venv  # [win]\n    - python -c \"import sysconfig; print(sysconfig.get_config_var('CC'))\"  # [not win]\n    -  _CONDA_PYTHON_SYSCONFIGDATA_NAME=_sysconfigdata_x86_64_conda_cos6_linux_gnu python -c \"import sysconfig; print(sysconfig.get_config_var('CC'))\"  # [linux64]\n    # check for unreplaced @ symbols in sysconfig files\n    - for f in ${CONDA_PREFIX}/lib/python*/_sysconfig*.py; do echo \"Checking $f:\"; if [[ `rg @ $f` ]]; then echo \"FAILED ON $f\"; cat $f; exit 1; fi; done  # [linux64 or osx]\n    - pushd tests\n    -   pushd distutils\n    -     python setup.py install -v -v\n    -     python -c \"import foobar\"\n    -   popd\n    -   pushd distutils.cext\n    -     python setup.py install -v -v\n    -     python -c \"import greet; greet.greet('Python user')\" | rg \"Hello Python\"\n    -   popd\n    -   pushd prefix-replacement  # [unix]\n    -     bash build-and-test.sh  # [unix]\n    -   popd  # [unix]\n    -   pushd cmake\n    -     cmake -GNinja -DPY_VER={{ version }}\n          # --trace --debug-output --debug-trycompile .\n    -   popd\n    - popd\n    - test ! -f default.profraw   # [osx]\n\nabout:\n  home: http://www.python.org/\n  license: Python-2.0\n  license_file: LICENSE\n  summary: General purpose programming language\n  description: |\n    Python is a widely used high-level, general-purpose, interpreted, dynamic\n    programming language. Its design philosophy emphasizes code\n    readability, and its syntax allows programmers to express concepts in\n    fewer lines of code than would be possible in languages such as C++ or\n    Java. The language provides constructs intended to enable clear programs\n    on both a small and large scale.\n  doc_url: https://www.python.org/doc/versions/\n  doc_source_url: https://github.com/python/pythondotorg/blob/master/docs/source/index.rst\n  dev_url: https://docs.python.org/devguide/\n\nextra:\n  recipe-maintainers:\n    - isuruf\n    - jakirkham\n    - jjhelmus\n    - mingwandroid\n    - msarahan\n    - pelson\n    - ocefpaf\n    - scopatz\n",
 "req":{
  "__set__":true,
  "elements":[
   "binutils_impl_",
   "bzip2",
   "c_compiler_stub",
   "cdt_stub",
   "cxx_compiler_stub",
   "ld_impl_",
   "libffi",
   "llvm-tools",
   "m2-patch",
   "make",
   "ncurses",
   "openssl",
   "patch",
   "pkg-config",
   "posix",
   "readline",
   "sqlite",
   "tk",
   "xz",
   "zlib"
  ]
 },
 "requirements":{
  "build":{
   "__set__":true,
   "elements":[
    "binutils_impl_",
    "c_compiler_stub",
    "cdt_stub",
    "cxx_compiler_stub",
    "ld_impl_",
    "llvm-tools",
    "m2-patch",
    "make",
    "patch",
    "pkg-config",
    "posix"
   ]
  },
  "host":{
   "__set__":true,
   "elements":[
    "bzip2",
    "ld_impl_",
    "libffi",
    "ncurses",
    "openssl",
    "readline",
    "sqlite",
    "tk",
    "xz",
    "zlib"
   ]
  },
  "run":{
   "__set__":true,
   "elements":[
    "ld_impl_"
   ]
  },
  "test":{
   "__set__":true,
   "elements":[
    "c_compiler_stub",
    "cmake",
    "cxx_compiler_stub",
    "cython",
    "ninja",
    "ripgrep",
    "setuptools"
   ]
  }
 },
 "smithy_version":"3.6.5",
 "strong_exports":false,
 "total_requirements":{
  "build":{
   "__set__":true,
   "elements":[
    "binutils_impl_ >=2.33.1",
    "c_compiler_stub",
    "cdt_stub",
    "cxx_compiler_stub",
    "ld_impl_",
    "llvm-tools",
    "m2-patch",
    "make",
    "patch",
    "pkg-config",
    "posix"
   ]
  },
  "host":{
   "__set__":true,
   "elements":[
    "bzip2",
    "ld_impl_",
    "libffi",
    "ncurses",
    "openssl",
    "readline",
    "sqlite",
    "tk",
    "xz",
    "zlib"
   ]
  },
  "run":{
   "__set__":true,
   "elements":[
    "ld_impl_"
   ]
  },
  "test":{
   "__set__":true,
   "elements":[
    "c_compiler_stub",
    "cmake",
    "cxx_compiler_stub",
    "cython",
    "ninja",
    "ripgrep",
    "setuptools"
   ]
  }
 },
 "url":"https://www.python.org/ftp/python/3.7.3/Python-3.7.3.tar.xz",
 "version":"3.8.2"
}