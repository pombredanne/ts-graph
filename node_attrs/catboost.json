{
 "PRed":[
  {
   "PR":{
    "__lazy_json__":"pr_json/240031870.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"CompilerRebuild",
    "migrator_version":1,
    "name":"Python 3.7, GCC 7, R 3.5.1, openBLAS 0.3.2"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/339461676.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"MigrationYaml",
    "migrator_object_version":1,
    "migrator_version":0,
    "name":"python38"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/404893331.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"MigrationYaml",
    "migrator_object_version":1,
    "migrator_version":0,
    "name":"pypy"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  }
 ],
 "bad":"Upstream: Error getting upstream version",
 "conda-forge.yml":{
  "provider":{
   "win":"azure"
  }
 },
 "feedstock_name":"catboost",
 "meta_yaml":{
  "about":{
   "description":"General purpose gradient boosting on decision trees library with categorical features support out of the box.\nIt is easy to install, contains fast inference implementation and supports CPU and GPU (even multi-GPU) computation.\n",
   "dev_url":"https://github.com/catboost/catboost",
   "doc_url":"https://catboost.ai/docs/concepts/about.html",
   "home":"http://catboost.ai",
   "license":"Apache 2.0",
   "license_family":"MIT",
   "license_file":null,
   "license_url":"https://github.com/catboost/catboost/blob/master/LICENSE",
   "summary":"Gradient boosting on decision trees library"
  },
  "build":{
   "number":"1"
  },
  "extra":{
   "recipe-maintainers":[
    "sab",
    "kizill",
    "nikitxskv",
    "dbakshee",
    "andrey-khropov",
    "sab",
    "kizill",
    "nikitxskv",
    "dbakshee",
    "andrey-khropov",
    "sab",
    "kizill",
    "nikitxskv",
    "dbakshee",
    "andrey-khropov"
   ]
  },
  "package":{
   "name":"catboost",
   "version":"0.23"
  },
  "requirements":{
   "build":[
    "python",
    "pip",
    "python",
    "pip",
    "python",
    "pip"
   ],
   "run":[
    "python",
    "numpy >=1.16.0",
    "pandas >=0.24.0",
    "scipy",
    "six",
    "python",
    "numpy >=1.16.0",
    "pandas >=0.24.0",
    "scipy",
    "six",
    "python",
    "numpy >=1.16.0",
    "pandas >=0.24.0",
    "scipy",
    "six"
   ]
  },
  "test":{
   "imports":[
    "catboost",
    "catboost",
    "catboost"
   ]
  }
 },
 "name":"catboost",
 "new_version":false,
 "pinning_version":"2020.04.17.01.00.32",
 "raw_meta_yaml":"package:\n  name: catboost\n  version: \"0.23\"\n\nbuild:\n  number: 1\n  #  Yandex supplies whl files on PyPI for:\n  # - Linux: Python 2.7, 3.5, 3.6, 3.7, 3.8\n  # - OS X: Python 2.7, 3.5, 3.6, 3.7, 3.8\n  # - Win-64: Python 2.7, 3.5, 3.6, 3.7, 3.8\n  skip: True  # [win32 or python_impl == 'pypy']\n\nrequirements:\n  build:\n    - python\n    - pip\n  run:\n    - python\n    - enum34  # [py27]\n    - numpy >=1.16.0\n    - pandas >=0.24.0\n    - scipy\n    - six\n\ntest:\n  imports:\n    - catboost\n\nabout:\n  home: http://catboost.ai\n  license: Apache 2.0\n  license_family: MIT\n  license_file:\n  license_url: https://github.com/catboost/catboost/blob/master/LICENSE\n  summary: 'Gradient boosting on decision trees library'\n\n  description: |\n    General purpose gradient boosting on decision trees library with categorical features support out of the box.\n    It is easy to install, contains fast inference implementation and supports CPU and GPU (even multi-GPU) computation.\n  doc_url: https://catboost.ai/docs/concepts/about.html\n  dev_url: https://github.com/catboost/catboost\n\nextra:\n  recipe-maintainers:\n    - sab\n    - kizill\n    - nikitxskv\n    - dbakshee\n    - andrey-khropov\n",
 "req":{
  "__set__":true,
  "elements":[
   "numpy",
   "pandas",
   "pip",
   "python",
   "scipy",
   "six"
  ]
 },
 "requirements":{
  "build":{
   "__set__":true,
   "elements":[
    "pip",
    "python"
   ]
  },
  "host":{
   "__set__":true,
   "elements":[]
  },
  "run":{
   "__set__":true,
   "elements":[
    "numpy",
    "pandas",
    "python",
    "scipy",
    "six"
   ]
  },
  "test":{
   "__set__":true,
   "elements":[]
  }
 },
 "smithy_version":"No azure token. Create a token and\nput it in ~/.conda-smithy/azure.token\n3.6.16",
 "strong_exports":false,
 "time":1568135295.1372278,
 "total_requirements":{
  "build":{
   "__set__":true,
   "elements":[
    "pip",
    "python"
   ]
  },
  "host":{
   "__set__":true,
   "elements":[]
  },
  "run":{
   "__set__":true,
   "elements":[
    "numpy >=1.16.0",
    "pandas >=0.24.0",
    "python",
    "scipy",
    "six"
   ]
  },
  "test":{
   "__set__":true,
   "elements":[]
  }
 },
 "version":"0.23"
}