{
 "PRed":[
  {
   "PR":{
    "__lazy_json__":"pr_json/253692776.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"CompilerRebuild",
    "migrator_version":1,
    "name":"Python 3.7, GCC 7, R 3.5.1, openBLAS 0.3.2"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/297648051.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"Version",
    "migrator_version":0,
    "version":"0.0.3"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/311908344.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"Version",
    "migrator_version":0,
    "version":"0.0.4"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/317280009.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"Version",
    "migrator_version":0,
    "version":"0.0.5"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/322211554.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"Version",
    "migrator_version":0,
    "version":"0.0.7"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/418112478.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"Version",
    "migrator_version":0,
    "version":"0.0.8"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  }
 ],
 "bad":false,
 "conda-forge.yml":{
  "bot":{
   "automerge":true
  },
  "provider":{
   "win":"azure"
  }
 },
 "feedstock_name":"pysqa",
 "hash_type":"sha256",
 "meta_yaml":{
  "about":{
   "description":"The goal of pysqa is to make submitting to an HPC cluster as easy as starting another subprocess.\nThis is based on the assumption that even though modern queuing systems allow for an wide range of\ndifferent configuration, most users submit the majority of their jobs with very similar parameters.\nTherefore pysqa allows the users to store their submission scripts as jinja2 templates for quick\naccess. After the submission pysqa allows the users to track the progress of their jobs, delete them\nor enable reservations using the built-in functionality of the queuing system. The currently supported\nqueuing systems are: LFS, MOAB, SGE, SLURM, TORQUE.\n",
   "dev_url":"https://github.com/pyiron/pysqa",
   "doc_url":"https://github.com/pyiron/pysqa",
   "home":"https://github.com/pyiron/pysqa",
   "license":"BSD-3-Clause",
   "license_family":"BSD",
   "license_file":"LICENSE",
   "summary":"Simple queue adapter for Python"
  },
  "build":{
   "noarch":"python",
   "number":"0",
   "script":"-m pip install . --no-deps -vv"
  },
  "extra":{
   "recipe-maintainers":[
    "jan-janssen",
    "pyiron-runner",
    "jan-janssen",
    "pyiron-runner",
    "jan-janssen",
    "pyiron-runner"
   ]
  },
  "package":{
   "name":"pysqa",
   "version":"0.0.8"
  },
  "requirements":{
   "host":[
    "python",
    "pip",
    "python",
    "pip",
    "python",
    "pip"
   ],
   "run":[
    "python",
    "pip",
    "defusedxml",
    "pandas >=0.23",
    "pyyaml",
    "jinja2",
    "paramiko",
    "tqdm",
    "python",
    "pip",
    "defusedxml",
    "pandas >=0.23",
    "pyyaml",
    "jinja2",
    "paramiko",
    "tqdm",
    "python",
    "pip",
    "defusedxml",
    "pandas >=0.23",
    "pyyaml",
    "jinja2",
    "paramiko",
    "tqdm"
   ]
  },
  "source":{
   "sha256":"29da813f86d58f8ee39c4194744e4f34c341ee83961a8591b9199f7d99c09995",
   "url":"https://pypi.io/packages/source/p/pysqa/pysqa-0.0.8.tar.gz"
  },
  "test":{
   "commands":[
    "pip check",
    "pip check",
    "pip check"
   ],
   "imports":[
    "pysqa",
    "pysqa",
    "pysqa"
   ]
  }
 },
 "name":"pysqa",
 "new_version":"0.0.8",
 "new_version_attempts":{
  "0.0.8":1
 },
 "new_version_errors":{},
 "pinning_version":"2020.05.13.13.23.43",
 "raw_meta_yaml":"{% set name = \"pysqa\" %}\n{% set version = \"0.0.8\" %}\n\npackage:\n  name: {{ name|lower }}\n  version: {{ version }}\n\nsource:\n  url: https://pypi.io/packages/source/{{ name[0] }}/{{ name }}/{{ name }}-{{ version }}.tar.gz\n  sha256: 29da813f86d58f8ee39c4194744e4f34c341ee83961a8591b9199f7d99c09995\n\nbuild:\n  noarch: python\n  number: 0\n  script: {{ PYTHON }} -m pip install . --no-deps -vv\n\nrequirements:\n  host:\n    - python\n    - pip\n  run:\n    - python\n    - pip\n    - defusedxml\n    - pandas >=0.23\n    - pyyaml\n    - jinja2\n    - paramiko\n    - tqdm\n\ntest:\n  imports:\n    - pysqa\n  commands:\n    - pip check\n\nabout:\n  home: https://github.com/pyiron/pysqa\n  license: BSD-3-Clause\n  license_family: BSD\n  license_file: LICENSE\n  summary: Simple queue adapter for Python\n  description: |\n    The goal of pysqa is to make submitting to an HPC cluster as easy as starting another subprocess. \n    This is based on the assumption that even though modern queuing systems allow for an wide range of \n    different configuration, most users submit the majority of their jobs with very similar parameters. \n    Therefore pysqa allows the users to store their submission scripts as jinja2 templates for quick \n    access. After the submission pysqa allows the users to track the progress of their jobs, delete them \n    or enable reservations using the built-in functionality of the queuing system. The currently supported \n    queuing systems are: LFS, MOAB, SGE, SLURM, TORQUE.\n  doc_url: https://github.com/pyiron/pysqa\n  dev_url: https://github.com/pyiron/pysqa\n\nextra:\n  recipe-maintainers:\n    - jan-janssen\n    - pyiron-runner\n",
 "req":{
  "__set__":true,
  "elements":[
   "defusedxml",
   "jinja2",
   "pandas",
   "paramiko",
   "pip",
   "python",
   "pyyaml",
   "tqdm"
  ]
 },
 "requirements":{
  "build":{
   "__set__":true,
   "elements":[]
  },
  "host":{
   "__set__":true,
   "elements":[
    "pip",
    "python"
   ]
  },
  "run":{
   "__set__":true,
   "elements":[
    "defusedxml",
    "jinja2",
    "pandas",
    "paramiko",
    "pip",
    "python",
    "pyyaml",
    "tqdm"
   ]
  },
  "test":{
   "__set__":true,
   "elements":[]
  }
 },
 "smithy_version":"No azure token. Create a token and\nput it in ~/.conda-smithy/azure.token\n3.7.1\n",
 "strong_exports":false,
 "total_requirements":{
  "build":{
   "__set__":true,
   "elements":[]
  },
  "host":{
   "__set__":true,
   "elements":[
    "pip",
    "python"
   ]
  },
  "run":{
   "__set__":true,
   "elements":[
    "defusedxml",
    "jinja2",
    "pandas >=0.23",
    "paramiko",
    "pip",
    "python",
    "pyyaml",
    "tqdm"
   ]
  },
  "test":{
   "__set__":true,
   "elements":[]
  }
 },
 "url":"https://pypi.io/packages/source/p/pysqa/pysqa-0.0.4.tar.gz",
 "version":"0.0.8"
}