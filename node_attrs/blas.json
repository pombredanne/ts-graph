{
 "PRed":[
  {
   "PR":{
    "id":"7cff1ef7-c09b-4342-9fff-82e38a84f643",
    "merged_at":"fix aarch missing prs",
    "state":"closed"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"ArchRebuild",
    "migrator_version":1,
    "name":"aarch64 and ppc64le addition"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  },
  {
   "data":{
    "bot_rerun":false,
    "migrator_name":"GFortranOSXRebuild",
    "migrator_version":0,
    "name":"fortran_compiler_stub-7"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  }
 ],
 "bad":false,
 "conda-forge.yml":{
  "provider":{
   "linux_aarch64":"default",
   "linux_ppc64le":"azure"
  }
 },
 "feedstock_name":"blas",
 "hash_type":"sha256",
 "meta_yaml":{
  "about":{
   "home":"https://github.com/conda-forge/blas-feedstock",
   "license":"BSD-3-Clause",
   "license_file":[
    "LICENSE.txt",
    "_license.txt",
    "LICENSE.txt",
    "LICENSE.txt"
   ],
   "summary":"Metapackage to select the BLAS variant. Use conda's pinning mechanism in your environment to control which variant you want."
  },
  "build":{
   "number":"15"
  },
  "extra":{
   "recipe-maintainers":[
    "jakirkham",
    "pelson",
    "isuruf",
    "ocefpaf",
    "jakirkham",
    "pelson",
    "isuruf",
    "ocefpaf",
    "jakirkham",
    "pelson",
    "isuruf",
    "ocefpaf"
   ]
  },
  "outputs":[
   {
    "build":{
     "run_exports":[
      "libblas"
     ],
     "string":"15_",
     "track_features":null
    },
    "files":[
     "Library/bin/libblas.dll"
    ],
    "name":"libblas",
    "requirements":{
     "host":null,
     "run":null,
     "run_constrained":[
      "libcblas",
      "liblapack",
      "liblapacke",
      "blas *"
     ]
    },
    "script":"build_pkg.bat",
    "test":{
     "commands":[
      "if not exist %LIBRARY_BIN%/libblas.dll exit 1"
     ]
    }
   },
   {
    "build":{
     "run_exports":[
      "libcblas"
     ],
     "string":"15_",
     "track_features":null
    },
    "files":[
     "Library/bin/libcblas.dll"
    ],
    "name":"libcblas",
    "requirements":{
     "host":[
      "libblas"
     ],
     "run":[
      "libblas"
     ],
     "run_constrained":[
      "liblapack",
      "liblapacke",
      "blas *"
     ]
    },
    "script":"build_pkg.bat",
    "test":{
     "commands":[
      "if not exist %LIBRARY_BIN%/libcblas.dll exit 1"
     ]
    }
   },
   {
    "build":{
     "run_exports":[
      "liblapack"
     ],
     "string":"15_",
     "track_features":null
    },
    "files":[
     "Library/bin/liblapack.dll"
    ],
    "name":"liblapack",
    "requirements":{
     "host":[
      "libblas"
     ],
     "run":[
      "libblas"
     ],
     "run_constrained":[
      "libcblas",
      "liblapacke",
      "blas *"
     ]
    },
    "script":"build_pkg.bat",
    "test":{
     "commands":[
      "if not exist %LIBRARY_BIN%/liblapack.dll exit 1"
     ]
    }
   },
   {
    "build":{
     "run_exports":[
      "liblapacke"
     ],
     "string":"15_",
     "track_features":null
    },
    "files":[
     "Library/bin/liblapacke.dll"
    ],
    "name":"liblapacke",
    "requirements":{
     "host":[
      "libblas",
      "libcblas",
      "liblapack"
     ],
     "run":[
      "libblas",
      "libcblas",
      "liblapack"
     ],
     "run_constrained":[
      "blas *"
     ]
    },
    "script":"build_pkg.bat",
    "test":{
     "commands":[
      "if not exist %LIBRARY_BIN%/liblapacke.dll exit 1"
     ]
    }
   },
   {
    "build":{
     "activate_in_script":true,
     "string":""
    },
    "name":"blas",
    "requirements":{
     "build":[
      "m2w64_c_compiler_stub",
      "m2w64_fortran_compiler_stub",
      "cmake",
      "m2-make",
      "posix"
     ],
     "host":[
      "liblapack",
      "liblapacke",
      "libcblas",
      "libblas"
     ],
     "run":[
      "liblapack",
      "liblapacke",
      "libcblas",
      "libblas"
     ]
    },
    "script":"test_blas.bat",
    "test":{
     "commands":[
      "if not exist %LIBRARY_BIN%/liblapacke.dll exit 1"
     ]
    },
    "version":"2.15"
   },
   {
    "build":{
     "string":"15_"
    },
    "name":"blas-devel",
    "requirements":{
     "run":[
      "blas"
     ]
    },
    "test":{
     "commands":[
      "if not exist %LIBRARY_BIN%/liblapack.dll exit 1"
     ]
    }
   },
   {
    "build":{
     "run_exports":[
      "libblas"
     ],
     "string":"15_",
     "track_features":null
    },
    "files":[
     "lib/libblas.dylib",
     "lib/libblas.3.dylib"
    ],
    "name":"libblas",
    "requirements":{
     "host":null,
     "run":null,
     "run_constrained":[
      "libcblas",
      "liblapack",
      "liblapacke",
      "blas *"
     ]
    },
    "script":"build_pkg.sh",
    "test":{
     "commands":[
      "test -f $PREFIX/lib/libblas.3.dylib"
     ]
    }
   },
   {
    "build":{
     "run_exports":[
      "libcblas"
     ],
     "string":"15_",
     "track_features":null
    },
    "files":[
     "lib/libcblas.dylib",
     "lib/libcblas.3.dylib"
    ],
    "name":"libcblas",
    "requirements":{
     "host":[
      "libblas"
     ],
     "run":[
      "libblas"
     ],
     "run_constrained":[
      "liblapack",
      "liblapacke",
      "blas *"
     ]
    },
    "script":"build_pkg.sh",
    "test":{
     "commands":[
      "test -f $PREFIX/lib/libcblas.3.dylib"
     ]
    }
   },
   {
    "build":{
     "run_exports":[
      "liblapack"
     ],
     "string":"15_",
     "track_features":null
    },
    "files":[
     "lib/liblapack.dylib",
     "lib/liblapack.3.dylib"
    ],
    "name":"liblapack",
    "requirements":{
     "host":[
      "libblas"
     ],
     "run":[
      "libblas"
     ],
     "run_constrained":[
      "libcblas",
      "liblapacke",
      "blas *"
     ]
    },
    "script":"build_pkg.sh",
    "test":{
     "commands":[
      "test -f $PREFIX/lib/liblapack.3.dylib"
     ]
    }
   },
   {
    "build":{
     "run_exports":[
      "liblapacke"
     ],
     "string":"15_",
     "track_features":null
    },
    "files":[
     "lib/liblapacke.dylib",
     "lib/liblapacke.3.dylib"
    ],
    "name":"liblapacke",
    "requirements":{
     "host":[
      "libblas",
      "libcblas",
      "liblapack"
     ],
     "run":[
      "libblas",
      "libcblas",
      "liblapack"
     ],
     "run_constrained":[
      "blas *"
     ]
    },
    "script":"build_pkg.sh",
    "test":{
     "commands":[
      "test -f $PREFIX/lib/liblapacke.3.dylib"
     ]
    }
   },
   {
    "build":{
     "activate_in_script":true,
     "string":""
    },
    "name":"blas",
    "requirements":{
     "build":[
      "c_compiler_stub",
      "fortran_compiler_stub",
      "cmake"
     ],
     "host":[
      "liblapack",
      "liblapacke",
      "libcblas",
      "libblas"
     ],
     "run":[
      "liblapack",
      "liblapacke",
      "libcblas",
      "libblas"
     ]
    },
    "script":"test_blas.sh",
    "test":{
     "commands":[
      "test -f $PREFIX/lib/liblapacke.dylib",
      "test -f $PREFIX/lib/liblapacke.3.dylib"
     ]
    },
    "version":"2.15"
   },
   {
    "build":{
     "string":"15_"
    },
    "name":"blas-devel",
    "requirements":{
     "run":[
      "blas"
     ]
    },
    "test":{
     "commands":[
      "test -f $PREFIX/lib/liblapack.dylib"
     ]
    }
   },
   {
    "build":{
     "run_exports":[
      "libblas"
     ],
     "string":"15_",
     "track_features":null
    },
    "files":[
     "lib/libblas.so",
     "lib/libblas.so.3"
    ],
    "name":"libblas",
    "requirements":{
     "host":null,
     "run":null,
     "run_constrained":[
      "libcblas",
      "liblapack",
      "liblapacke",
      "blas *"
     ]
    },
    "script":"build_pkg.sh",
    "test":{
     "commands":[
      "test -f $PREFIX/lib/libblas.so.3"
     ]
    }
   },
   {
    "build":{
     "run_exports":[
      "libcblas"
     ],
     "string":"15_",
     "track_features":null
    },
    "files":[
     "lib/libcblas.so",
     "lib/libcblas.so.3"
    ],
    "name":"libcblas",
    "requirements":{
     "host":[
      "libblas"
     ],
     "run":[
      "libblas"
     ],
     "run_constrained":[
      "liblapack",
      "liblapacke",
      "blas *"
     ]
    },
    "script":"build_pkg.sh",
    "test":{
     "commands":[
      "test -f $PREFIX/lib/libcblas.so.3"
     ]
    }
   },
   {
    "build":{
     "run_exports":[
      "liblapack"
     ],
     "string":"15_",
     "track_features":null
    },
    "files":[
     "lib/liblapack.so",
     "lib/liblapack.so.3"
    ],
    "name":"liblapack",
    "requirements":{
     "host":[
      "libblas"
     ],
     "run":[
      "libblas"
     ],
     "run_constrained":[
      "libcblas",
      "liblapacke",
      "blas *"
     ]
    },
    "script":"build_pkg.sh",
    "test":{
     "commands":[
      "test -f $PREFIX/lib/liblapack.so.3"
     ]
    }
   },
   {
    "build":{
     "run_exports":[
      "liblapacke"
     ],
     "string":"15_",
     "track_features":null
    },
    "files":[
     "lib/liblapacke.so",
     "lib/liblapacke.so.3"
    ],
    "name":"liblapacke",
    "requirements":{
     "host":[
      "libblas",
      "libcblas",
      "liblapack"
     ],
     "run":[
      "libblas",
      "libcblas",
      "liblapack"
     ],
     "run_constrained":[
      "blas *"
     ]
    },
    "script":"build_pkg.sh",
    "test":{
     "commands":[
      "test -f $PREFIX/lib/liblapacke.so.3"
     ]
    }
   },
   {
    "build":{
     "activate_in_script":true,
     "string":""
    },
    "name":"blas",
    "requirements":{
     "build":[
      "c_compiler_stub",
      "fortran_compiler_stub",
      "cmake"
     ],
     "host":[
      "liblapack",
      "liblapacke",
      "libcblas",
      "libblas"
     ],
     "run":[
      "liblapack",
      "liblapacke",
      "libcblas",
      "libblas"
     ]
    },
    "script":"test_blas.sh",
    "test":{
     "commands":[
      "test -f $PREFIX/lib/liblapacke.so",
      "test -f $PREFIX/lib/liblapacke.so.3"
     ]
    },
    "version":"2.15"
   },
   {
    "build":{
     "string":"15_"
    },
    "name":"blas-devel",
    "requirements":{
     "run":[
      "blas"
     ]
    },
    "test":{
     "commands":[
      "test -f $PREFIX/lib/liblapack.so"
     ]
    }
   }
  ],
  "package":{
   "name":"blas-split",
   "version":"3.8.0"
  },
  "requirements":{
   "build":[
    "m2w64_c_compiler_stub",
    "m2w64_fortran_compiler_stub",
    "cmake",
    "m2-make",
    "posix",
    "c_compiler_stub",
    "fortran_compiler_stub",
    "cmake",
    "make",
    "c_compiler_stub",
    "fortran_compiler_stub",
    "cmake",
    "make"
   ]
  },
  "source":{
   "patches":[
    "more_testing.diff",
    "more_testing.diff",
    "more_testing.diff"
   ],
   "sha256":"deb22cc4a6120bff72621155a9917f485f96ef8319ac074a7afbc68aab88bcf6",
   "url":"http://www.netlib.org/lapack/lapack-3.8.0.tar.gz"
  }
 },
 "name":"blas-split",
 "new_version":false,
 "outputs_names":[
  "blas",
  "blas-devel",
  "libblas",
  "libcblas",
  "liblapack",
  "liblapacke"
 ],
 "pinning_version":"2019.08.12",
 "raw_meta_yaml":"{% set version = \"3.8.0\" %}\n{% set build_num = 15 %}\n{% if blas_impl == 'openblas' %}\n{% set build_num = build_num + 1 %}\n{% endif %}\n{% set version_major = version.split(\".\")[0] %}\n{% set blas_major = \"2\" %}\n\n# blas_major denotes major infrastructural change to how blas is managed\npackage:\n  name: blas-split\n  version: \"{{ version }}\"\n\nsource:\n  url: http://www.netlib.org/lapack/lapack-{{ version }}.tar.gz\n  sha256: deb22cc4a6120bff72621155a9917f485f96ef8319ac074a7afbc68aab88bcf6\n  patches:\n    # Test BLAS and LAPACKE in addition to LAPACK\n    - more_testing.diff\n\nbuild:\n  number: \"{{ build_num }}\"\n\nrequirements:\n  build:\n    - {{ compiler(\"c\") }}               # [unix]\n    - {{ compiler(\"fortran\") }}         # [unix]\n    - {{ compiler(\"m2w64_c\") }}         # [win]\n    - {{ compiler(\"m2w64_fortran\") }}   # [win]\n    - cmake\n    - m2-make   # [win]\n    - make      # [not win]\n    - posix     # [win]\n\noutputs:\n  - name: libblas\n    script: build_pkg.sh     # [unix]\n    script: build_pkg.bat    # [win]\n    build:\n      string: \"{{ build_num }}_{{ blas_impl }}\"\n      run_exports:\n        - {{ pin_subpackage(\"libblas\", max_pin=\"x\") }}\n      track_features:\n       - blas_{{ blas_impl }}     # [blas_impl != blas_default_impl]\n    requirements:\n      host:\n        - libopenblas 0.3.9   # [blas_impl == 'openblas']\n        - mkl 2020.0       # [not win and blas_impl == 'mkl']\n        - mkl 2020.*       # [win and blas_impl == 'mkl']\n        - blis 0.6.1       # [blas_impl == 'blis']\n      run:\n        - {{ pin_compatible(\"libopenblas\", max_pin=\"x.x.x\", exact=win) }}     # [blas_impl == 'openblas']\n        - {{ pin_compatible(\"mkl\", max_pin=\"x\", exact=win) }}              # [blas_impl == 'mkl']\n        - {{ pin_compatible(\"blis\", max_pin=\"x.x.x\", exact=win) }}         # [blas_impl == 'blis']\n      run_constrained:\n        - {{ pin_subpackage(\"libcblas\", exact=True) }}\n        - {{ pin_subpackage(\"liblapack\", exact=True) }}    # [blas_impl != 'blis']\n        - {{ pin_subpackage(\"liblapacke\", exact=True) }}   # [blas_impl != 'blis']\n        - blas * {{ blas_impl }}\n    files:\n      - lib/libblas.so                          # [linux]\n      - lib/libblas.dylib                       # [osx]\n      - lib/libblas.so.{{ version_major }}      # [linux]\n      - lib/libblas.{{ version_major }}.dylib   # [osx]\n      - Library/bin/libblas.dll                 # [win]\n    test:\n      commands:\n        # Following line is just to help conda-build's used variables detection\n        - echo hello  # [blas_impl_lib == 'blas']\n        - test -f $PREFIX/lib/libblas.so.{{ version_major }}      # [linux]\n        - test -f $PREFIX/lib/libblas.{{ version_major }}.dylib   # [osx]\n        - if not exist %LIBRARY_BIN%/libblas.dll exit 1           # [win]\n\n  - name: libcblas\n    script: build_pkg.sh     # [unix]\n    script: build_pkg.bat    # [win]\n    build:\n      string: \"{{ build_num }}_{{ blas_impl }}\"\n      run_exports:\n        - {{ pin_subpackage(\"libcblas\", max_pin=\"x\") }}\n      track_features:\n       - blas_{{ blas_impl }}     # [blas_impl != blas_default_impl]\n    requirements:\n      host:\n        - {{ pin_subpackage(\"libblas\", exact=True) }}\n      run:\n        - {{ pin_subpackage(\"libblas\", exact=True) }}\n      run_constrained:\n        - {{ pin_subpackage(\"liblapack\", exact=True) }}    # [blas_impl != 'blis']\n        - {{ pin_subpackage(\"liblapacke\", exact=True) }}   # [blas_impl != 'blis']\n        - blas * {{ blas_impl }}\n    files:\n      - lib/libcblas.so                          # [linux]\n      - lib/libcblas.dylib                       # [osx]\n      - lib/libcblas.so.{{ version_major }}      # [linux]\n      - lib/libcblas.{{ version_major }}.dylib   # [osx]\n      - Library/bin/libcblas.dll                 # [win]\n    test:\n      commands:\n        - test -f $PREFIX/lib/libcblas.so.{{ version_major }}      # [linux]\n        - test -f $PREFIX/lib/libcblas.{{ version_major }}.dylib   # [osx]\n        - if not exist %LIBRARY_BIN%/libcblas.dll exit 1           # [win]\n\n  {% if blas_impl != 'blis' %}\n  - name: liblapack\n    script: build_pkg.sh     # [unix]\n    script: build_pkg.bat    # [win]\n    build:\n      string: \"{{ build_num }}_{{ blas_impl }}\"\n      run_exports:\n        - {{ pin_subpackage(\"liblapack\", max_pin=\"x.x\") }}\n      track_features:\n       - blas_{{ blas_impl }}     # [blas_impl != blas_default_impl]\n    requirements:\n      host:\n        - {{ pin_subpackage(\"libblas\", exact=True) }}\n      run:\n        - {{ pin_subpackage(\"libblas\", exact=True) }}\n      run_constrained:\n        - {{ pin_subpackage(\"libcblas\", exact=True) }}\n        - {{ pin_subpackage(\"liblapacke\", exact=True) }}\n        - blas * {{ blas_impl }}\n    files:\n      - lib/liblapack.so                          # [linux]\n      - lib/liblapack.dylib                       # [osx]\n      - lib/liblapack.so.{{ version_major }}      # [linux]\n      - lib/liblapack.{{ version_major }}.dylib   # [osx]\n      - Library/bin/liblapack.dll                 # [win]\n    test:\n      commands:\n        - test -f $PREFIX/lib/liblapack.so.{{ version_major }}      # [linux]\n        - test -f $PREFIX/lib/liblapack.{{ version_major }}.dylib   # [osx]\n        - if not exist %LIBRARY_BIN%/liblapack.dll exit 1           # [win]\n\n  - name: liblapacke\n    script: build_pkg.sh     # [unix]\n    script: build_pkg.bat    # [win]\n    build:\n      string: \"{{ build_num }}_{{ blas_impl }}\"\n      run_exports:\n        - {{ pin_subpackage(\"liblapacke\", max_pin=\"x.x\") }}\n      track_features:\n       - blas_{{ blas_impl }}     # [blas_impl != blas_default_impl]\n    requirements:\n      host:\n        - {{ pin_subpackage(\"libblas\", exact=True) }}\n        - {{ pin_subpackage(\"libcblas\", exact=True) }}\n        - {{ pin_subpackage(\"liblapack\", exact=True) }}\n      run:\n        - {{ pin_subpackage(\"libblas\", exact=True) }}\n        - {{ pin_subpackage(\"libcblas\", exact=True) }}\n        - {{ pin_subpackage(\"liblapack\", exact=True) }}\n      run_constrained:\n        - blas * {{ blas_impl }}\n    files:\n      - lib/liblapacke.so                          # [linux]\n      - lib/liblapacke.dylib                       # [osx]\n      - lib/liblapacke.so.{{ version_major }}      # [linux]\n      - lib/liblapacke.{{ version_major }}.dylib   # [osx]\n      - Library/bin/liblapacke.dll                 # [win]\n    test:\n      commands:\n        - test -f $PREFIX/lib/liblapacke.so.{{ version_major }}      # [linux]\n        - test -f $PREFIX/lib/liblapacke.{{ version_major }}.dylib   # [osx]\n        - if not exist %LIBRARY_BIN%/liblapacke.dll exit 1           # [win]\n  {% endif %}\n\n  # For compatiblity\n  - name: blas\n    version: \"{{ blas_major }}.{{ build_num }}\"\n    script: test_blas.sh   # [unix]\n    script: test_blas.bat  # [win]\n    build:\n      string: \"{{ blas_impl }}\"\n      activate_in_script: True\n    requirements:\n      build:\n        - {{ compiler('c') }}                 # [unix]\n        - {{ compiler('fortran') }}           # [unix]\n        - {{ compiler('m2w64_c') }}           # [win]\n        - {{ compiler('m2w64_fortran') }}     # [win]\n        - cmake\n        - m2-make   # [win]\n        - posix     # [win]\n        - llvm-openmp   # [linux and blas_impl == \"openblas\"]\n      host:\n      # Building with blis fails due to a conda-build bug\n      {% if blas_impl != 'blis' %}\n        - {{ pin_subpackage(\"liblapack\", exact=True) }}\n        - {{ pin_subpackage(\"liblapacke\", exact=True) }}\n        - {{ pin_subpackage(\"libcblas\", exact=True) }}\n        - {{ pin_subpackage(\"libblas\", exact=True) }}\n      {% else %}\n        - blis 0.6.1\n      {% endif %}\n      run:\n        - {{ pin_subpackage(\"liblapack\", exact=True) }}      # [blas_impl != 'blis']\n        - {{ pin_subpackage(\"liblapacke\", exact=True) }}     # [blas_impl != 'blis']\n        - liblapack  {{ version }} *netlib                   # [blas_impl == 'blis']\n        - liblapacke {{ version }} *netlib                   # [blas_impl == 'blis']\n        - {{ pin_subpackage(\"libcblas\", exact=True) }}\n        - {{ pin_subpackage(\"libblas\", exact=True) }}\n    test:\n      commands:\n        - test -f $PREFIX/lib/liblapacke.so                          # [linux]\n        - test -f $PREFIX/lib/liblapacke.so.{{ version_major }}      # [linux]\n        - test -f $PREFIX/lib/liblapacke.dylib                       # [osx]\n        - test -f $PREFIX/lib/liblapacke.{{ version_major }}.dylib   # [osx]\n        - if not exist %LIBRARY_BIN%/liblapacke.dll exit 1           # [win]\n\n  - name: blas-devel\n    build:\n      string: \"{{ build_num }}_{{ blas_impl }}\"\n    requirements:\n      run:\n        - openblas   # [blas_impl == \"openblas\"]\n        - mkl-devel  # [blas_impl == \"mkl\"]\n        - {{ pin_subpackage(\"blas\", exact=True) }}\n    test:\n      commands:\n        - test -f $PREFIX/lib/liblapack.so                          # [linux]\n        - test -f $PREFIX/lib/liblapack.dylib                       # [osx]\n        - if not exist %LIBRARY_BIN%/liblapack.dll exit 1           # [win]\n\nabout:\n  home: https://github.com/conda-forge/blas-feedstock\n  license: BSD-3-Clause\n  license_file:\n    - LICENSE.txt\n    - {{ blas_impl }}_license.txt  # [win]\n  summary: Metapackage to select the BLAS variant. Use conda's pinning mechanism in your environment to control which variant you want.\n\nextra:\n  recipe-maintainers:\n    - jakirkham\n    - pelson\n    - isuruf\n    - ocefpaf\n",
 "req":{
  "__set__":true,
  "elements":[
   "blas",
   "c_compiler_stub",
   "cmake",
   "fortran_compiler_stub",
   "libblas",
   "libcblas",
   "liblapack",
   "liblapacke",
   "m2-make",
   "m2w64_c_compiler_stub",
   "m2w64_fortran_compiler_stub",
   "make",
   "posix"
  ]
 },
 "requirements":{
  "build":{
   "__set__":true,
   "elements":[
    "c_compiler_stub",
    "cmake",
    "fortran_compiler_stub",
    "m2-make",
    "m2w64_c_compiler_stub",
    "m2w64_fortran_compiler_stub",
    "make",
    "posix"
   ]
  },
  "host":{
   "__set__":true,
   "elements":[
    "libblas",
    "libcblas",
    "liblapack",
    "liblapacke"
   ]
  },
  "run":{
   "__set__":true,
   "elements":[
    "blas",
    "libblas",
    "libcblas",
    "liblapack",
    "liblapacke"
   ]
  },
  "test":{
   "__set__":true,
   "elements":[]
  }
 },
 "smithy_version":"3.4.1",
 "strong_exports":false,
 "total_requirements":{
  "build":{
   "__set__":true,
   "elements":[
    "c_compiler_stub",
    "cmake",
    "fortran_compiler_stub",
    "m2-make",
    "m2w64_c_compiler_stub",
    "m2w64_fortran_compiler_stub",
    "make",
    "posix"
   ]
  },
  "host":{
   "__set__":true,
   "elements":[
    "libblas",
    "libcblas",
    "liblapack",
    "liblapacke"
   ]
  },
  "run":{
   "__set__":true,
   "elements":[
    "blas",
    "libblas",
    "libcblas",
    "liblapack",
    "liblapacke"
   ]
  },
  "test":{
   "__set__":true,
   "elements":[]
  }
 },
 "url":"http://www.netlib.org/lapack/lapack-3.8.0.tar.gz",
 "version":"3.8.0"
}