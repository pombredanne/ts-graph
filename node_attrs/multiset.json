{
 "bad":false,
 "conda-forge.yml":{},
 "feedstock_name":"multiset",
 "hash_type":"sha256",
 "meta_yaml":{
  "about":{
   "description":"A multiset is similar to the builtin set, but it allows an element to occur\nmultiple times. It is an unordered collection of element which have to be\nhashable just like in a set. It supports the same methods and operations as\nset does, e.g. membership test, union, intersection, and (symmetric)\ndifference.\n",
   "dev_url":"https://github.com/wheerd/multiset",
   "doc_url":"http://multiset.readthedocs.io",
   "home":"https://github.com/wheerd/multiset",
   "license":"MIT",
   "license_family":"MIT",
   "license_file":"LICENSE",
   "summary":"A multiset implementation for python"
  },
  "build":{
   "noarch":"python",
   "number":"0",
   "script":"python -m pip install --no-deps --ignore-installed ."
  },
  "extra":{
   "recipe-maintainers":[
    "johanneskoester",
    "johanneskoester",
    "johanneskoester"
   ]
  },
  "package":{
   "name":"multiset",
   "version":"2.1.1"
  },
  "requirements":{
   "build":[
    "python",
    "pip",
    "setuptools",
    "setuptools_scm",
    "pytest",
    "pytest-runner",
    "python",
    "pip",
    "setuptools",
    "setuptools_scm",
    "pytest",
    "pytest-runner",
    "python",
    "pip",
    "setuptools",
    "setuptools_scm",
    "pytest",
    "pytest-runner"
   ],
   "run":[
    "python",
    "python",
    "python"
   ]
  },
  "source":{
   "fn":"multiset-2.1.1.tar.gz",
   "sha256":"4801569c08bfcecfe7b0927b17f079c90f8607aca8fecaf42ded92b737162bc7",
   "url":"https://pypi.io/packages/source/m/multiset/multiset-2.1.1.tar.gz"
  },
  "test":{
   "imports":[
    "multiset",
    "multiset",
    "multiset"
   ]
  }
 },
 "name":"multiset",
 "new_version":"2.1.1",
 "raw_meta_yaml":"{% set name = \"multiset\" %}\n{% set version = \"2.1.1\" %}\n{% set sha256 = \"4801569c08bfcecfe7b0927b17f079c90f8607aca8fecaf42ded92b737162bc7\" %}\n\npackage:\n  name: {{ name|lower }}\n  version: {{ version }}\n\nsource:\n  fn: {{ name }}-{{ version }}.tar.gz\n  url: https://pypi.io/packages/source/{{ name[0] }}/{{ name }}/{{ name }}-{{ version }}.tar.gz\n  sha256: {{ sha256 }}\n\nbuild:\n  noarch: python\n  number: 0\n  script: python -m pip install --no-deps --ignore-installed .\n\nrequirements:\n  build:\n    - python\n    - pip\n    - setuptools\n    - setuptools_scm\n    - pytest\n    - pytest-runner\n  run:\n    - python\n\ntest:\n  imports:\n    - multiset\n\nabout:\n  home: https://github.com/wheerd/multiset\n  license: MIT\n  license_family: MIT\n  license_file: LICENSE\n  summary: A multiset implementation for python\n  description: |\n    A multiset is similar to the builtin set, but it allows an element to occur\n    multiple times. It is an unordered collection of element which have to be\n    hashable just like in a set. It supports the same methods and operations as\n    set does, e.g. membership test, union, intersection, and (symmetric)\n    difference.\n  doc_url: http://multiset.readthedocs.io\n  dev_url: https://github.com/wheerd/multiset\n\nextra:\n  recipe-maintainers:\n    - johanneskoester\n",
 "req":{
  "__set__":true,
  "elements":[
   "pip",
   "pytest",
   "pytest-runner",
   "python",
   "setuptools",
   "setuptools_scm"
  ]
 },
 "requirements":{
  "build":{
   "__set__":true,
   "elements":[
    "pip",
    "pytest",
    "pytest-runner",
    "python",
    "setuptools",
    "setuptools_scm"
   ]
  },
  "host":{
   "__set__":true,
   "elements":[]
  },
  "run":{
   "__set__":true,
   "elements":[
    "python"
   ]
  },
  "test":{
   "__set__":true,
   "elements":[]
  }
 },
 "strong_exports":false,
 "total_requirements":{
  "build":{
   "__set__":true,
   "elements":[
    "pip",
    "pytest",
    "pytest-runner",
    "python",
    "setuptools",
    "setuptools_scm"
   ]
  },
  "host":{
   "__set__":true,
   "elements":[]
  },
  "run":{
   "__set__":true,
   "elements":[
    "python"
   ]
  },
  "test":{
   "__set__":true,
   "elements":[]
  }
 },
 "url":"https://pypi.io/packages/source/m/multiset/multiset-2.1.1.tar.gz",
 "version":"2.1.1"
}