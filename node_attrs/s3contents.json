{
 "PRed":[
  {
   "PR":{
    "__lazy_json__":"pr_json/221667032.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"CompilerRebuild",
    "migrator_version":1,
    "name":"Python 3.7, GCC 7, R 3.5.1, openBLAS 0.3.2"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/276371222.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"Version",
    "migrator_version":0,
    "version":"0.1.13"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/313697192.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"Version",
    "migrator_version":0,
    "version":"0.3.0"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/333401163.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"Version",
    "migrator_version":0,
    "version":"0.3.1"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/339640751.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"Version",
    "migrator_version":0,
    "version":"0.3.2"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/358884044.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"Version",
    "migrator_version":0,
    "version":"0.3.3"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/366475102.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"Version",
    "migrator_version":0,
    "version":"0.4.0"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  }
 ],
 "bad":false,
 "conda-forge.yml":{
  "compiler_stack":"comp7",
  "max_py_ver":"37",
  "max_r_ver":"35"
 },
 "feedstock_name":"s3contents",
 "hash_type":"sha256",
 "meta_yaml":{
  "about":{
   "description":"\nA S3 and GCS backed ContentsManager implementation for Jupyter.\n\nIt aims to a be a transparent, drop-in replacement for Jupyter standard\nfilesystem-backed storage system. With this implementation of a Jupyter\nContents Manager you can save all your notebooks, regular files, directories\nstructure directly to a S3/GCS bucket, this could be on AWS/GCP or a self\nhosted S3 API compatible like minio.\n",
   "dev_url":"https://github.com/danielfrg/s3contents",
   "home":"https://github.com/danielfrg/s3contents",
   "license":"Apache 2.0",
   "license_family":"APACHE",
   "license_file":"LICENSE",
   "summary":"A S3-backed ContentsManager implementation for Jupyter"
  },
  "build":{
   "noarch":"python",
   "number":"0",
   "script":"-m pip install . --no-deps -vv"
  },
  "extra":{
   "recipe-maintainers":[
    "mariusvniekerk",
    "danielfrg",
    "mariusvniekerk",
    "danielfrg",
    "mariusvniekerk",
    "danielfrg"
   ]
  },
  "package":{
   "name":"s3contents",
   "version":"0.4.0"
  },
  "requirements":{
   "host":[
    "python >=3",
    "pip",
    "python >=3",
    "pip",
    "python >=3",
    "pip"
   ],
   "run":[
    "python >=3",
    "jupyter",
    "boto3",
    "requests",
    "s3fs",
    "gcsfs",
    "python >=3",
    "jupyter",
    "boto3",
    "requests",
    "s3fs",
    "gcsfs",
    "python >=3",
    "jupyter",
    "boto3",
    "requests",
    "s3fs",
    "gcsfs"
   ]
  },
  "source":{
   "fn":"s3contents-0.4.0.tar.gz",
   "sha256":"648c956859d6d3a9a83d214b39654a490d34c8a3829d79c3ad316ef5fd8ba821",
   "url":"https://pypi.io/packages/source/s/s3contents/s3contents-0.4.0.tar.gz"
  },
  "test":{
   "imports":[
    "s3contents",
    "s3contents.tests",
    "s3contents",
    "s3contents.tests",
    "s3contents",
    "s3contents.tests"
   ],
   "requires":[
    "nose",
    "mock",
    "nose",
    "mock",
    "nose",
    "mock"
   ]
  }
 },
 "name":"s3contents",
 "new_version":"0.5.0",
 "new_version_attempts":{
  "0.5.0":109
 },
 "new_version_errors":{},
 "pinning_version":"2020.01.16",
 "raw_meta_yaml":"{% set name = \"s3contents\" %}\n{% set version = \"0.4.0\" %}\n\npackage:\n  name: '{{ name|lower }}'\n  version: '{{ version }}'\n\nsource:\n  fn: '{{ name }}-{{ version }}.tar.gz'\n  url: https://pypi.io/packages/source/{{ name[0] }}/{{ name }}/{{ name }}-{{ version }}.tar.gz\n  sha256: 648c956859d6d3a9a83d214b39654a490d34c8a3829d79c3ad316ef5fd8ba821\n\nbuild:\n  number: 0\n  noarch: python\n  script: {{ PYTHON }} -m pip install . --no-deps -vv\n\nrequirements:\n  host:\n    - python >=3\n    - pip\n  run:\n    - python >=3\n    - jupyter\n    - boto3\n    - requests\n    - s3fs\n    - gcsfs\n\ntest:\n  requires:\n    - nose\n    - mock\n  imports:\n    - s3contents\n    - s3contents.tests\n\nabout:\n  home: https://github.com/danielfrg/s3contents\n  license: Apache 2.0\n  license_family: APACHE\n  license_file: 'LICENSE'\n  summary: A S3-backed ContentsManager implementation for Jupyter\n  description: |\n\n    A S3 and GCS backed ContentsManager implementation for Jupyter.\n\n    It aims to a be a transparent, drop-in replacement for Jupyter standard\n    filesystem-backed storage system. With this implementation of a Jupyter\n    Contents Manager you can save all your notebooks, regular files, directories\n    structure directly to a S3/GCS bucket, this could be on AWS/GCP or a self\n    hosted S3 API compatible like minio.\n  dev_url: 'https://github.com/danielfrg/s3contents'\n\nextra:\n  recipe-maintainers:\n    - mariusvniekerk\n    - danielfrg\n",
 "req":{
  "__set__":true,
  "elements":[
   "boto3",
   "gcsfs",
   "jupyter",
   "pip",
   "python",
   "requests",
   "s3fs"
  ]
 },
 "requirements":{
  "build":{
   "__set__":true,
   "elements":[]
  },
  "host":{
   "__set__":true,
   "elements":[
    "pip",
    "python"
   ]
  },
  "run":{
   "__set__":true,
   "elements":[
    "boto3",
    "gcsfs",
    "jupyter",
    "python",
    "requests",
    "s3fs"
   ]
  },
  "test":{
   "__set__":true,
   "elements":[
    "mock",
    "nose"
   ]
  }
 },
 "smithy_version":"3.6.5",
 "strong_exports":false,
 "total_requirements":{
  "build":{
   "__set__":true,
   "elements":[]
  },
  "host":{
   "__set__":true,
   "elements":[
    "pip",
    "python >=3"
   ]
  },
  "run":{
   "__set__":true,
   "elements":[
    "boto3",
    "gcsfs",
    "jupyter",
    "python >=3",
    "requests",
    "s3fs"
   ]
  },
  "test":{
   "__set__":true,
   "elements":[
    "mock",
    "nose"
   ]
  }
 },
 "url":"https://pypi.io/packages/source/s/s3contents/s3contents-0.3.0.tar.gz",
 "version":"0.4.0"
}