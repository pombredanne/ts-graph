{
 "PRed":[
  {
   "PR":{
    "__lazy_json__":"pr_json/303832132.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"Version",
    "migrator_version":0,
    "version":"0.3.0"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/325429277.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"Version",
    "migrator_version":0,
    "version":"0.5.0"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/336305280.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"MigrationYaml",
    "migrator_object_version":1,
    "migrator_version":0,
    "name":"python38"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/348623407.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"Version",
    "migrator_version":0,
    "version":"0.6.0"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/349555621.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"Version",
    "migrator_version":0,
    "version":"0.6.1"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/400512888.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"Version",
    "migrator_version":0,
    "version":"0.7.0"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/402090845.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"Version",
    "migrator_version":0,
    "version":"0.7.1"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  }
 ],
 "bad":false,
 "conda-forge.yml":{
  "provider":{
   "win":"azure"
  }
 },
 "feedstock_name":"dask-gateway",
 "hash_type":"sha256",
 "meta_yaml":{
  "about":{
   "description":"A multi-tenant server for securely deploying and managing Dask clusters.",
   "dev_url":"http://github.com/dask/dask-gateway",
   "doc_url":"https://gateway.dask.org",
   "home":"http://github.com/dask/dask-gateway",
   "license":"BSD-3-Clause",
   "license_family":"BSD",
   "license_file":"LICENSE",
   "summary":"A multi-tenant server for securely deploying and managing Dask clusters."
  },
  "build":{
   "entry_points":[
    "dask-gateway-scheduler = dask_gateway.dask_cli:scheduler",
    "dask-gateway-worker = dask_gateway.dask_cli:worker",
    "dask-gateway-scheduler = dask_gateway.dask_cli:scheduler",
    "dask-gateway-worker = dask_gateway.dask_cli:worker",
    "dask-gateway-scheduler = dask_gateway.dask_cli:scheduler",
    "dask-gateway-worker = dask_gateway.dask_cli:worker"
   ],
   "number":"0",
   "script":"cd dask-gateway && python -m pip install . -vv --no-deps"
  },
  "extra":{
   "recipe-maintainers":[
    "ericdill",
    "jcrist",
    "ericdill",
    "jcrist",
    "ericdill",
    "jcrist"
   ]
  },
  "outputs":[
   {
    "name":"dask-gateway"
   },
   {
    "build":null,
    "name":"dask-gateway-kerberos",
    "requirements":[
     "python",
     "dask-gateway",
     "winkerberos"
    ],
    "test":{
     "imports":[
      "dask_gateway"
     ]
    }
   },
   {
    "build":{
     "entry_points":[
      "dask-gateway-server = dask_gateway_server.app:main",
      "dask-gateway-jobqueue-launcher = dask_gateway_server.managers.jobqueue.launcher:main"
     ],
     "skip":true
    },
    "name":"dask-gateway-server",
    "requirements":{
     "host":[
      "python",
      "go",
      "pip"
     ],
     "run":[
      "python",
      "aiohttp",
      "colorlog",
      "cryptography",
      "traitlets"
     ]
    },
    "script":"build-dask-gateway-server.sh",
    "test":{
     "commands":[
      "dask-gateway-server --help",
      "which dask-gateway-jobqueue-launcher"
     ],
     "imports":[
      "dask_gateway_server"
     ]
    }
   },
   {
    "build":{
     "skip":true
    },
    "name":"dask-gateway-server-kerberos",
    "requirements":[
     "python",
     "dask-gateway-server",
     "pykerberos"
    ],
    "test":{
     "imports":[
      "dask_gateway_server"
     ]
    }
   },
   {
    "build":{
     "skip":true
    },
    "name":"dask-gateway-server-local",
    "requirements":[
     "python",
     "dask-gateway-server",
     "sqlalchemy"
    ],
    "test":{
     "imports":[
      "dask_gateway_server",
      "dask_gateway_server.backends.local"
     ]
    }
   },
   {
    "build":{
     "skip":true
    },
    "name":"dask-gateway-server-jobqueue",
    "requirements":[
     "python",
     "dask-gateway-server",
     "sqlalchemy"
    ],
    "test":{
     "imports":[
      "dask_gateway_server",
      "dask_gateway_server.backends.jobqueue.slurm",
      "dask_gateway_server.backends.jobqueue.pbs"
     ]
    }
   },
   {
    "build":{
     "skip":true
    },
    "name":"dask-gateway-server-yarn",
    "requirements":[
     "python",
     "dask-gateway-server",
     "sqlalchemy",
     "skein >=0.7.3"
    ],
    "test":{
     "imports":[
      "dask_gateway_server.backends.yarn"
     ]
    }
   },
   {
    "build":{
     "skip":true
    },
    "name":"dask-gateway-server-kubernetes",
    "requirements":[
     "python",
     "dask-gateway-server",
     "kubernetes_asyncio"
    ],
    "test":{
     "imports":[
      "dask_gateway_server.backends.kubernetes"
     ]
    }
   },
   {
    "name":"dask-gateway"
   },
   {
    "build":null,
    "name":"dask-gateway-kerberos",
    "requirements":[
     "python",
     "dask-gateway",
     "pykerberos"
    ],
    "test":{
     "imports":[
      "dask_gateway"
     ]
    }
   },
   {
    "build":{
     "entry_points":[
      "dask-gateway-server = dask_gateway_server.app:main",
      "dask-gateway-jobqueue-launcher = dask_gateway_server.managers.jobqueue.launcher:main"
     ]
    },
    "name":"dask-gateway-server",
    "requirements":{
     "host":[
      "python",
      "go",
      "pip"
     ],
     "run":[
      "python",
      "aiohttp",
      "colorlog",
      "cryptography",
      "traitlets"
     ]
    },
    "script":"build-dask-gateway-server.sh",
    "test":{
     "commands":[
      "dask-gateway-server --help",
      "which dask-gateway-jobqueue-launcher"
     ],
     "imports":[
      "dask_gateway_server"
     ]
    }
   },
   {
    "build":null,
    "name":"dask-gateway-server-kerberos",
    "requirements":[
     "python",
     "dask-gateway-server",
     "pykerberos"
    ],
    "test":{
     "imports":[
      "dask_gateway_server"
     ]
    }
   },
   {
    "build":null,
    "name":"dask-gateway-server-local",
    "requirements":[
     "python",
     "dask-gateway-server",
     "sqlalchemy"
    ],
    "test":{
     "imports":[
      "dask_gateway_server",
      "dask_gateway_server.backends.local"
     ]
    }
   },
   {
    "build":null,
    "name":"dask-gateway-server-jobqueue",
    "requirements":[
     "python",
     "dask-gateway-server",
     "sqlalchemy"
    ],
    "test":{
     "imports":[
      "dask_gateway_server",
      "dask_gateway_server.backends.jobqueue.slurm",
      "dask_gateway_server.backends.jobqueue.pbs"
     ]
    }
   },
   {
    "build":null,
    "name":"dask-gateway-server-yarn",
    "requirements":[
     "python",
     "dask-gateway-server",
     "sqlalchemy",
     "skein >=0.7.3"
    ],
    "test":{
     "imports":[
      "dask_gateway_server.backends.yarn"
     ]
    }
   },
   {
    "build":null,
    "name":"dask-gateway-server-kubernetes",
    "requirements":[
     "python",
     "dask-gateway-server",
     "kubernetes_asyncio"
    ],
    "test":{
     "imports":[
      "dask_gateway_server.backends.kubernetes"
     ]
    }
   },
   {
    "name":"dask-gateway"
   },
   {
    "build":null,
    "name":"dask-gateway-kerberos",
    "requirements":[
     "python",
     "dask-gateway",
     "pykerberos"
    ],
    "test":{
     "imports":[
      "dask_gateway"
     ]
    }
   },
   {
    "build":{
     "entry_points":[
      "dask-gateway-server = dask_gateway_server.app:main",
      "dask-gateway-jobqueue-launcher = dask_gateway_server.managers.jobqueue.launcher:main"
     ]
    },
    "name":"dask-gateway-server",
    "requirements":{
     "host":[
      "python",
      "go",
      "pip"
     ],
     "run":[
      "python",
      "aiohttp",
      "colorlog",
      "cryptography",
      "traitlets"
     ]
    },
    "script":"build-dask-gateway-server.sh",
    "test":{
     "commands":[
      "dask-gateway-server --help",
      "which dask-gateway-jobqueue-launcher"
     ],
     "imports":[
      "dask_gateway_server"
     ]
    }
   },
   {
    "build":null,
    "name":"dask-gateway-server-kerberos",
    "requirements":[
     "python",
     "dask-gateway-server",
     "pykerberos"
    ],
    "test":{
     "imports":[
      "dask_gateway_server"
     ]
    }
   },
   {
    "build":null,
    "name":"dask-gateway-server-local",
    "requirements":[
     "python",
     "dask-gateway-server",
     "sqlalchemy"
    ],
    "test":{
     "imports":[
      "dask_gateway_server",
      "dask_gateway_server.backends.local"
     ]
    }
   },
   {
    "build":null,
    "name":"dask-gateway-server-jobqueue",
    "requirements":[
     "python",
     "dask-gateway-server",
     "sqlalchemy"
    ],
    "test":{
     "imports":[
      "dask_gateway_server",
      "dask_gateway_server.backends.jobqueue.slurm",
      "dask_gateway_server.backends.jobqueue.pbs"
     ]
    }
   },
   {
    "build":null,
    "name":"dask-gateway-server-yarn",
    "requirements":[
     "python",
     "dask-gateway-server",
     "sqlalchemy",
     "skein >=0.7.3"
    ],
    "test":{
     "imports":[
      "dask_gateway_server.backends.yarn"
     ]
    }
   },
   {
    "build":null,
    "name":"dask-gateway-server-kubernetes",
    "requirements":[
     "python",
     "dask-gateway-server",
     "kubernetes_asyncio"
    ],
    "test":{
     "imports":[
      "dask_gateway_server.backends.kubernetes"
     ]
    }
   }
  ],
  "package":{
   "name":"dask-gateway",
   "version":"0.7.1"
  },
  "requirements":{
   "host":[
    "python",
    "pip",
    "python",
    "pip",
    "python",
    "pip"
   ],
   "run":[
    "python",
    "aiohttp",
    "dask >=2.2.0",
    "distributed >=2.2.0",
    "python",
    "aiohttp",
    "dask >=2.2.0",
    "distributed >=2.2.0",
    "python",
    "aiohttp",
    "dask >=2.2.0",
    "distributed >=2.2.0"
   ]
  },
  "source":{
   "sha256":"c8561bc445c0e95eebf49fc1f3cf6ea203e0cae783eacd5d8b87aa0d16d59467",
   "url":"https://github.com/dask/dask-gateway/archive/0.7.1.tar.gz"
  },
  "test":{
   "commands":[
    "dask-gateway-scheduler --help",
    "dask-gateway-worker --help",
    "dask-gateway-scheduler --help",
    "dask-gateway-worker --help",
    "dask-gateway-scheduler --help",
    "dask-gateway-worker --help"
   ],
   "imports":[
    "dask_gateway",
    "dask_gateway",
    "dask_gateway"
   ]
  }
 },
 "name":"dask-gateway",
 "new_version":"0.3.0",
 "new_version_attempts":{
  "0.7.0":1,
  "0.7.1":1
 },
 "new_version_errors":{},
 "outputs_names":[
  "dask-gateway",
  "dask-gateway-kerberos",
  "dask-gateway-server",
  "dask-gateway-server-jobqueue",
  "dask-gateway-server-kerberos",
  "dask-gateway-server-kubernetes",
  "dask-gateway-server-local",
  "dask-gateway-server-yarn"
 ],
 "pinning_version":"2020.04.10.18.29.06",
 "raw_meta_yaml":"{% set name = \"dask-gateway\" %}\n{% set version = \"0.7.1\" %}\n\npackage:\n  version: {{ version }}\n  name: {{ name|lower }}\n\nsource:\n  url: https://github.com/dask/{{ name }}/archive/{{ version }}.tar.gz\n  sha256: c8561bc445c0e95eebf49fc1f3cf6ea203e0cae783eacd5d8b87aa0d16d59467\n\nbuild:\n  number: 0\n  skip: true  # [py<36]\n  script: cd dask-gateway && python -m pip install . -vv --no-deps\n  entry_points:\n    - dask-gateway-scheduler = dask_gateway.dask_cli:scheduler\n    - dask-gateway-worker = dask_gateway.dask_cli:worker\n\nrequirements:\n  host:\n    - python\n    - pip\n  run:\n    - python\n    - aiohttp\n    - dask >=2.2.0\n    - distributed >=2.2.0\n\ntest:\n  imports:\n    - dask_gateway\n  commands:\n    - dask-gateway-scheduler --help\n    - dask-gateway-worker --help\n\noutputs:\n    # Core client package (full recipe is above)\n  - name: dask-gateway\n\n    # Client-side kerberos auth\n  - name: dask-gateway-kerberos\n    build:\n      skip: true  # [py<36]\n    requirements:\n      - python\n      - {{ pin_subpackage('dask-gateway', exact=True) }}\n      - pykerberos  # [osx or linux]\n      - winkerberos  # [win]\n    test:\n      imports:\n        - dask_gateway\n\n    # Core package, required dependencies only\n  - name: dask-gateway-server\n    # XXX: conda-build requires a file here for some reason, can't inline script\n    script: build-dask-gateway-server.sh\n    build:\n      skip: true  # [py<36 or win]\n      entry_points:\n        - dask-gateway-server = dask_gateway_server.app:main\n        - dask-gateway-jobqueue-launcher = dask_gateway_server.managers.jobqueue.launcher:main\n    requirements:\n      host:\n        - python\n        - go\n        - pip\n      run:\n        - python\n        - aiohttp\n        - colorlog\n        - cryptography\n        - traitlets\n\n    test:\n      imports:\n        - dask_gateway_server\n      commands:\n        - dask-gateway-server --help\n        - which dask-gateway-jobqueue-launcher\n\n    # Kerberos authentication\n  - name: dask-gateway-server-kerberos\n    build:\n      skip: true  # [py<36 or win]\n    requirements:\n      - python\n      - {{ pin_subpackage('dask-gateway-server', exact=True) }}\n      - pykerberos\n    test:\n      imports:\n        - dask_gateway_server\n\n    # Local backend\n  - name: dask-gateway-server-local\n    build:\n      skip: true  # [py<36 or win]\n    requirements:\n      - python\n      - {{ pin_subpackage('dask-gateway-server', exact=True) }}\n      - sqlalchemy\n    test:\n      imports:\n        - dask_gateway_server\n        - dask_gateway_server.backends.local\n\n    # Jobqueue backends\n  - name: dask-gateway-server-jobqueue\n    build:\n      skip: true  # [py<36 or win]\n    requirements:\n      - python\n      - {{ pin_subpackage('dask-gateway-server', exact=True) }}\n      - sqlalchemy\n    test:\n      imports:\n        - dask_gateway_server\n        - dask_gateway_server.backends.jobqueue.slurm\n        - dask_gateway_server.backends.jobqueue.pbs\n\n    # Hadoop/YARN backend\n  - name: dask-gateway-server-yarn\n    build:\n      skip: true  # [py<36 or win]\n    requirements:\n      - python\n      - {{ pin_subpackage('dask-gateway-server', exact=True) }}\n      - sqlalchemy\n      - skein >=0.7.3\n    test:\n      imports:\n        - dask_gateway_server.backends.yarn\n\n    # Kubernetes backend\n  - name: dask-gateway-server-kubernetes\n    build:\n      skip: true  # [py<36 or win]\n    requirements:\n      - python\n      - {{ pin_subpackage('dask-gateway-server', exact=True) }}\n      - kubernetes_asyncio\n    test:\n      imports:\n        - dask_gateway_server.backends.kubernetes\n\nabout:\n  home: http://github.com/dask/dask-gateway\n  license: BSD-3-Clause\n  license_family: BSD\n  license_file: LICENSE\n  summary: A multi-tenant server for securely deploying and managing Dask clusters.\n  description: A multi-tenant server for securely deploying and managing Dask clusters.\n  doc_url: https://gateway.dask.org\n  dev_url: http://github.com/dask/dask-gateway\n\nextra:\n  recipe-maintainers:\n    - ericdill\n    - jcrist\n",
 "req":{
  "__set__":true,
  "elements":[
   "aiohttp",
   "colorlog",
   "cryptography",
   "dask",
   "dask-gateway",
   "dask-gateway-server",
   "distributed",
   "go",
   "kubernetes_asyncio",
   "pip",
   "pykerberos",
   "python",
   "skein",
   "sqlalchemy",
   "traitlets",
   "winkerberos"
  ]
 },
 "requirements":{
  "build":{
   "__set__":true,
   "elements":[]
  },
  "host":{
   "__set__":true,
   "elements":[
    "go",
    "pip",
    "python"
   ]
  },
  "run":{
   "__set__":true,
   "elements":[
    "aiohttp",
    "colorlog",
    "cryptography",
    "dask",
    "dask-gateway",
    "dask-gateway-server",
    "distributed",
    "kubernetes_asyncio",
    "pykerberos",
    "python",
    "skein",
    "sqlalchemy",
    "traitlets",
    "winkerberos"
   ]
  },
  "test":{
   "__set__":true,
   "elements":[]
  }
 },
 "smithy_version":"No azure token. Create a token and\nput it in ~/.conda-smithy/azure.token\n3.6.16",
 "strong_exports":false,
 "total_requirements":{
  "build":{
   "__set__":true,
   "elements":[]
  },
  "host":{
   "__set__":true,
   "elements":[
    "go",
    "pip",
    "python"
   ]
  },
  "run":{
   "__set__":true,
   "elements":[
    "aiohttp",
    "colorlog",
    "cryptography",
    "dask >=2.2.0",
    "dask-gateway",
    "dask-gateway-server",
    "distributed >=2.2.0",
    "kubernetes_asyncio",
    "pykerberos",
    "python",
    "skein >=0.7.3",
    "sqlalchemy",
    "traitlets",
    "winkerberos"
   ]
  },
  "test":{
   "__set__":true,
   "elements":[]
  }
 },
 "url":"https://github.com/jcrist/dask-gateway/archive/0.2.0.tar.gz",
 "version":"0.7.1"
}