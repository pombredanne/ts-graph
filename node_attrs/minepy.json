{
 "PRed":[
  {
   "PR":{
    "__lazy_json__":"pr_json/336083318.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"MigrationYaml",
    "migrator_object_version":1,
    "migrator_version":0,
    "name":"python38"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/392698644.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"MigrationYaml",
    "migrator_object_version":1,
    "migrator_version":0,
    "name":"pypy"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  }
 ],
 "bad":false,
 "conda-forge.yml":{
  "provider":{
   "win":"azure"
  }
 },
 "feedstock_name":"minepy",
 "hash_type":"sha256",
 "meta_yaml":{
  "about":{
   "dev_url":"https://github.com/minepy/minepy",
   "doc_url":"http://minepy.readthedocs.io",
   "home":"http://minepy.readthedocs.io",
   "license":"GPL-3.0-only",
   "license_family":"LGPL",
   "license_file":"gpl-3.0.txt",
   "summary":"minepy - Maximal Information-based Nonparametric Exploration"
  },
  "build":{
   "number":"1",
   "script":" -m pip install . --no-deps --ignore-installed -vv "
  },
  "extra":{
   "recipe-maintainers":[
    "philip-khor",
    "philip-khor",
    "philip-khor"
   ]
  },
  "package":{
   "name":"minepy",
   "version":"1.2.4"
  },
  "requirements":{
   "build":[
    "c_compiler_stub",
    "c_compiler_stub",
    "c_compiler_stub"
   ],
   "host":[
    "numpy >=1.3.0",
    "pip",
    "python",
    "numpy >=1.3.0",
    "pip",
    "python",
    "numpy >=1.3.0",
    "pip",
    "python"
   ],
   "run":[
    "numpy",
    "python",
    "numpy",
    "python",
    "numpy",
    "python"
   ]
  },
  "source":{
   "sha256":"04d9525a353065159d6f86d6c70f33b738d437b53a41527462cbe719225c25ed",
   "url":"https://pypi.io/packages/source/m/minepy/minepy-1.2.4.tar.gz"
  },
  "test":{
   "imports":[
    "minepy",
    "minepy",
    "minepy"
   ]
  }
 },
 "name":"minepy",
 "new_version":"1.2.4",
 "pinning_version":"2020.03.23",
 "raw_meta_yaml":"{% set name = \"minepy\" %}\n{% set version = \"1.2.4\" %}\n\npackage:\n  name: \"{{ name|lower }}\"\n  version: \"{{ version }}\"\n\nsource:\n  url: \"https://pypi.io/packages/source/{{ name[0] }}/{{ name }}/{{ name }}-{{ version }}.tar.gz\"\n  sha256: \"04d9525a353065159d6f86d6c70f33b738d437b53a41527462cbe719225c25ed\"\n\nbuild:\n  number: 1\n  script: \"{{ PYTHON }} -m pip install . --no-deps --ignore-installed -vv \"\n\nrequirements:\n  build:\n    - {{ compiler('c') }}\n  host:\n    - numpy >=1.3.0\n    - pip\n    - python\n  run:\n    - {{ pin_compatible('numpy') }}\n    - python\n\ntest:\n  imports:\n    - minepy\n\nabout:\n  home: http://minepy.readthedocs.io\n  license: GPL-3.0-only\n  license_family: LGPL\n  license_file: gpl-3.0.txt\n  summary: minepy - Maximal Information-based Nonparametric Exploration\n  doc_url: http://minepy.readthedocs.io\n  dev_url: https://github.com/minepy/minepy\n\nextra:\n  recipe-maintainers:\n    - philip-khor\n",
 "req":{
  "__set__":true,
  "elements":[
   "c_compiler_stub",
   "numpy",
   "pip",
   "python"
  ]
 },
 "requirements":{
  "build":{
   "__set__":true,
   "elements":[
    "c_compiler_stub"
   ]
  },
  "host":{
   "__set__":true,
   "elements":[
    "numpy",
    "pip",
    "python"
   ]
  },
  "run":{
   "__set__":true,
   "elements":[
    "numpy",
    "python"
   ]
  },
  "test":{
   "__set__":true,
   "elements":[]
  }
 },
 "smithy_version":"No azure token. Create a token and\nput it in ~/.conda-smithy/azure.token\n3.6.15",
 "strong_exports":false,
 "total_requirements":{
  "build":{
   "__set__":true,
   "elements":[
    "c_compiler_stub"
   ]
  },
  "host":{
   "__set__":true,
   "elements":[
    "numpy >=1.3.0",
    "pip",
    "python"
   ]
  },
  "run":{
   "__set__":true,
   "elements":[
    "numpy",
    "python"
   ]
  },
  "test":{
   "__set__":true,
   "elements":[]
  }
 },
 "url":"https://pypi.io/packages/source/m/minepy/minepy-1.2.4.tar.gz",
 "version":"1.2.4"
}