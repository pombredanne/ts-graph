{
 "PRed":[
  {
   "PR":{
    "__lazy_json__":"pr_json/231900201.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"CompilerRebuild",
    "migrator_version":1,
    "name":"Python 3.7, GCC 7, R 3.5.1, openBLAS 0.3.2"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/299150813.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"RBaseRebuild",
    "migrator_version":0,
    "name":"r-base-3.6.1"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/412859907.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"MigrationYaml",
    "migrator_object_version":2,
    "migrator_version":0,
    "name":"r400"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  }
 ],
 "bad":false,
 "conda-forge.yml":{
  "bot":{
   "automerge":true
  },
  "provider":{
   "win":"azure"
  }
 },
 "feedstock_name":"r-ebayesthresh",
 "hash_type":"sha256",
 "meta_yaml":{
  "about":{
   "home":"https://github.com/stephenslab/EbayesThresh",
   "license":"GPL (>= 2)",
   "license_family":"GPL3",
   "license_file":"/lib/R/share/licenses/GPL-3",
   "summary":"Empirical Bayes thresholding using the methods developed by I. M. Johnstone and B. W. Silverman. The basic problem is to estimate a mean vector given a vector of observations of the mean vector plus white noise, taking advantage of possible sparsity in the mean vector. Within a Bayesian formulation, the elements of the mean vector are modelled as having, independently, a distribution that is a mixture of an atom of probability at zero and a suitable heavy-tailed distribution. The mixing parameter can be estimated by a marginal maximum likelihood approach. This leads to an adaptive thresholding approach on the original data. Extensions of the basic method, in particular to wavelet thresholding, are also implemented within the package."
  },
  "build":{
   "merge_build_host":true,
   "noarch":"generic",
   "number":"1003",
   "rpaths":[
    "lib/R/lib/",
    "lib/",
    "lib/R/lib/",
    "lib/",
    "lib/R/lib/",
    "lib/"
   ]
  },
  "extra":{
   "recipe-maintainers":[
    "conda-forge/r",
    "johanneskoester",
    "bgruening",
    "daler",
    "jdblischak",
    "cbrueffer",
    "dbast",
    "conda-forge/r",
    "johanneskoester",
    "bgruening",
    "daler",
    "jdblischak",
    "cbrueffer",
    "dbast",
    "conda-forge/r",
    "johanneskoester",
    "bgruening",
    "daler",
    "jdblischak",
    "cbrueffer",
    "dbast"
   ]
  },
  "package":{
   "name":"r-ebayesthresh",
   "version":"1.4_12"
  },
  "requirements":{
   "build":null,
   "host":[
    "r-base",
    "r-wavethresh",
    "r-base",
    "r-wavethresh",
    "r-base",
    "r-wavethresh"
   ],
   "run":[
    "r-base",
    "r-wavethresh",
    "r-base",
    "r-wavethresh",
    "r-base",
    "r-wavethresh"
   ]
  },
  "source":{
   "fn":"EbayesThresh_1.4-12.tar.gz",
   "sha256":"28850348aa0752a75e0c8f1ae20ef7e352a6493abe8b6a6c40ac09f5476b421d",
   "url":[
    "https://cran.r-project.org/src/contrib/EbayesThresh_1.4-12.tar.gz",
    "https://cran.r-project.org/src/contrib/Archive/EbayesThresh/EbayesThresh_1.4-12.tar.gz",
    "https://cran.r-project.org/src/contrib/EbayesThresh_1.4-12.tar.gz",
    "https://cran.r-project.org/src/contrib/Archive/EbayesThresh/EbayesThresh_1.4-12.tar.gz",
    "https://cran.r-project.org/src/contrib/EbayesThresh_1.4-12.tar.gz",
    "https://cran.r-project.org/src/contrib/Archive/EbayesThresh/EbayesThresh_1.4-12.tar.gz"
   ]
  },
  "test":{
   "commands":[
    "\"%R%\" -e \"library('EbayesThresh')\"",
    "$R -e \"library('EbayesThresh')\"",
    "$R -e \"library('EbayesThresh')\""
   ]
  }
 },
 "name":"r-ebayesthresh",
 "new_version":"1.4_12",
 "pinning_version":"2020.05.04.05.46.47",
 "raw_meta_yaml":"{% set version = '1.4-12' %}\n{% set posix = 'm2-' if win else '' %}\n{% set native = 'm2w64-' if win else '' %}\n\npackage:\n  name: r-ebayesthresh\n  version: {{ version|replace(\"-\", \"_\") }}\n\nsource:\n  fn: EbayesThresh_{{ version }}.tar.gz\n  url:\n    - {{ cran_mirror }}/src/contrib/EbayesThresh_{{ version }}.tar.gz\n    - {{ cran_mirror }}/src/contrib/Archive/EbayesThresh/EbayesThresh_{{ version }}.tar.gz\n  sha256: 28850348aa0752a75e0c8f1ae20ef7e352a6493abe8b6a6c40ac09f5476b421d\n\nbuild:\n  noarch: generic\n  merge_build_host: True  # [win]\n  number: 1003\n  rpaths:\n    - lib/R/lib/\n    - lib/\n\nrequirements:\n  build:\n    - {{ posix }}zip               # [win]\n  host:\n    - r-base\n    - r-wavethresh\n  run:\n    - r-base\n    - r-wavethresh\n\ntest:\n  commands:\n    - $R -e \"library('EbayesThresh')\"           # [not win]\n    - \"\\\"%R%\\\" -e \\\"library('EbayesThresh')\\\"\"  # [win]\n\nabout:\n  home: https://github.com/stephenslab/EbayesThresh\n  license: GPL (>= 2)\n  summary: Empirical Bayes thresholding using the methods developed by I. M. Johnstone and B.\n    W. Silverman. The basic problem is to estimate a mean vector given a vector of observations\n    of the mean vector plus white noise, taking advantage of possible sparsity in the\n    mean vector. Within a Bayesian formulation, the elements of the mean vector are\n    modelled as having, independently, a distribution that is a mixture of an atom of\n    probability at zero and a suitable heavy-tailed distribution. The mixing parameter\n    can be estimated by a marginal maximum likelihood approach. This leads to an adaptive\n    thresholding approach on the original data. Extensions of the basic method, in particular\n    to wavelet thresholding, are also implemented within the package.\n  license_family: GPL3\n  license_file: '{{ environ[\"PREFIX\"] }}/lib/R/share/licenses/GPL-3'\n\nextra:\n  recipe-maintainers:\n    - conda-forge/r\n    - johanneskoester\n    - bgruening\n    - daler\n    - jdblischak\n    - cbrueffer\n    - dbast\n",
 "req":{
  "__set__":true,
  "elements":[
   "r-base",
   "r-wavethresh"
  ]
 },
 "requirements":{
  "build":{
   "__set__":true,
   "elements":[]
  },
  "host":{
   "__set__":true,
   "elements":[
    "r-base",
    "r-wavethresh"
   ]
  },
  "run":{
   "__set__":true,
   "elements":[
    "r-base",
    "r-wavethresh"
   ]
  },
  "test":{
   "__set__":true,
   "elements":[]
  }
 },
 "smithy_version":"No azure token. Create a token and\nput it in ~/.conda-smithy/azure.token\n3.7.0\n",
 "strong_exports":false,
 "total_requirements":{
  "build":{
   "__set__":true,
   "elements":[]
  },
  "host":{
   "__set__":true,
   "elements":[
    "r-base",
    "r-wavethresh"
   ]
  },
  "run":{
   "__set__":true,
   "elements":[
    "r-base",
    "r-wavethresh"
   ]
  },
  "test":{
   "__set__":true,
   "elements":[]
  }
 },
 "url":[
  "https://cran.r-project.org/src/contrib/EbayesThresh_1.4-12.tar.gz",
  "https://cran.r-project.org/src/contrib/Archive/EbayesThresh/EbayesThresh_1.4-12.tar.gz",
  "https://cran.r-project.org/src/contrib/EbayesThresh_1.4-12.tar.gz",
  "https://cran.r-project.org/src/contrib/Archive/EbayesThresh/EbayesThresh_1.4-12.tar.gz",
  "https://cran.r-project.org/src/contrib/EbayesThresh_1.4-12.tar.gz",
  "https://cran.r-project.org/src/contrib/Archive/EbayesThresh/EbayesThresh_1.4-12.tar.gz"
 ],
 "version":"1.4_12"
}