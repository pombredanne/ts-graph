{
 "bad":false,
 "conda-forge.yml":{
  "bot":{
   "automerge":true
  }
 },
 "feedstock_name":"in_place",
 "hash_type":"sha256",
 "meta_yaml":{
  "about":{
   "description":"The in_place module provides an InPlace class for reading &\nwriting a file \"in-place\": data that you write ends up at the\nsame filepath that you read from, and in_place takes care of\nall the necessary mucking about with temporary files for you.\n",
   "home":"https://github.com/jwodder/inplace",
   "license":"MIT",
   "license_family":"MIT",
   "license_file":"LICENSE",
   "summary":"In-place file processing in Python"
  },
  "build":{
   "noarch":"python",
   "number":"1",
   "script":" -m pip install . -vv"
  },
  "extra":{
   "recipe-maintainers":[
    "druvus",
    "druvus",
    "druvus"
   ]
  },
  "package":{
   "name":"in_place",
   "version":"0.4.0"
  },
  "requirements":{
   "host":[
    "pip",
    "python",
    "pip",
    "python",
    "pip",
    "python"
   ],
   "run":[
    "python",
    "python",
    "python"
   ]
  },
  "source":{
   "sha256":"3d89b9865226410b19fb226f6cf1e1f84976b6347172e390e88f1c96cd731925",
   "url":"https://pypi.io/packages/source/i/in_place/in_place-0.4.0.tar.gz"
  },
  "test":{
   "imports":[
    "in_place",
    "in_place",
    "in_place"
   ]
  }
 },
 "name":"in_place",
 "new_version":"0.4.0",
 "raw_meta_yaml":"{% set name = \"in_place\" %}\n{% set version = \"0.4.0\" %}\n\npackage:\n  name: \"{{ name|lower }}\"\n  version: \"{{ version }}\"\n\nsource:\n  url: https://pypi.io/packages/source/{{ name[0] }}/{{ name }}/{{ name }}-{{ version }}.tar.gz\n  sha256: 3d89b9865226410b19fb226f6cf1e1f84976b6347172e390e88f1c96cd731925\n\nbuild:\n  number: 1\n  script: \"{{ PYTHON }} -m pip install . -vv\"\n  noarch: python\n\nrequirements:\n  host:\n    - pip\n    - python\n  run:\n    - python\n\ntest:\n  imports:\n    - in_place\n\nabout:\n  home: https://github.com/jwodder/inplace\n  license: MIT\n  license_family: MIT\n  license_file: LICENSE\n  summary: In-place file processing in Python\n  description: |\n    The in_place module provides an InPlace class for reading & \n    writing a file \"in-place\": data that you write ends up at the \n    same filepath that you read from, and in_place takes care of \n    all the necessary mucking about with temporary files for you.\n\nextra:\n  recipe-maintainers:\n    - druvus\n",
 "req":{
  "__set__":true,
  "elements":[
   "pip",
   "python"
  ]
 },
 "requirements":{
  "build":{
   "__set__":true,
   "elements":[]
  },
  "host":{
   "__set__":true,
   "elements":[
    "pip",
    "python"
   ]
  },
  "run":{
   "__set__":true,
   "elements":[
    "python"
   ]
  },
  "test":{
   "__set__":true,
   "elements":[]
  }
 },
 "strong_exports":false,
 "total_requirements":{
  "build":{
   "__set__":true,
   "elements":[]
  },
  "host":{
   "__set__":true,
   "elements":[
    "pip",
    "python"
   ]
  },
  "run":{
   "__set__":true,
   "elements":[
    "python"
   ]
  },
  "test":{
   "__set__":true,
   "elements":[]
  }
 },
 "url":"https://pypi.io/packages/source/i/in_place/in_place-0.4.0.tar.gz",
 "version":"0.4.0"
}