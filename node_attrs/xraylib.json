{
 "PRed":[
  {
   "PR":{
    "__lazy_json__":"pr_json/198445660.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"Compiler",
    "migrator_version":0
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/222617504.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"CompilerRebuild",
    "migrator_version":1,
    "name":"Python 3.7, GCC 7, R 3.5.1, openBLAS 0.3.2"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/308260269.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"GFortranOSXRebuild",
    "migrator_version":0,
    "name":"fortran_compiler_stub-7"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/336077625.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"MigrationYaml",
    "migrator_object_version":1,
    "migrator_version":0,
    "name":"python38"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/372334523.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"Version",
    "migrator_version":0,
    "version":"4.0.0"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/392302948.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"MigrationYaml",
    "migrator_object_version":1,
    "migrator_version":0,
    "name":"pypy"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  }
 ],
 "bad":false,
 "conda-forge.yml":{
  "compiler_stack":"comp7",
  "max_py_ver":"37",
  "max_r_ver":"35",
  "provider":{
   "win":"azure"
  }
 },
 "feedstock_name":"xraylib",
 "hash_type":"sha256",
 "meta_yaml":{
  "about":{
   "home":"https://github.com/tschoonj/xraylib/wiki",
   "license":"BSD 3-Clause",
   "license_family":"BSD",
   "license_file":"license_all.txt",
   "summary":"A library for X-ray matter interaction cross sections for X-ray fluorescence applications"
  },
  "build":{
   "number":"0"
  },
  "extra":{
   "recipe-maintainers":[
    "ericdill",
    "tacaswell",
    "licode",
    "tschoonj",
    "CJ-Wright",
    "mrakitin",
    "ericdill",
    "tacaswell",
    "licode",
    "tschoonj",
    "CJ-Wright",
    "mrakitin",
    "ericdill",
    "tacaswell",
    "licode",
    "tschoonj",
    "CJ-Wright",
    "mrakitin"
   ]
  },
  "package":{
   "name":"xraylib",
   "version":"4.0.0"
  },
  "requirements":{
   "build":[
    "m2-bash",
    "m2-curl",
    "m2-findutils",
    "m2-diffutils",
    "m2-gawk",
    "m2-grep",
    "m2-make",
    "m2-sed",
    "m2-which",
    "m2-tar",
    "m2w64_fortran_compiler_stub",
    "m2w64_c_compiler_stub",
    "m2w64_cxx_compiler_stub",
    "fortran_compiler_stub",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "fortran_compiler_stub",
    "c_compiler_stub",
    "cxx_compiler_stub"
   ],
   "host":[
    "python",
    "setuptools",
    "cython",
    "numpy",
    "m2w64-binutils",
    "m2w64-gcc",
    "m2w64-tools-git",
    "python",
    "setuptools",
    "cython",
    "numpy",
    "swig",
    "python",
    "setuptools",
    "cython",
    "numpy",
    "swig"
   ],
   "run":[
    "python",
    "numpy",
    "python",
    "numpy",
    "python",
    "numpy"
   ]
  },
  "source":{
   "sha256":"578dfd69610b7274fc79e9e5ebe6a42faca5adeef50a12f87c038a29e9a8674d",
   "url":"http://lvserver.ugent.be/xraylib/xraylib-4.0.0.tar.gz"
  },
  "test":{
   "commands":[
    "conda inspect linkages -p $PREFIX $PKG_NAME"
   ],
   "imports":[
    "xraylib",
    "xraylib_np",
    "xraylib",
    "xraylib_np",
    "xraylib",
    "xraylib_np"
   ]
  }
 },
 "name":"xraylib",
 "new_version":"4.0.0",
 "pinning_version":"2020.03.23",
 "raw_meta_yaml":"{% set version = \"4.0.0\" %}\n\npackage:\n  name: xraylib\n  version: {{ version }}\n\nsource:\n  url: http://lvserver.ugent.be/xraylib/xraylib-{{version}}.tar.gz\n  sha256: 578dfd69610b7274fc79e9e5ebe6a42faca5adeef50a12f87c038a29e9a8674d\n\nbuild:\n  number: 0\n\nrequirements:\n  build:\n    - m2-bash  # [win]\n    - m2-curl  # [win]\n    - m2-findutils  # [win]\n    - m2-diffutils  # [win]\n    - m2-gawk  # [win]\n    - m2-grep  # [win]\n    - m2-make  # [win]\n    - m2-sed  # [win]\n    - m2-which  # [win]\n    - m2-tar  # [win]\n    - {{ compiler('fortran') }}        # [unix]\n    - {{ compiler('m2w64_fortran') }}  # [win]\n    - {{ compiler('c') }}        # [unix]\n    - {{ compiler('m2w64_c') }}  # [win]\n    - {{ compiler('cxx') }}        # [unix]\n    - {{ compiler('m2w64_cxx') }}  # [win]\n  host:\n    - python\n    - setuptools\n    - cython\n    - numpy\n    - swig  # [not win]\n    - m2w64-binutils  # [win]\n    - m2w64-gcc  # [win]\n    - m2w64-tools-git  # [win]\n\n  run:\n    - python\n    - {{ pin_compatible('numpy') }}   # [not (win and (py35 or py36))]\n    - {{ pin_compatible('numpy') }}   # [win and py35]\n    - {{ pin_compatible('numpy') }}   # [win and py36]\n\ntest:\n  commands:\n    - conda inspect linkages -p $PREFIX $PKG_NAME  # [not win]\n    - conda inspect objects -p $PREFIX $PKG_NAME  # [osx]\n  imports:\n    - xraylib\n    - xraylib_np\n\nabout:\n  license: BSD 3-Clause\n  license_family: BSD\n  license_file: license_all.txt\n  home: https://github.com/tschoonj/xraylib/wiki\n  summary: A library for X-ray matter interaction cross sections for X-ray fluorescence applications\n\nextra:\n  recipe-maintainers:\n    - ericdill\n    - tacaswell\n    - licode\n    - tschoonj\n    - CJ-Wright\n    - mrakitin\n",
 "req":{
  "__set__":true,
  "elements":[
   "c_compiler_stub",
   "cxx_compiler_stub",
   "cython",
   "fortran_compiler_stub",
   "m2-bash",
   "m2-curl",
   "m2-diffutils",
   "m2-findutils",
   "m2-gawk",
   "m2-grep",
   "m2-make",
   "m2-sed",
   "m2-tar",
   "m2-which",
   "m2w64-binutils",
   "m2w64-gcc",
   "m2w64-tools-git",
   "m2w64_c_compiler_stub",
   "m2w64_cxx_compiler_stub",
   "m2w64_fortran_compiler_stub",
   "numpy",
   "python",
   "setuptools",
   "swig"
  ]
 },
 "requirements":{
  "build":{
   "__set__":true,
   "elements":[
    "c_compiler_stub",
    "cxx_compiler_stub",
    "fortran_compiler_stub",
    "m2-bash",
    "m2-curl",
    "m2-diffutils",
    "m2-findutils",
    "m2-gawk",
    "m2-grep",
    "m2-make",
    "m2-sed",
    "m2-tar",
    "m2-which",
    "m2w64_c_compiler_stub",
    "m2w64_cxx_compiler_stub",
    "m2w64_fortran_compiler_stub"
   ]
  },
  "host":{
   "__set__":true,
   "elements":[
    "cython",
    "m2w64-binutils",
    "m2w64-gcc",
    "m2w64-tools-git",
    "numpy",
    "python",
    "setuptools",
    "swig"
   ]
  },
  "run":{
   "__set__":true,
   "elements":[
    "numpy",
    "python"
   ]
  },
  "test":{
   "__set__":true,
   "elements":[]
  }
 },
 "smithy_version":"No azure token. Create a token and\nput it in ~/.conda-smithy/azure.token\n3.6.15",
 "strong_exports":false,
 "total_requirements":{
  "build":{
   "__set__":true,
   "elements":[
    "c_compiler_stub",
    "cxx_compiler_stub",
    "fortran_compiler_stub",
    "m2-bash",
    "m2-curl",
    "m2-diffutils",
    "m2-findutils",
    "m2-gawk",
    "m2-grep",
    "m2-make",
    "m2-sed",
    "m2-tar",
    "m2-which",
    "m2w64_c_compiler_stub",
    "m2w64_cxx_compiler_stub",
    "m2w64_fortran_compiler_stub"
   ]
  },
  "host":{
   "__set__":true,
   "elements":[
    "cython",
    "m2w64-binutils",
    "m2w64-gcc",
    "m2w64-tools-git",
    "numpy",
    "python",
    "setuptools",
    "swig"
   ]
  },
  "run":{
   "__set__":true,
   "elements":[
    "numpy",
    "python"
   ]
  },
  "test":{
   "__set__":true,
   "elements":[]
  }
 },
 "url":"http://lvserver.ugent.be/xraylib/xraylib-3.3.0.tar.gz",
 "version":"4.0.0"
}