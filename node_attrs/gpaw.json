{
 "PRed":[
  {
   "PR":{
    "__lazy_json__":"pr_json/276885095.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"Version",
    "migrator_version":0,
    "version":"1.5.2"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/303296823.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"Version",
    "migrator_version":0,
    "version":"19.8.0"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/305465912.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"Version",
    "migrator_version":0,
    "version":"19.8.1"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/339386374.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"MigrationYaml",
    "migrator_object_version":1,
    "migrator_version":0,
    "name":"python38"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/369041751.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"Version",
    "migrator_version":0,
    "version":"20.1.0"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/395418500.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"MigrationYaml",
    "migrator_object_version":1,
    "migrator_version":0,
    "name":"pypy"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  }
 ],
 "bad":false,
 "conda-forge.yml":{},
 "feedstock_name":"gpaw",
 "hash_type":"sha256",
 "meta_yaml":{
  "about":{
   "description":"GPAW is a density-functional theory (DFT) Python code based on the\nprojector-augmented wave (PAW) method and the atomic simulation environment\n(ASE). It uses plane-waves, atom-centered basis-functions or real-space\nuniform grids combined with multigrid methods.\n",
   "dev_url":"https://gitlab.com/gpaw/gpaw",
   "doc_url":"https://wiki.fysik.dtu.dk/gpaw/documentation/documentation.html",
   "home":"https://wiki.fysik.dtu.dk/gpaw",
   "license":"GPL-3.0",
   "license_family":"GPL",
   "license_file":"LICENSE",
   "summary":"GPAW: DFT and beyond within the projector-augmented wave method"
  },
  "build":{
   "number":"0",
   "skip":true,
   "string":"py__0"
  },
  "extra":{
   "recipe-maintainers":[
    "bjodah",
    "bjodah",
    "bjodah"
   ]
  },
  "package":{
   "name":"gpaw",
   "version":"19.8.1"
  },
  "requirements":{
   "build":[
    "c_compiler_stub",
    "c_compiler_stub",
    "c_compiler_stub"
   ],
   "host":[
    null,
    "python",
    "pip",
    "libxc",
    "libblas",
    "libcblas",
    "scalapack",
    "fftw",
    "numpy",
    "ase",
    null,
    "python",
    "pip",
    "libxc",
    "libblas",
    "libcblas",
    "scalapack",
    "fftw",
    "numpy",
    "ase",
    null,
    "python",
    "pip",
    "libxc",
    "libblas",
    "libcblas",
    "scalapack",
    "fftw",
    "numpy",
    "ase"
   ],
   "run":[
    null,
    "python",
    "libxc",
    "libblas",
    "libcblas",
    "scalapack",
    "fftw",
    "numpy",
    "scipy",
    "ase",
    null,
    "python",
    "libxc",
    "libblas",
    "libcblas",
    "scalapack",
    "fftw",
    "numpy",
    "scipy",
    "ase",
    null,
    "python",
    "libxc",
    "libblas",
    "libcblas",
    "scalapack",
    "fftw",
    "numpy",
    "scipy",
    "ase"
   ]
  },
  "source":{
   "patches":[
    "001_config-py.patch",
    "001_config-py.patch",
    "001_config-py.patch"
   ],
   "sha256":"79dee367d695d68409c4d69edcbad5c8679137d6715da403f6c2500cb2178c2a",
   "url":"https://pypi.io/packages/source/g/gpaw/gpaw-19.8.1.tar.gz"
  },
  "test":{
   "commands":[
    "test -x $PREFIX/bin/gpaw-python",
    "mpiexec -np 1 gpaw-python -m gpaw test --reverse --from generic/mixer.py",
    "test -x $PREFIX/bin/gpaw-python",
    "mpiexec -np 1 gpaw-python -m gpaw test --reverse --from generic/mixer.py",
    "test -x $PREFIX/bin/gpaw-python",
    "mpiexec -np 1 gpaw-python -m gpaw test --reverse --from generic/mixer.py"
   ]
  }
 },
 "name":"gpaw",
 "new_version":"20.1.0",
 "pinning_version":"2020.03.28",
 "raw_meta_yaml":"{% set build = 0 %}\n{% set name = \"gpaw\" %}\n{% set version = \"19.8.1\" %}\n{% set sha256 = \"79dee367d695d68409c4d69edcbad5c8679137d6715da403f6c2500cb2178c2a\" %}\n{% set build_string = \"py{}_{}_{}\".format(environ.get('CONDA_PY', ''), mpi, build) %}\n\npackage:\n  name: {{ name|lower }}\n  version: {{ version }}\n\nsource:\n  url: https://pypi.io/packages/source/{{ name[0] }}/{{ name }}/{{ name }}-{{ version }}.tar.gz\n  sha256: {{ sha256 }}\n  patches:\n    - 001_config-py.patch\n    # patch 001 is needed because gpaw's config.py assumes that libpython is a dynamic library,\n    # whereas the python version used by conda-forge provides a static library. Hopefully gpaw-devs\n    # will accept this as a future change upstream.\n\nbuild:\n  number: {{ build }}\n  string: {{ build_string }}\n  skip: True  # [not linux]\n  skip: True  # [py<36]\n\nrequirements:\n  build:\n    - {{ compiler('c') }}\n  host:\n    - {{ mpi }}  # [mpi != 'nompi']\n    - python\n    - pip\n    - libxc\n    - libblas\n    - libcblas\n    - scalapack\n    - fftw\n    - numpy\n    - ase\n  run:\n    - {{ mpi }}  # [mpi != 'nompi']\n    - python\n    - libxc\n    - libblas\n    - libcblas\n    - scalapack\n    - fftw\n    - {{ pin_compatible('numpy') }}\n    - scipy\n    - ase\n\ntest:\n  commands:\n    - gpaw test -j 1 --reverse --from generic/mixer.py                          # [mpi == 'nompi']\n    - test -x $PREFIX/bin/gpaw-python                                           # [mpi != 'nompi']\n    - export OMPI_MCA_plm=isolated                                              # [mpi == 'openmpi']\n    - export OMPI_MCA_btl_vader_single_copy_mechanism=none                      # [mpi == 'openmpi']\n    - export OMPI_MCA_rmaps_base_oversubscribe=yes                              # [mpi == 'openmpi']\n    - mpiexec -np 1 gpaw-python -m gpaw test --reverse --from generic/mixer.py  # [mpi != 'nompi']\n\nabout:\n  home: https://wiki.fysik.dtu.dk/gpaw\n  license: GPL-3.0\n  license_family: GPL\n  license_file: LICENSE\n  summary: 'GPAW: DFT and beyond within the projector-augmented wave method'\n  description: |\n    GPAW is a density-functional theory (DFT) Python code based on the\n    projector-augmented wave (PAW) method and the atomic simulation environment\n    (ASE). It uses plane-waves, atom-centered basis-functions or real-space\n    uniform grids combined with multigrid methods.\n  doc_url: https://wiki.fysik.dtu.dk/gpaw/documentation/documentation.html\n  dev_url: https://gitlab.com/gpaw/gpaw\n\nextra:\n  recipe-maintainers:\n    - bjodah\n",
 "req":{
  "__set__":true,
  "elements":[
   "ase",
   "c_compiler_stub",
   "fftw",
   "libblas",
   "libcblas",
   "libxc",
   "numpy",
   "pip",
   "python",
   "scalapack",
   "scipy"
  ]
 },
 "requirements":{
  "build":{
   "__set__":true,
   "elements":[
    "c_compiler_stub"
   ]
  },
  "host":{
   "__set__":true,
   "elements":[
    "ase",
    "fftw",
    "libblas",
    "libcblas",
    "libxc",
    "numpy",
    "pip",
    "python",
    "scalapack"
   ]
  },
  "run":{
   "__set__":true,
   "elements":[
    "ase",
    "fftw",
    "libblas",
    "libcblas",
    "libxc",
    "numpy",
    "python",
    "scalapack",
    "scipy"
   ]
  },
  "test":{
   "__set__":true,
   "elements":[]
  }
 },
 "smithy_version":"No azure token. Create a token and\nput it in ~/.conda-smithy/azure.token\n3.6.15",
 "strong_exports":false,
 "total_requirements":{
  "build":{
   "__set__":true,
   "elements":[
    "c_compiler_stub"
   ]
  },
  "host":{
   "__set__":true,
   "elements":[
    "ase",
    "fftw",
    "libblas",
    "libcblas",
    "libxc",
    "numpy",
    "pip",
    "python",
    "scalapack"
   ]
  },
  "run":{
   "__set__":true,
   "elements":[
    "ase",
    "fftw",
    "libblas",
    "libcblas",
    "libxc",
    "numpy",
    "python",
    "scalapack",
    "scipy"
   ]
  },
  "test":{
   "__set__":true,
   "elements":[]
  }
 },
 "url":"https://pypi.io/packages/source/g/gpaw/gpaw-19.8.1.tar.gz",
 "version":"19.8.1"
}