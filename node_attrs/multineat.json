{
 "PRed":[
  {
   "PR":{
    "__lazy_json__":"pr_json/240004271.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"CompilerRebuild",
    "migrator_version":1,
    "name":"Python 3.7, GCC 7, R 3.5.1, openBLAS 0.3.2"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/283404905.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"Rebuild",
    "migrator_version":0,
    "name":"boost-1.70.0"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/283423110.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"Rebuild",
    "migrator_version":0,
    "name":"boost-cpp-1.70.0"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR":{
    "id":"9191db8f-396d-484a-a8de-764f8bb58d49",
    "merged_at":"never issued",
    "state":"closed"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"MigrationYaml",
    "migrator_object_version":1,
    "migrator_version":0,
    "name":"python38"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/3d64a5c5-856e-421a-996d-7647abd21ffd.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"MigrationYaml",
    "migrator_object_version":1,
    "migrator_version":0,
    "name":"boost172"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/de0e4af9-7559-4c96-b6b8-ec37bc070368.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"MigrationYaml",
    "migrator_object_version":2,
    "migrator_version":0,
    "name":"boost172"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  }
 ],
 "bad":"Upstream: Error getting upstream version",
 "conda-forge.yml":{},
 "feedstock_name":"multineat",
 "meta_yaml":{
  "about":{
   "description":"MultiNEAT is a portable software library for performing neuroevolution, a form of machine learning that trains neural networks with a genetic algorithm. It is based on NEAT, an advanced method for evolving neural networks through complexification. The neural networks in NEAT begin evolution with very simple genomes which grow over successive generations. The individuals in the evolving population are grouped by similarity into species, and each of them can compete only with the individuals in the same species.\n",
   "dev_url":"https://github.com/MultiNEAT/MultiNEAT",
   "doc_url":"http://multineat.com/docs.html",
   "home":"http://MultiNEAT.com",
   "license":"LGPL-3.0",
   "license_family":"LGPL",
   "license_file":"LICENSE",
   "summary":"Portable NeuroEvolution Library. Implements NEAT, rtNETA, HyperNEAT, Novelty Search and others."
  },
  "build":{
   "number":"0"
  },
  "extra":{
   "recipe-maintainers":[
    "anton-matosov",
    "anton-matosov",
    "anton-matosov"
   ]
  },
  "package":{
   "name":"multineat",
   "version":"0.5.2"
  },
  "requirements":{
   "build":[
    "python",
    "setuptools",
    "cmake",
    "psutil",
    "boost>=1.67",
    "boost-cpp>=1.67",
    "python",
    "setuptools",
    "cmake",
    "psutil",
    "boost>=1.67",
    "boost-cpp>=1.67",
    "python",
    "setuptools",
    "cmake",
    "psutil",
    "boost>=1.67",
    "boost-cpp>=1.67"
   ],
   "run":[
    "python",
    "psutil",
    "boost>=1.67",
    "boost-cpp>=1.67",
    "numpy>=1.11.3",
    "matplotlib>=2.2",
    "opencv>=3.3",
    "psutil",
    "ipyparallel",
    "python",
    "psutil",
    "boost>=1.67",
    "boost-cpp>=1.67",
    "numpy>=1.11.3",
    "matplotlib>=2.2",
    "opencv>=3.3",
    "psutil",
    "ipyparallel",
    "python",
    "psutil",
    "boost>=1.67",
    "boost-cpp>=1.67",
    "numpy>=1.11.3",
    "matplotlib>=2.2",
    "opencv>=3.3",
    "psutil",
    "ipyparallel"
   ]
  },
  "source":{
   "git_rev":"release/0.5.2",
   "git_url":"https://github.com/MultiNEAT/MultiNEAT.git"
  },
  "test":{
   "source_files":[
    "examples/TestTraits.py",
    "examples/NoveltySearch.py",
    "examples/TestNEAT_xor.py",
    "examples/TestHyperNEAT_xor.py",
    "examples/TestTraits.py",
    "examples/NoveltySearch.py",
    "examples/TestNEAT_xor.py",
    "examples/TestHyperNEAT_xor.py",
    "examples/TestTraits.py",
    "examples/NoveltySearch.py",
    "examples/TestNEAT_xor.py",
    "examples/TestHyperNEAT_xor.py"
   ]
  }
 },
 "name":"multineat",
 "new_version":false,
 "pinning_version":"2020.02.20",
 "raw_meta_yaml":"\n{% set name = \"multineat\" %}\n{% set version = \"0.5.2\" %}\n{% set sha256 = \"d58439c548433adcda98e695be53e526ba940a4b9c44fb9a05d92cd495cdd47f\" %}\n\npackage:\n  name: {{ name|lower }}\n  version: {{ version }}\n\nsource:\n  git_tag: release/{{ version }}\n  git_url: https://github.com/MultiNEAT/MultiNEAT.git\n\nbuild:\n  number: 0\n\nrequirements:\n  build:\n    - python\n    - setuptools\n    - cmake\n    - psutil\n    - boost>=1.67\n    - boost-cpp>=1.67\n  run:\n    - python\n    - psutil\n    - boost>=1.67\n    - boost-cpp>=1.67\n    - numpy>=1.11.3\n    - matplotlib>=2.2\n    - opencv>=3.3\n    - psutil\n    - ipyparallel\n    - progressbar  # [py<=2.7]\n\ntest:\n  source_files:\n    - examples/TestTraits.py\n    - examples/NoveltySearch.py\n    - examples/TestNEAT_xor.py\n    - examples/TestHyperNEAT_xor.py\n\nabout:\n  home: http://MultiNEAT.com\n  license: LGPL-3.0\n  license_family: LGPL\n  license_file: LICENSE\n  summary: \n    Portable NeuroEvolution Library. Implements NEAT, rtNETA, HyperNEAT, Novelty Search and others.\n  description: |\n    MultiNEAT is a portable software library for performing neuroevolution, a form of machine learning that trains neural networks with a genetic algorithm. It is based on NEAT, an advanced method for evolving neural networks through complexification. The neural networks in NEAT begin evolution with very simple genomes which grow over successive generations. The individuals in the evolving population are grouped by similarity into species, and each of them can compete only with the individuals in the same species.\n  doc_url: http://multineat.com/docs.html\n  dev_url: https://github.com/MultiNEAT/MultiNEAT\n\nextra:\n  recipe-maintainers:\n    - anton-matosov\n",
 "req":{
  "__set__":true,
  "elements":[
   "boost",
   "boost-cpp",
   "cmake",
   "ipyparallel",
   "matplotlib",
   "numpy",
   "opencv",
   "psutil",
   "python",
   "setuptools"
  ]
 },
 "requirements":{
  "build":{
   "__set__":true,
   "elements":[
    "boost",
    "boost-cpp",
    "cmake",
    "psutil",
    "python",
    "setuptools"
   ]
  },
  "host":{
   "__set__":true,
   "elements":[]
  },
  "run":{
   "__set__":true,
   "elements":[
    "boost",
    "boost-cpp",
    "ipyparallel",
    "matplotlib",
    "numpy",
    "opencv",
    "psutil",
    "python"
   ]
  },
  "test":{
   "__set__":true,
   "elements":[]
  }
 },
 "smithy_version":"3.6.8",
 "strong_exports":false,
 "time":1568135295.5254986,
 "total_requirements":{
  "build":{
   "__set__":true,
   "elements":[
    "boost-cpp>=1.67",
    "boost>=1.67",
    "cmake",
    "psutil",
    "python",
    "setuptools"
   ]
  },
  "host":{
   "__set__":true,
   "elements":[]
  },
  "run":{
   "__set__":true,
   "elements":[
    "boost-cpp>=1.67",
    "boost>=1.67",
    "ipyparallel",
    "matplotlib>=2.2",
    "numpy>=1.11.3",
    "opencv>=3.3",
    "psutil",
    "python"
   ]
  },
  "test":{
   "__set__":true,
   "elements":[]
  }
 },
 "url":null,
 "version":"0.5.2"
}