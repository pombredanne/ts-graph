{
 "PRed":[
  {
   "PR":{
    "__lazy_json__":"pr_json/346731521.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"MigrationYaml",
    "migrator_object_version":1,
    "migrator_version":0,
    "name":"python38"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/371550496.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"MigrationYaml",
    "migrator_object_version":1,
    "migrator_version":0,
    "name":"gsl26"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/377826400.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"MigrationYaml",
    "migrator_object_version":1,
    "migrator_version":0,
    "name":"boost172"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/2bf92ca8-dd08-45a7-a3ce-82561c705e09.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"MigrationYaml",
    "migrator_object_version":2,
    "migrator_version":0,
    "name":"boost172"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/401637126.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"Version",
    "migrator_version":0,
    "version":"3.8.1.0"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  }
 ],
 "bad":false,
 "conda-forge.yml":{},
 "feedstock_name":"gnuradio",
 "hash_type":"sha256",
 "meta_yaml":{
  "about":{
   "description":"GNU Radio is a free software development toolkit that provides the signal\nprocessing runtime and processing blocks to implement software radios using\nreadily-available, low-cost external RF hardware and commodity processors.\nIt is widely used in hobbyist, academic and commercial environments to\nsupport wireless communications research as well as to implement real-world\nradio systems.\n\nGNU Radio applications are primarily written using the Python programming\nlanguage, while the supplied, performance-critical signal processing path\nis implemented in C++ using processor floating point extensions where\navailable. Thus, the developer is able to implement real-time, high-\nthroughput radio systems in a simple-to-use, rapid-application-development\nenvironment.\n",
   "dev_url":"https://github.com/gnuradio/gnuradio",
   "doc_url":"https://gnuradio.org/doc/doxygen/",
   "home":"https://gnuradio.org/",
   "license":"GPL-3.0-or-later",
   "license_family":"GPL",
   "license_file":"COPYING",
   "summary":"The free and open software radio ecosystem"
  },
  "build":{
   "number":"4"
  },
  "extra":{
   "recipe-maintainers":[
    "ryanvolz",
    "ryanvolz",
    "ryanvolz"
   ]
  },
  "outputs":[
   {
    "about":{
     "summary":"GNU Radio core functionality and modules"
    },
    "build":{
     "entry_points":[
      "gr_filter_design = gnuradio.filter.filter_design:main",
      "gr_modtool = gnuradio.modtool.cli.base:cli"
     ],
     "run_exports":[
      "gnuradio-core"
     ]
    },
    "name":"gnuradio-core",
    "requirements":{
     "build":[
      "c_compiler_stub",
      "cxx_compiler_stub",
      "cmake",
      "ninja"
     ],
     "host":[
      "boost-cpp",
      "fftw",
      "gsl",
      "libblas",
      "libcblas",
      "libusb",
      "log4cpp",
      "mpir",
      "python",
      "swig",
      "volk"
     ],
     "run":[
      "boost-cpp",
      "click",
      "click-plugins",
      "fftw",
      "log4cpp",
      "mako",
      "menuinst",
      "numpy",
      "python",
      "six"
     ]
    },
    "script":"install_core.bat",
    "test":{
     "commands":[
      "gnuradio-config-info -v --prefix --sysconfdir --prefsdir --userprefsdir --prefs --builddate --enabled-components --cc --cxx --cflags",
      "python \"%PREFIX%\\\\Library\\\\share\\\\gnuradio\\\\examples\\\\volk_benchmark\\\\volk_math.py\" -L test -N 1e6 -I 3 --all",
      "if not exist %PREFIX%\\\\Scripts\\\\gr_filter_design.exe exit 1",
      "if not exist %PREFIX%\\\\Scripts\\\\gr_modtool.exe exit 1"
     ],
     "imports":[
      "gnuradio.analog",
      "gnuradio.audio",
      "gnuradio.blocks",
      "gnuradio.channels",
      "gnuradio.digital",
      "gnuradio.dtv",
      "gnuradio.fec",
      "gnuradio.fft",
      "gnuradio.filter",
      "gnuradio.gr",
      "gnuradio.trellis",
      "gnuradio.vocoder",
      "gnuradio.wavelet",
      "pmt"
     ]
    }
   },
   {
    "about":{
     "summary":"GNU Radio Companion graphical flowgraph interface"
    },
    "build":{
     "entry_points":[
      "gnuradio-companion = gnuradio.grc.main:main",
      "grcc = gnuradio.grc.compiler:main"
     ]
    },
    "name":"gnuradio-grc",
    "requirements":{
     "build":[
      "c_compiler_stub",
      "cxx_compiler_stub",
      "cmake",
      "ninja"
     ],
     "host":[
      "gnuradio-core",
      "boost-cpp",
      "gtk3",
      "log4cpp",
      "python"
     ],
     "run":[
      "boost-cpp",
      "gnuradio-core",
      "log4cpp",
      "lxml",
      "menuinst",
      "pygobject",
      "python",
      "pyyaml"
     ]
    },
    "script":"install_grc.bat",
    "test":{
     "commands":[
      "python \"%PREFIX%\\\\Library\\\\bin\\\\grcc.py\" \"%PREFIX%\\\\Library\\\\share\\\\gnuradio\\\\examples\\\\metadata\\\\file_metadata_vector_sink.grc\"",
      "if not exist %PREFIX%\\\\Scripts\\\\gnuradio-companion.exe exit 1",
      "if not exist %PREFIX%\\\\Scripts\\\\grcc.exe exit 1"
     ]
    }
   },
   {
    "about":{
     "summary":"GNU Radio QT module providing graphical components"
    },
    "name":"gnuradio-qtgui",
    "requirements":{
     "build":[
      "c_compiler_stub",
      "cxx_compiler_stub",
      "cmake",
      "ninja"
     ],
     "host":[
      "gnuradio-core",
      "boost-cpp",
      "log4cpp",
      "pyqt",
      "python",
      "qt",
      "qwt",
      "volk"
     ],
     "run":[
      "boost-cpp",
      "gnuradio-core",
      "log4cpp",
      "pyqt",
      "python",
      "qwt"
     ]
    },
    "script":"install_qtgui.bat",
    "test":{
     "imports":[
      "gnuradio.qtgui"
     ]
    }
   },
   {
    "about":{
     "summary":"GNU Radio UHD module for Ettus USRP radios"
    },
    "build":{
     "entry_points":[
      "uhd_siggen = gnuradio.uhd.uhd_siggen_base:main"
     ]
    },
    "name":"gnuradio-uhd",
    "requirements":{
     "build":[
      "c_compiler_stub",
      "cxx_compiler_stub",
      "cmake",
      "ninja"
     ],
     "host":[
      "gnuradio-core",
      "boost-cpp",
      "log4cpp",
      "python",
      "uhd"
     ],
     "run":[
      "boost-cpp",
      "gnuradio-core",
      "log4cpp",
      "python"
     ]
    },
    "script":"install_uhd.bat",
    "test":{
     "commands":[
      "if not exist %PREFIX%\\\\Scripts\\\\uhd_siggen.exe exit 1"
     ],
     "imports":[
      "gnuradio.uhd"
     ]
    }
   },
   {
    "about":{
     "summary":"GNU Radio SDL module providing video components"
    },
    "build":null,
    "name":"gnuradio-video-sdl",
    "requirements":{
     "build":[
      "c_compiler_stub",
      "cxx_compiler_stub",
      "cmake",
      "ninja"
     ],
     "host":[
      "gnuradio-core",
      "boost-cpp",
      "log4cpp",
      "python",
      "sdl"
     ],
     "run":[
      "boost-cpp",
      "gnuradio-core",
      "log4cpp",
      "python"
     ]
    },
    "script":"install_video_sdl.bat",
    "test":{
     "imports":[
      "gnuradio.video_sdl"
     ]
    }
   },
   {
    "about":{
     "summary":"GNU Radio ZeroMQ module for message passing functionality"
    },
    "name":"gnuradio-zeromq",
    "requirements":{
     "build":[
      "c_compiler_stub",
      "cxx_compiler_stub",
      "cmake",
      "ninja"
     ],
     "host":[
      "gnuradio-core",
      "boost-cpp",
      "cppzmq",
      "log4cpp",
      "python",
      "zeromq"
     ],
     "run":[
      "boost-cpp",
      "gnuradio-core",
      "log4cpp",
      "python",
      "pyzmq"
     ]
    },
    "script":"install_zeromq.bat",
    "test":{
     "imports":[
      "gnuradio.zeromq"
     ]
    }
   },
   {
    "about":{
     "summary":"GNU Radio core library and standard modules"
    },
    "name":"gnuradio",
    "requirements":{
     "run":[
      "gnuradio-core",
      "gnuradio-grc",
      "gnuradio-qtgui",
      "gnuradio-uhd",
      "gnuradio-video-sdl",
      "gnuradio-zeromq",
      "python"
     ]
    },
    "test":{
     "imports":[
      "gnuradio.gr",
      "gnuradio.qtgui",
      "gnuradio.uhd",
      "gnuradio.video_sdl",
      "gnuradio.zeromq"
     ]
    }
   },
   {
    "about":{
     "summary":"GNU Radio core functionality and modules"
    },
    "build":{
     "run_exports":[
      "gnuradio-core"
     ]
    },
    "name":"gnuradio-core",
    "requirements":{
     "build":[
      "c_compiler_stub",
      "cxx_compiler_stub",
      "cmake",
      "ninja",
      "pkg-config"
     ],
     "host":[
      "boost-cpp",
      "fftw",
      "gsl",
      "libblas",
      "libcblas",
      "libusb",
      "log4cpp",
      "mpir",
      "python",
      "swig",
      "volk"
     ],
     "run":[
      "boost-cpp",
      "click",
      "click-plugins",
      "fftw",
      "log4cpp",
      "mako",
      "numpy",
      "python",
      "six"
     ]
    },
    "script":"install_core.sh",
    "test":{
     "commands":[
      "gnuradio-config-info -v --prefix --sysconfdir --prefsdir --userprefsdir --prefs --builddate --enabled-components --cc --cxx --cflags",
      "python \"$PREFIX/share/gnuradio/examples/volk_benchmark/volk_math.py\" -L test -N 1e6 -I 3 --all"
     ],
     "imports":[
      "gnuradio.analog",
      "gnuradio.audio",
      "gnuradio.blocks",
      "gnuradio.channels",
      "gnuradio.digital",
      "gnuradio.dtv",
      "gnuradio.fec",
      "gnuradio.fft",
      "gnuradio.filter",
      "gnuradio.gr",
      "gnuradio.trellis",
      "gnuradio.vocoder",
      "gnuradio.wavelet",
      "pmt"
     ]
    }
   },
   {
    "about":{
     "summary":"GNU Radio Companion graphical flowgraph interface"
    },
    "name":"gnuradio-grc",
    "requirements":{
     "build":[
      "c_compiler_stub",
      "cxx_compiler_stub",
      "cmake",
      "ninja",
      "pkg-config"
     ],
     "host":[
      "gnuradio-core",
      "boost-cpp",
      "gtk3",
      "log4cpp",
      "python"
     ],
     "run":[
      "boost-cpp",
      "gnuradio-core",
      "log4cpp",
      "lxml",
      "pygobject",
      "python",
      "pyyaml"
     ]
    },
    "script":"install_grc.sh",
    "test":{
     "commands":[
      "grcc \"$PREFIX/share/gnuradio/examples/metadata/file_metadata_vector_sink.grc\"",
      "python file_metadata_vector_sink.py"
     ]
    }
   },
   {
    "about":{
     "summary":"GNU Radio QT module providing graphical components"
    },
    "name":"gnuradio-qtgui",
    "requirements":{
     "build":[
      "c_compiler_stub",
      "cxx_compiler_stub",
      "cmake",
      "ninja",
      "pkg-config"
     ],
     "host":[
      "gnuradio-core",
      "boost-cpp",
      "log4cpp",
      "pyqt",
      "python",
      "qt",
      "qwt",
      "volk"
     ],
     "run":[
      "boost-cpp",
      "gnuradio-core",
      "log4cpp",
      "pyqt",
      "python",
      "qwt"
     ]
    },
    "script":"install_qtgui.sh",
    "test":{
     "imports":[
      "gnuradio.qtgui"
     ]
    }
   },
   {
    "about":{
     "summary":"GNU Radio UHD module for Ettus USRP radios"
    },
    "name":"gnuradio-uhd",
    "requirements":{
     "build":[
      "c_compiler_stub",
      "cxx_compiler_stub",
      "cmake",
      "ninja",
      "pkg-config"
     ],
     "host":[
      "gnuradio-core",
      "boost-cpp",
      "log4cpp",
      "python",
      "uhd"
     ],
     "run":[
      "boost-cpp",
      "gnuradio-core",
      "log4cpp",
      "python"
     ]
    },
    "script":"install_uhd.sh",
    "test":{
     "commands":null,
     "imports":[
      "gnuradio.uhd"
     ]
    }
   },
   {
    "about":{
     "summary":"GNU Radio SDL module providing video components"
    },
    "build":{
     "skip":true
    },
    "name":"gnuradio-video-sdl",
    "requirements":{
     "build":[
      "c_compiler_stub",
      "cxx_compiler_stub",
      "cmake",
      "ninja",
      "pkg-config"
     ],
     "host":[
      "gnuradio-core",
      "boost-cpp",
      "log4cpp",
      "python",
      "sdl"
     ],
     "run":[
      "boost-cpp",
      "gnuradio-core",
      "log4cpp",
      "python"
     ]
    },
    "script":"install_video_sdl.sh",
    "test":{
     "imports":[
      "gnuradio.video_sdl"
     ]
    }
   },
   {
    "about":{
     "summary":"GNU Radio ZeroMQ module for message passing functionality"
    },
    "name":"gnuradio-zeromq",
    "requirements":{
     "build":[
      "c_compiler_stub",
      "cxx_compiler_stub",
      "cmake",
      "ninja",
      "pkg-config"
     ],
     "host":[
      "gnuradio-core",
      "boost-cpp",
      "cppzmq",
      "log4cpp",
      "python",
      "zeromq"
     ],
     "run":[
      "boost-cpp",
      "gnuradio-core",
      "log4cpp",
      "python",
      "pyzmq"
     ]
    },
    "script":"install_zeromq.sh",
    "test":{
     "imports":[
      "gnuradio.zeromq"
     ]
    }
   },
   {
    "about":{
     "summary":"GNU Radio core library and standard modules"
    },
    "name":"gnuradio",
    "requirements":{
     "run":[
      "gnuradio-core",
      "gnuradio-grc",
      "gnuradio-qtgui",
      "gnuradio-uhd",
      "gnuradio-video-sdl",
      "gnuradio-zeromq",
      "python"
     ]
    },
    "test":{
     "imports":[
      "gnuradio.gr",
      "gnuradio.qtgui",
      "gnuradio.uhd",
      "gnuradio.video_sdl",
      "gnuradio.zeromq"
     ]
    }
   },
   {
    "about":{
     "summary":"GNU Radio core functionality and modules"
    },
    "build":{
     "run_exports":[
      "gnuradio-core"
     ]
    },
    "name":"gnuradio-core",
    "requirements":{
     "build":[
      "c_compiler_stub",
      "cxx_compiler_stub",
      "cmake",
      "ninja",
      "pkg-config"
     ],
     "host":[
      "alsa-lib",
      "boost-cpp",
      "fftw",
      "gsl",
      "libblas",
      "libcblas",
      "libusb",
      "log4cpp",
      "mpir",
      "portaudio",
      "python",
      "swig",
      "volk"
     ],
     "run":[
      "boost-cpp",
      "click",
      "click-plugins",
      "fftw",
      "log4cpp",
      "mako",
      "numpy",
      "portaudio",
      "python",
      "six"
     ]
    },
    "script":"install_core.sh",
    "test":{
     "commands":[
      "gnuradio-config-info -v --prefix --sysconfdir --prefsdir --userprefsdir --prefs --builddate --enabled-components --cc --cxx --cflags",
      "python \"$PREFIX/share/gnuradio/examples/volk_benchmark/volk_math.py\" -L test -N 1e6 -I 3 --all"
     ],
     "imports":[
      "gnuradio.analog",
      "gnuradio.audio",
      "gnuradio.blocks",
      "gnuradio.channels",
      "gnuradio.digital",
      "gnuradio.dtv",
      "gnuradio.fec",
      "gnuradio.fft",
      "gnuradio.filter",
      "gnuradio.gr",
      "gnuradio.trellis",
      "gnuradio.vocoder",
      "gnuradio.wavelet",
      "pmt"
     ]
    }
   },
   {
    "about":{
     "summary":"GNU Radio Companion graphical flowgraph interface"
    },
    "name":"gnuradio-grc",
    "requirements":{
     "build":[
      "c_compiler_stub",
      "cxx_compiler_stub",
      "cmake",
      "ninja",
      "pkg-config"
     ],
     "host":[
      "gnuradio-core",
      "boost-cpp",
      "gtk3",
      "log4cpp",
      "python"
     ],
     "run":[
      "boost-cpp",
      "gnuradio-core",
      "log4cpp",
      "lxml",
      "pygobject",
      "python",
      "pyyaml"
     ]
    },
    "script":"install_grc.sh",
    "test":{
     "commands":[
      "grcc \"$PREFIX/share/gnuradio/examples/metadata/file_metadata_vector_sink.grc\"",
      "python file_metadata_vector_sink.py"
     ]
    }
   },
   {
    "about":{
     "summary":"GNU Radio QT module providing graphical components"
    },
    "name":"gnuradio-qtgui",
    "requirements":{
     "build":[
      "c_compiler_stub",
      "cxx_compiler_stub",
      "cmake",
      "ninja",
      "pkg-config"
     ],
     "host":[
      "gnuradio-core",
      "boost-cpp",
      "log4cpp",
      "pyqt",
      "python",
      "qt",
      "qwt",
      "volk"
     ],
     "run":[
      "boost-cpp",
      "gnuradio-core",
      "log4cpp",
      "pyqt",
      "python",
      "qwt"
     ]
    },
    "script":"install_qtgui.sh",
    "test":{
     "imports":[
      "gnuradio.qtgui"
     ]
    }
   },
   {
    "about":{
     "summary":"GNU Radio UHD module for Ettus USRP radios"
    },
    "name":"gnuradio-uhd",
    "requirements":{
     "build":[
      "c_compiler_stub",
      "cxx_compiler_stub",
      "cmake",
      "ninja",
      "pkg-config"
     ],
     "host":[
      "gnuradio-core",
      "boost-cpp",
      "log4cpp",
      "python",
      "uhd"
     ],
     "run":[
      "boost-cpp",
      "gnuradio-core",
      "log4cpp",
      "python"
     ]
    },
    "script":"install_uhd.sh",
    "test":{
     "commands":null,
     "imports":[
      "gnuradio.uhd"
     ]
    }
   },
   {
    "about":{
     "summary":"GNU Radio SDL module providing video components"
    },
    "build":null,
    "name":"gnuradio-video-sdl",
    "requirements":{
     "build":[
      "c_compiler_stub",
      "cxx_compiler_stub",
      "cmake",
      "ninja",
      "pkg-config"
     ],
     "host":[
      "gnuradio-core",
      "boost-cpp",
      "log4cpp",
      "python",
      "sdl"
     ],
     "run":[
      "boost-cpp",
      "gnuradio-core",
      "log4cpp",
      "python"
     ]
    },
    "script":"install_video_sdl.sh",
    "test":{
     "imports":[
      "gnuradio.video_sdl"
     ]
    }
   },
   {
    "about":{
     "summary":"GNU Radio ZeroMQ module for message passing functionality"
    },
    "name":"gnuradio-zeromq",
    "requirements":{
     "build":[
      "c_compiler_stub",
      "cxx_compiler_stub",
      "cmake",
      "ninja",
      "pkg-config"
     ],
     "host":[
      "gnuradio-core",
      "boost-cpp",
      "cppzmq",
      "log4cpp",
      "python",
      "zeromq"
     ],
     "run":[
      "boost-cpp",
      "gnuradio-core",
      "log4cpp",
      "python",
      "pyzmq"
     ]
    },
    "script":"install_zeromq.sh",
    "test":{
     "imports":[
      "gnuradio.zeromq"
     ]
    }
   },
   {
    "about":{
     "summary":"GNU Radio core library and standard modules"
    },
    "name":"gnuradio",
    "requirements":{
     "run":[
      "gnuradio-core",
      "gnuradio-grc",
      "gnuradio-qtgui",
      "gnuradio-uhd",
      "gnuradio-video-sdl",
      "gnuradio-zeromq",
      "python"
     ]
    },
    "test":{
     "imports":[
      "gnuradio.gr",
      "gnuradio.qtgui",
      "gnuradio.uhd",
      "gnuradio.video_sdl",
      "gnuradio.zeromq"
     ]
    }
   }
  ],
  "package":{
   "name":"gnuradio",
   "version":"3.8.1.0"
  },
  "requirements":{
   "build":[
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cmake >=3.8",
    "ninja",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cmake >=3.8",
    "ninja",
    "pkg-config",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cmake >=3.8",
    "ninja",
    "pkg-config",
    "cdt_stub",
    "cdt_stub",
    "cdt_stub",
    "cdt_stub",
    "cdt_stub",
    "cdt_stub",
    "cdt_stub",
    "cdt_stub",
    "cdt_stub",
    "cdt_stub",
    "cdt_stub",
    "cdt_stub",
    "cdt_stub",
    "cdt_stub",
    "cdt_stub"
   ],
   "host":[
    "boost-cpp",
    "click",
    "click-plugins",
    "fftw",
    "gsl",
    "libblas",
    "libcblas",
    "libusb >=1",
    "log4cpp",
    "mako",
    "mpir",
    "numpy >=1.1",
    "pip",
    "python",
    "six",
    "swig",
    "volk >=2",
    "gtk3",
    "lxml",
    "pygobject",
    "pyyaml",
    "pyqt",
    "qt",
    "qwt",
    "uhd",
    "sdl",
    "cppzmq",
    "zeromq",
    "boost-cpp",
    "click",
    "click-plugins",
    "fftw",
    "gsl",
    "libblas",
    "libcblas",
    "libusb >=1",
    "log4cpp",
    "mako",
    "mpir",
    "numpy >=1.1",
    "python",
    "six",
    "swig",
    "volk >=2",
    "gtk3",
    "lxml",
    "pygobject",
    "pyyaml",
    "pyqt",
    "qt",
    "qwt",
    "uhd",
    "cppzmq",
    "zeromq",
    "boost-cpp",
    "click",
    "click-plugins",
    "fftw",
    "gsl",
    "libblas",
    "libcblas",
    "libusb >=1",
    "log4cpp",
    "mako",
    "mpir",
    "numpy >=1.1",
    "python",
    "six",
    "swig",
    "volk >=2",
    "alsa-lib",
    "portaudio",
    "gtk3",
    "lxml",
    "pygobject",
    "pyyaml",
    "pyqt",
    "qt",
    "qwt",
    "uhd",
    "sdl",
    "cppzmq",
    "zeromq"
   ],
   "run":[
    "python",
    "python",
    "python"
   ]
  },
  "source":{
   "patches":[
    "0001-Use-raw-strings-for-paths-substituted-directly-into-.patch",
    "0001-Don-t-use-hard-coded-path-constants.patch",
    "0001-python-Do-not-link-against-python-lib-for-building-a.patch",
    "0001-cmake-Shorten-swig-command-line-by-removing-duplicat.patch",
    "0001-cmake-Install-python-wrapper-exe-for-scripts-on-Wind.patch",
    "0002-cmake-Don-t-generate-.pyc-and-.pyo-files.patch",
    "0001-Use-raw-strings-for-paths-substituted-directly-into-.patch",
    "0001-Don-t-use-hard-coded-path-constants.patch",
    "0001-python-Do-not-link-against-python-lib-for-building-a.patch",
    "0001-cmake-Shorten-swig-command-line-by-removing-duplicat.patch",
    "0001-cmake-Install-python-wrapper-exe-for-scripts-on-Wind.patch",
    "0002-cmake-Don-t-generate-.pyc-and-.pyo-files.patch",
    "0001-Use-raw-strings-for-paths-substituted-directly-into-.patch",
    "0001-Don-t-use-hard-coded-path-constants.patch",
    "0001-python-Do-not-link-against-python-lib-for-building-a.patch",
    "0001-cmake-Shorten-swig-command-line-by-removing-duplicat.patch",
    "0001-cmake-Install-python-wrapper-exe-for-scripts-on-Wind.patch",
    "0002-cmake-Don-t-generate-.pyc-and-.pyo-files.patch"
   ],
   "sha256":"e15311e7da9fe2bb790cc36321d7eb2d93b9dfa0c1552fa5d534dd99d22873be",
   "url":"https://github.com/gnuradio/gnuradio/releases/download/v3.8.1.0/gnuradio-3.8.1.0.tar.gz"
  },
  "test":{
   "requires":[
    "sqlite",
    "sqlite",
    "sqlite"
   ]
  }
 },
 "name":"gnuradio",
 "new_version":"3.8.1.0",
 "new_version_attempts":{
  "3.8.1.0":7
 },
 "new_version_errors":{
  "3.8.1.0":"The recipe did not change in the version migration, a URL did not hash, or there is jinja2 syntax the bot cannot handle!\n\nPlease check the URLs in your recipe with version '3.8.1.0' to make sure they exist!\n\nWe also found the following errors:\n\n - could not hash URL template 'https://github.com/gnuradio/gnuradio/releases/download/v{{ version }}/gnuradio-{{ version }}.tar.gz'\n"
 },
 "outputs_names":[
  "gnuradio",
  "gnuradio-core",
  "gnuradio-grc",
  "gnuradio-qtgui",
  "gnuradio-uhd",
  "gnuradio-video-sdl",
  "gnuradio-zeromq"
 ],
 "pinning_version":"2020.04.10",
 "raw_meta_yaml":"{% set version = \"3.8.1.0\" %}\n\npackage:\n  name: gnuradio\n  version: {{ version }}\n\nsource:\n  url: https://github.com/gnuradio/gnuradio/releases/download/v{{ version }}/gnuradio-{{ version }}.tar.gz\n  sha256: e15311e7da9fe2bb790cc36321d7eb2d93b9dfa0c1552fa5d534dd99d22873be\n  patches:\n    - 0001-Use-raw-strings-for-paths-substituted-directly-into-.patch\n    - 0001-Don-t-use-hard-coded-path-constants.patch\n    - 0001-python-Do-not-link-against-python-lib-for-building-a.patch\n    - 0001-cmake-Shorten-swig-command-line-by-removing-duplicat.patch\n    - 0001-cmake-Install-python-wrapper-exe-for-scripts-on-Wind.patch\n    - 0002-cmake-Don-t-generate-.pyc-and-.pyo-files.patch\n\nbuild:\n  number: 4\n  skip: true  # [win and py2k]\n\nrequirements:\n  build:\n    - {{ compiler('c') }}\n    - {{ compiler('cxx') }}\n    - cmake >=3.8\n    - ninja\n    - pkg-config  # [not win]\n   # libudev needed to link against libusb on linux\n    - {{ cdt('libudev') }}  # [linux]\n   # below are needed to link with Qt for qtgui\n    - {{ cdt('libice') }}  # [linux]\n    - {{ cdt('libselinux') }}  # [linux]\n    - {{ cdt('libsm') }}  # [linux]\n    - {{ cdt('libx11') }}  # [linux]\n    - {{ cdt('libxau') }}  # [linux]\n    - {{ cdt('libxcb') }}  # [linux]\n    - {{ cdt('libxdamage') }}  # [linux]\n    - {{ cdt('libxext') }}  # [linux]\n    - {{ cdt('libxfixes') }}  # [linux]\n    - {{ cdt('libxrender') }}  # [linux]\n    - {{ cdt('libxxf86vm') }}  # [linux]\n    - {{ cdt('libuuid') }}  # [linux]\n    - {{ cdt('mesa-dri-drivers') }}  # [linux]\n    - {{ cdt('mesa-libgl-devel') }}  # [linux]\n\n  host:\n    - boost-cpp\n    - click\n    - click-plugins\n    - fftw\n    - gsl\n    # blas needed to link with gsl\n    - libblas\n    - libcblas\n    - libusb >=1\n    - log4cpp\n    - mako\n    - mpir\n    # we don't build against numpy C lib\n    # (only needed at runtime, except gnuradio CMake checks for it at build)\n    # specify version so pin is ignored\n    - numpy >=1.1\n    - pip  # [win]\n    - python\n    - six\n    - swig\n    - volk >=2\n  # gnuradio.audio\n    - alsa-lib  # [linux]\n    - portaudio  # [linux]\n  # gnuradio companion\n    - gtk3\n    - lxml\n    - pygobject\n    - pyyaml\n  # gnuradio.qtgui\n    - pyqt\n    - qt\n    - qwt\n  # gnuradio.uhd\n    - uhd\n  # gnuradio.video_sdl\n    - sdl  # [not osx]\n  # gnuradio.zeromq\n    - cppzmq\n    - zeromq\n\n  run:\n    # here to make the linter happy, overridden by metapackage output\n    - python\n\ntest:\n  requires:\n    - sqlite\n\noutputs:\n  - name: gnuradio-core\n    script: install_core.sh  # [not win]\n    script: install_core.bat  # [win]\n    build:\n      entry_points:  # [win]\n        - gr_filter_design = gnuradio.filter.filter_design:main  # [win]\n        - gr_modtool = gnuradio.modtool.cli.base:cli  # [win]\n      run_exports:\n        - {{ pin_subpackage('gnuradio-core', max_pin='x.x.x') }}\n    requirements:\n      build:\n        - {{ compiler('c') }}\n        - {{ compiler('cxx') }}\n        - cmake\n        - ninja\n        - pkg-config  # [not win]\n      host:\n        - alsa-lib  # [linux]\n        - boost-cpp\n        - fftw\n        - gsl\n        - libblas\n        - libcblas\n        - libusb\n        - log4cpp\n        - mpir\n        - portaudio  # [linux]\n        - python\n        - swig\n        - volk\n      run:\n        - boost-cpp\n        - click\n        - click-plugins\n        - fftw\n        - {{ pin_compatible('log4cpp') }}\n        - mako\n        - menuinst  # [win]\n        - numpy\n        - {{ pin_compatible('portaudio') }}  # [linux]\n        - python\n        - six\n    test:\n      commands:\n        - gnuradio-config-info -v --prefix --sysconfdir --prefsdir --userprefsdir --prefs --builddate --enabled-components --cc --cxx --cflags\n        # run a few example scripts to show that at least some things work\n        - python \"$PREFIX/share/gnuradio/examples/volk_benchmark/volk_math.py\" -L test -N 1e6 -I 3 --all  # [not win]\n        - python \"%PREFIX%\\\\Library\\\\share\\\\gnuradio\\\\examples\\\\volk_benchmark\\\\volk_math.py\" -L test -N 1e6 -I 3 --all  # [win]\n        - if not exist %PREFIX%\\\\Scripts\\\\gr_filter_design.exe exit 1  # [win]\n        - if not exist %PREFIX%\\\\Scripts\\\\gr_modtool.exe exit 1  # [win]\n      imports:\n        - gnuradio.analog\n        - gnuradio.audio\n        - gnuradio.blocks\n        - gnuradio.channels\n        - gnuradio.digital\n        - gnuradio.dtv\n        - gnuradio.fec\n        - gnuradio.fft\n        - gnuradio.filter\n        - gnuradio.gr\n        - gnuradio.trellis\n        - gnuradio.vocoder\n        - gnuradio.wavelet\n        - pmt\n    about:\n      summary: GNU Radio core functionality and modules\n  - name: gnuradio-grc\n    script: install_grc.sh  # [not win]\n    script: install_grc.bat  # [win]\n    build:  # [win]\n      entry_points:  # [win]\n        - gnuradio-companion = gnuradio.grc.main:main  # [win]\n        - grcc = gnuradio.grc.compiler:main  # [win]\n    requirements:\n      build:\n        - {{ compiler('c') }}\n        - {{ compiler('cxx') }}\n        - cmake\n        - ninja\n        - pkg-config  # [not win]\n      host:\n        - gnuradio-core\n        - boost-cpp\n        - gtk3\n        - log4cpp\n        - python\n      run:\n        - boost-cpp\n        - {{ pin_subpackage('gnuradio-core', exact=True) }}\n        - {{ pin_compatible('log4cpp') }}\n        - lxml\n        - menuinst  # [win]\n        - pygobject\n        - python\n        - pyyaml\n    test:\n      commands:\n        - grcc \"$PREFIX/share/gnuradio/examples/metadata/file_metadata_vector_sink.grc\"  # [not win]\n        - python \"%PREFIX%\\\\Library\\\\bin\\\\grcc.py\" \"%PREFIX%\\\\Library\\\\share\\\\gnuradio\\\\examples\\\\metadata\\\\file_metadata_vector_sink.grc\"  # [win]\n        - python file_metadata_vector_sink.py  # [not win]\n        - if not exist %PREFIX%\\\\Scripts\\\\gnuradio-companion.exe exit 1  # [win]\n        - if not exist %PREFIX%\\\\Scripts\\\\grcc.exe exit 1  # [win]\n    about:\n      summary: GNU Radio Companion graphical flowgraph interface\n  - name: gnuradio-qtgui\n    script: install_qtgui.sh  # [not win]\n    script: install_qtgui.bat  # [win]\n    requirements:\n      build:\n        - {{ compiler('c') }}\n        - {{ compiler('cxx') }}\n        - cmake\n        - ninja\n        - pkg-config  # [not win]\n      host:\n        - gnuradio-core\n        - boost-cpp\n        - log4cpp\n        - pyqt\n        - python\n        - qt\n        - qwt\n        - volk\n      run:\n        - boost-cpp\n        - {{ pin_subpackage('gnuradio-core', exact=True) }}\n        - {{ pin_compatible('log4cpp') }}\n        - pyqt\n        - python\n        - {{ pin_compatible('qwt', max_pin='x.x') }}\n    test:\n      imports:\n        - gnuradio.qtgui\n    about:\n      summary: GNU Radio QT module providing graphical components\n  - name: gnuradio-uhd\n    script: install_uhd.sh  # [not win]\n    script: install_uhd.bat  # [win]\n    build:  # [win]\n      entry_points:  # [win]\n        - uhd_siggen = gnuradio.uhd.uhd_siggen_base:main  # [win]\n    requirements:\n      build:\n        - {{ compiler('c') }}\n        - {{ compiler('cxx') }}\n        - cmake\n        - ninja\n        - pkg-config  # [not win]\n      host:\n        - gnuradio-core\n        - boost-cpp\n        - log4cpp\n        - python\n        - uhd\n      run:\n        - boost-cpp\n        - {{ pin_subpackage('gnuradio-core', exact=True) }}\n        - {{ pin_compatible('log4cpp') }}\n        - python\n    test:\n      commands:\n        - if not exist %PREFIX%\\\\Scripts\\\\uhd_siggen.exe exit 1  # [win]\n      imports:\n        - gnuradio.uhd\n    about:\n      summary: GNU Radio UHD module for Ettus USRP radios\n  - name: gnuradio-video-sdl\n    build:\n      skip: True  # [osx]\n    script: install_video_sdl.sh  # [not win]\n    script: install_video_sdl.bat  # [win]\n    requirements:\n      build:\n        - {{ compiler('c') }}\n        - {{ compiler('cxx') }}\n        - cmake\n        - ninja\n        - pkg-config  # [not win]\n      host:\n        - gnuradio-core\n        - boost-cpp\n        - log4cpp\n        - python\n        - sdl\n      run:\n        - boost-cpp\n        - {{ pin_subpackage('gnuradio-core', exact=True) }}\n        - {{ pin_compatible('log4cpp') }}\n        - python\n    test:\n      imports:\n        - gnuradio.video_sdl\n    about:\n      summary: GNU Radio SDL module providing video components\n  - name: gnuradio-zeromq\n    script: install_zeromq.sh  # [not win]\n    script: install_zeromq.bat  # [win]\n    requirements:\n      build:\n        - {{ compiler('c') }}\n        - {{ compiler('cxx') }}\n        - cmake\n        - ninja\n        - pkg-config  # [not win]\n      host:\n        - gnuradio-core\n        - boost-cpp\n        - cppzmq\n        - log4cpp\n        - python\n        - zeromq\n      run:\n        - boost-cpp\n        - {{ pin_subpackage('gnuradio-core', exact=True) }}\n        - {{ pin_compatible('log4cpp') }}\n        - python\n        - pyzmq\n    test:\n      imports:\n        - gnuradio.zeromq\n    about:\n      summary: GNU Radio ZeroMQ module for message passing functionality\n  # gnuradio metapackage inherits unspecified metadata in\n  # (requirements, build, about) sections from parent recipe\n  - name: gnuradio\n    requirements:\n      run:\n        - {{ pin_subpackage('gnuradio-core', exact=True) }}\n        - {{ pin_subpackage('gnuradio-grc', exact=True) }}\n        - {{ pin_subpackage('gnuradio-qtgui', exact=True) }}\n        - {{ pin_subpackage('gnuradio-uhd', exact=True) }}\n        - {{ pin_subpackage('gnuradio-video-sdl', exact=True) }}\n        - {{ pin_subpackage('gnuradio-zeromq', exact=True) }}\n        # explicitly add python so that build string is generated correctly\n        - python\n    test:\n      imports:\n        - gnuradio.gr\n        - gnuradio.qtgui\n        - gnuradio.uhd\n        - gnuradio.video_sdl\n        - gnuradio.zeromq\n    about:\n      summary: GNU Radio core library and standard modules\n\nabout:\n  home: https://gnuradio.org/\n  license: GPL-3.0-or-later\n  license_family: GPL\n  license_file: COPYING\n  summary: The free and open software radio ecosystem\n  description: |\n    GNU Radio is a free software development toolkit that provides the signal\n    processing runtime and processing blocks to implement software radios using\n    readily-available, low-cost external RF hardware and commodity processors.\n    It is widely used in hobbyist, academic and commercial environments to\n    support wireless communications research as well as to implement real-world\n    radio systems.\n\n    GNU Radio applications are primarily written using the Python programming\n    language, while the supplied, performance-critical signal processing path\n    is implemented in C++ using processor floating point extensions where\n    available. Thus, the developer is able to implement real-time, high-\n    throughput radio systems in a simple-to-use, rapid-application-development\n    environment.\n\n  doc_url: https://gnuradio.org/doc/doxygen/\n  dev_url: https://github.com/gnuradio/gnuradio\n\nextra:\n  recipe-maintainers:\n    - ryanvolz\n",
 "req":{
  "__set__":true,
  "elements":[
   "alsa-lib",
   "boost-cpp",
   "c_compiler_stub",
   "cdt_stub",
   "click",
   "click-plugins",
   "cmake",
   "cppzmq",
   "cxx_compiler_stub",
   "fftw",
   "gnuradio-core",
   "gnuradio-grc",
   "gnuradio-qtgui",
   "gnuradio-uhd",
   "gnuradio-video-sdl",
   "gnuradio-zeromq",
   "gsl",
   "gtk3",
   "libblas",
   "libcblas",
   "libusb",
   "log4cpp",
   "lxml",
   "mako",
   "menuinst",
   "mpir",
   "ninja",
   "numpy",
   "pip",
   "pkg-config",
   "portaudio",
   "pygobject",
   "pyqt",
   "python",
   "pyyaml",
   "pyzmq",
   "qt",
   "qwt",
   "sdl",
   "six",
   "swig",
   "uhd",
   "volk",
   "zeromq"
  ]
 },
 "requirements":{
  "build":{
   "__set__":true,
   "elements":[
    "c_compiler_stub",
    "cdt_stub",
    "cmake",
    "cxx_compiler_stub",
    "ninja",
    "pkg-config"
   ]
  },
  "host":{
   "__set__":true,
   "elements":[
    "alsa-lib",
    "boost-cpp",
    "click",
    "click-plugins",
    "cppzmq",
    "fftw",
    "gnuradio-core",
    "gsl",
    "gtk3",
    "libblas",
    "libcblas",
    "libusb",
    "log4cpp",
    "lxml",
    "mako",
    "mpir",
    "numpy",
    "pip",
    "portaudio",
    "pygobject",
    "pyqt",
    "python",
    "pyyaml",
    "qt",
    "qwt",
    "sdl",
    "six",
    "swig",
    "uhd",
    "volk",
    "zeromq"
   ]
  },
  "run":{
   "__set__":true,
   "elements":[
    "boost-cpp",
    "click",
    "click-plugins",
    "fftw",
    "gnuradio-core",
    "gnuradio-grc",
    "gnuradio-qtgui",
    "gnuradio-uhd",
    "gnuradio-video-sdl",
    "gnuradio-zeromq",
    "log4cpp",
    "lxml",
    "mako",
    "menuinst",
    "numpy",
    "portaudio",
    "pygobject",
    "pyqt",
    "python",
    "pyyaml",
    "pyzmq",
    "qwt",
    "six"
   ]
  },
  "test":{
   "__set__":true,
   "elements":[
    "sqlite"
   ]
  }
 },
 "smithy_version":"No azure token. Create a token and\nput it in ~/.conda-smithy/azure.token\n3.6.16",
 "strong_exports":false,
 "total_requirements":{
  "build":{
   "__set__":true,
   "elements":[
    "c_compiler_stub",
    "cdt_stub",
    "cmake",
    "cmake >=3.8",
    "cxx_compiler_stub",
    "ninja",
    "pkg-config"
   ]
  },
  "host":{
   "__set__":true,
   "elements":[
    "alsa-lib",
    "boost-cpp",
    "click",
    "click-plugins",
    "cppzmq",
    "fftw",
    "gnuradio-core",
    "gsl",
    "gtk3",
    "libblas",
    "libcblas",
    "libusb",
    "libusb >=1",
    "log4cpp",
    "lxml",
    "mako",
    "mpir",
    "numpy >=1.1",
    "pip",
    "portaudio",
    "pygobject",
    "pyqt",
    "python",
    "pyyaml",
    "qt",
    "qwt",
    "sdl",
    "six",
    "swig",
    "uhd",
    "volk",
    "volk >=2",
    "zeromq"
   ]
  },
  "run":{
   "__set__":true,
   "elements":[
    "boost-cpp",
    "click",
    "click-plugins",
    "fftw",
    "gnuradio-core",
    "gnuradio-grc",
    "gnuradio-qtgui",
    "gnuradio-uhd",
    "gnuradio-video-sdl",
    "gnuradio-zeromq",
    "log4cpp",
    "lxml",
    "mako",
    "menuinst",
    "numpy",
    "portaudio",
    "pygobject",
    "pyqt",
    "python",
    "pyyaml",
    "pyzmq",
    "qwt",
    "six"
   ]
  },
  "test":{
   "__set__":true,
   "elements":[
    "sqlite"
   ]
  }
 },
 "url":"https://github.com/gnuradio/gnuradio/releases/download/v3.8.0.0/gnuradio-3.8.0.0.tar.gz",
 "version":"3.8.1.0"
}