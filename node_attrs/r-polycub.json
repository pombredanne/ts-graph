{
 "PRed":[
  {
   "PR":{
    "__lazy_json__":"pr_json/299100370.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"RBaseRebuild",
    "migrator_version":0,
    "name":"r-base-3.6.1"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/412812392.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"MigrationYaml",
    "migrator_object_version":2,
    "migrator_version":0,
    "name":"r400"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  }
 ],
 "bad":false,
 "conda-forge.yml":{
  "bot":{
   "automerge":true
  },
  "provider":{
   "win":"azure"
  }
 },
 "feedstock_name":"r-polycub",
 "hash_type":"sha256",
 "meta_yaml":{
  "about":{
   "home":"https://github.com/bastistician/polyCub",
   "license":"GPL-2",
   "license_family":"GPL2",
   "license_file":"/lib/R/share/licenses/GPL-2",
   "summary":"Numerical integration of continuously differentiable functions f(x,y) over simple closed polygonal domains. The following cubature methods are implemented: product Gauss cubature (Sommariva and Vianello, 2007, <doi:10.1007/s10543-007-0131-2>), the simple two-dimensional midpoint rule (wrapping 'spatstat' functions), adaptive cubature for radially symmetric functions via line integrate() along the polygon boundary (Meyer and Held, 2014, <doi:10.1214/14-AOAS743>, Supplement B), and integration of the bivariate Gaussian density based on polygon triangulation. For simple integration along the axes, the 'cubature' package is more appropriate."
  },
  "build":{
   "merge_build_host":true,
   "number":"2",
   "rpaths":[
    "lib/R/lib/",
    "lib/",
    "lib/R/lib/",
    "lib/",
    "lib/R/lib/",
    "lib/"
   ]
  },
  "extra":{
   "recipe-maintainers":[
    "conda-forge/r",
    "conda-forge/r",
    "conda-forge/r"
   ]
  },
  "package":{
   "name":"r-polycub",
   "version":"0.7.1"
  },
  "requirements":{
   "build":[
    "m2w64_c_compiler_stub",
    "filesystem",
    "make",
    "sed",
    "coreutils",
    "zip",
    "c_compiler_stub",
    "make",
    "c_compiler_stub",
    "make"
   ],
   "host":[
    "r-base",
    "r-sp >=1.0_11",
    "r-base",
    "r-sp >=1.0_11",
    "r-base",
    "r-sp >=1.0_11"
   ],
   "run":[
    "r-base",
    "gcc-libs",
    "r-sp >=1.0_11",
    "r-base",
    "r-sp >=1.0_11",
    "r-base",
    "r-sp >=1.0_11"
   ]
  },
  "source":{
   "sha256":"675c3f2b2b5977c03d500bbcaedebde72e9ae8e7a95652df30f86d6278b1c152",
   "url":[
    "https://cran.r-project.org/src/contrib/polyCub_0.7.1.tar.gz",
    "https://cran.r-project.org/src/contrib/Archive/polyCub/polyCub_0.7.1.tar.gz",
    "https://cran.r-project.org/src/contrib/polyCub_0.7.1.tar.gz",
    "https://cran.r-project.org/src/contrib/Archive/polyCub/polyCub_0.7.1.tar.gz",
    "https://cran.r-project.org/src/contrib/polyCub_0.7.1.tar.gz",
    "https://cran.r-project.org/src/contrib/Archive/polyCub/polyCub_0.7.1.tar.gz"
   ]
  },
  "test":{
   "commands":[
    "\"%R%\" -e \"library('polyCub')\"",
    "$R -e \"library('polyCub')\"",
    "$R -e \"library('polyCub')\""
   ]
  }
 },
 "name":"r-polycub",
 "new_version":"0.7.1",
 "pinning_version":"2020.05.04.05.46.47",
 "raw_meta_yaml":"{% set version = '0.7.1' %}\n{% set posix = 'm2-' if win else '' %}\n{% set native = 'm2w64-' if win else '' %}\n\npackage:\n  name: r-polycub\n  version: {{ version|replace(\"-\", \"_\") }}\n\nsource:\n  url:\n    - {{ cran_mirror }}/src/contrib/polyCub_{{ version }}.tar.gz\n    - {{ cran_mirror }}/src/contrib/Archive/polyCub/polyCub_{{ version }}.tar.gz\n  sha256: 675c3f2b2b5977c03d500bbcaedebde72e9ae8e7a95652df30f86d6278b1c152\n\nbuild:\n  merge_build_host: True  # [win]\n  number: 2\n\n  rpaths:\n    - lib/R/lib/\n    - lib/\n\nrequirements:\n  build:\n    - {{ compiler('c') }}              # [not win]\n    - {{ compiler('m2w64_c') }}        # [win]\n    - {{ posix }}filesystem        # [win]\n    - {{ posix }}make\n    - {{ posix }}sed               # [win]\n    - {{ posix }}coreutils         # [win]\n    - {{ posix }}zip               # [win]\n\n  host:\n    - r-base\n    - r-sp >=1.0_11\n\n  run:\n    - r-base\n    - {{ native }}gcc-libs         # [win]\n    - r-sp >=1.0_11\n\ntest:\n  commands:\n    - $R -e \"library('polyCub')\"           # [not win]\n    - \"\\\"%R%\\\" -e \\\"library('polyCub')\\\"\"  # [win]\n\nabout:\n  home: https://github.com/bastistician/polyCub\n  license: GPL-2\n  summary: 'Numerical integration of continuously differentiable functions f(x,y) over simple\n    closed polygonal domains. The following cubature methods are implemented: product\n    Gauss cubature (Sommariva and Vianello, 2007, <doi:10.1007/s10543-007-0131-2>),\n    the simple two-dimensional midpoint rule (wrapping ''spatstat'' functions), adaptive\n    cubature for radially symmetric functions via line integrate() along the polygon\n    boundary (Meyer and Held, 2014, <doi:10.1214/14-AOAS743>, Supplement B), and integration\n    of the bivariate Gaussian density based on polygon triangulation. For simple integration\n    along the axes, the ''cubature'' package is more appropriate.'\n\n  license_family: GPL2\n  license_file: '{{ environ[\"PREFIX\"] }}/lib/R/share/licenses/GPL-2'\n\nextra:\n  recipe-maintainers:\n    - conda-forge/r\n\n# Package: polyCub\n# Title: Cubature over Polygonal Domains\n# Version: 0.7.1\n# Date: 2019-02-07\n# Authors@R: c( person(\"Sebastian\", \"Meyer\", email = \"seb.meyer@fau.de\", role = c(\"aut\",\"cre\",\"trl\"), comment = c(ORCID = \"0000-0002-1791-9449\")), person(\"Leonhard\", \"Held\", email = \"Leonhard.Held@uzh.ch\", role = \"ths\"), person(\"Michael\", \"Hoehle\", email = \"hoehle@math.su.se\", role = \"ths\") )\n# Description: Numerical integration of continuously differentiable functions f(x,y) over simple closed polygonal domains. The following cubature methods are implemented: product Gauss cubature (Sommariva and Vianello, 2007, <doi:10.1007/s10543-007-0131-2>), the simple two-dimensional midpoint rule (wrapping 'spatstat' functions), adaptive cubature for radially symmetric functions via line integrate() along the polygon boundary (Meyer and Held, 2014, <doi:10.1214/14-AOAS743>, Supplement B), and integration of the bivariate Gaussian density based on polygon triangulation. For simple integration along the axes, the 'cubature' package is more appropriate.\n# License: GPL-2\n# URL: https://github.com/bastistician/polyCub\n# BugReports: https://github.com/bastistician/polyCub/issues\n# Depends: R (>= 2.15.0), methods\n# Imports: grDevices, graphics, stats, sp (>= 1.0-11)\n# Suggests: spatstat, lattice, testthat, mvtnorm, statmod, rgeos, gpclib, cubature, knitr, rmarkdown, microbenchmark\n# RoxygenNote: 6.1.1\n# VignetteBuilder: knitr, rmarkdown\n# NeedsCompilation: yes\n# Packaged: 2019-02-07 10:20:59 UTC; smeyer\n# Author: Sebastian Meyer [aut, cre, trl] (<https://orcid.org/0000-0002-1791-9449>), Leonhard Held [ths], Michael Hoehle [ths]\n# Maintainer: Sebastian Meyer <seb.meyer@fau.de>\n# Repository: CRAN\n# Date/Publication: 2019-02-07 16:30:02 UTC\n",
 "req":{
  "__set__":true,
  "elements":[
   "c_compiler_stub",
   "coreutils",
   "filesystem",
   "gcc-libs",
   "m2w64_c_compiler_stub",
   "make",
   "r-base",
   "r-sp",
   "sed",
   "zip"
  ]
 },
 "requirements":{
  "build":{
   "__set__":true,
   "elements":[
    "c_compiler_stub",
    "coreutils",
    "filesystem",
    "m2w64_c_compiler_stub",
    "make",
    "sed",
    "zip"
   ]
  },
  "host":{
   "__set__":true,
   "elements":[
    "r-base",
    "r-sp"
   ]
  },
  "run":{
   "__set__":true,
   "elements":[
    "gcc-libs",
    "r-base",
    "r-sp"
   ]
  },
  "test":{
   "__set__":true,
   "elements":[]
  }
 },
 "smithy_version":"No azure token. Create a token and\nput it in ~/.conda-smithy/azure.token\n3.7.0\n",
 "strong_exports":false,
 "total_requirements":{
  "build":{
   "__set__":true,
   "elements":[
    "c_compiler_stub",
    "coreutils",
    "filesystem",
    "m2w64_c_compiler_stub",
    "make",
    "sed",
    "zip"
   ]
  },
  "host":{
   "__set__":true,
   "elements":[
    "r-base",
    "r-sp >=1.0_11"
   ]
  },
  "run":{
   "__set__":true,
   "elements":[
    "gcc-libs",
    "r-base",
    "r-sp >=1.0_11"
   ]
  },
  "test":{
   "__set__":true,
   "elements":[]
  }
 },
 "url":[
  "https://cran.r-project.org/src/contrib/polyCub_0.7.1.tar.gz",
  "https://cran.r-project.org/src/contrib/Archive/polyCub/polyCub_0.7.1.tar.gz",
  "https://cran.r-project.org/src/contrib/polyCub_0.7.1.tar.gz",
  "https://cran.r-project.org/src/contrib/Archive/polyCub/polyCub_0.7.1.tar.gz",
  "https://cran.r-project.org/src/contrib/polyCub_0.7.1.tar.gz",
  "https://cran.r-project.org/src/contrib/Archive/polyCub/polyCub_0.7.1.tar.gz"
 ],
 "version":"0.7.1"
}