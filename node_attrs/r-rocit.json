{
 "PRed":[
  {
   "PR":{
    "__lazy_json__":"pr_json/417618781.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"MigrationYaml",
    "migrator_object_version":2,
    "migrator_version":0,
    "name":"r400"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  }
 ],
 "bad":false,
 "conda-forge.yml":{
  "bot":{
   "automerge":true
  }
 },
 "feedstock_name":"r-rocit",
 "hash_type":"sha256",
 "meta_yaml":{
  "about":{
   "home":"https://CRAN.R-project.org/package=ROCit",
   "license":"GPL-3.0-only",
   "license_family":"GPL3",
   "license_file":[
    "/lib/R/share/licenses/GPL-3",
    "/lib/R/share/licenses/GPL-3",
    "/lib/R/share/licenses/GPL-3"
   ],
   "summary":"Sensitivity (or recall or true positive rate), false positive rate, specificity, precision (or positive predictive value), negative predictive value, misclassification rate, accuracy, F-score- these are popular metrics for assessing performance of binary classifier for certain threshold. These metrics are calculated at certain threshold values. Receiver operating characteristic (ROC) curve is a common tool for assessing overall diagnostic ability of the binary classifier. Unlike depending on a certain threshold, area under ROC curve (also known as AUC), is a summary statistic about how well a binary classifier performs overall for the classification task. ROCit package provides flexibility to easily evaluate threshold-bound metrics. Also, ROC curve, along with AUC, can be obtained using different methods, such as empirical, binormal and non-parametric. ROCit encompasses a wide variety of methods for constructing confidence interval of ROC curve and AUC. ROCit also features the option of constructing empirical gains table, which is a handy tool for direct marketing. The package offers options for commonly used visualization, such as, ROC curve, KS plot, lift plot. Along with in-built default graphics setting, there are rooms for manual tweak by providing the necessary values as function arguments. ROCit is a powerful tool offering a range of things, yet it is very easy to use."
  },
  "build":{
   "merge_build_host":true,
   "noarch":"generic",
   "number":"1",
   "rpaths":[
    "lib/R/lib/",
    "lib/",
    "lib/R/lib/",
    "lib/",
    "lib/R/lib/",
    "lib/"
   ]
  },
  "extra":{
   "recipe-maintainers":[
    "conda-forge/r",
    "conda-forge/r",
    "conda-forge/r"
   ]
  },
  "package":{
   "name":"r-rocit",
   "version":"1.1.1"
  },
  "requirements":{
   "build":null,
   "host":[
    "r-base",
    "r-base",
    "r-base"
   ],
   "run":[
    "r-base",
    "r-base",
    "r-base"
   ]
  },
  "source":{
   "sha256":"e0808b1af0eeeeba8da2fa429893539a32012f544ccf19dd35a04256fe0f37ae",
   "url":[
    "https://cran.r-project.org/src/contrib/ROCit_1.1.1.tar.gz",
    "https://cran.r-project.org/src/contrib/Archive/ROCit/ROCit_1.1.1.tar.gz",
    "https://cran.r-project.org/src/contrib/ROCit_1.1.1.tar.gz",
    "https://cran.r-project.org/src/contrib/Archive/ROCit/ROCit_1.1.1.tar.gz",
    "https://cran.r-project.org/src/contrib/ROCit_1.1.1.tar.gz",
    "https://cran.r-project.org/src/contrib/Archive/ROCit/ROCit_1.1.1.tar.gz"
   ]
  },
  "test":{
   "commands":[
    "\"%R%\" -e \"library('ROCit')\"",
    "$R -e \"library('ROCit')\"",
    "$R -e \"library('ROCit')\""
   ]
  }
 },
 "name":"r-rocit",
 "new_version":"1.1.1",
 "pinning_version":"2020.05.13.13.23.43",
 "raw_meta_yaml":"{% set version = '1.1.1' %}\n{% set posix = 'm2-' if win else '' %}\n{% set native = 'm2w64-' if win else '' %}\n\npackage:\n  name: r-rocit\n  version: {{ version|replace(\"-\", \"_\") }}\n\nsource:\n  url:\n    - {{ cran_mirror }}/src/contrib/ROCit_{{ version }}.tar.gz\n    - {{ cran_mirror }}/src/contrib/Archive/ROCit/ROCit_{{ version }}.tar.gz\n  sha256: e0808b1af0eeeeba8da2fa429893539a32012f544ccf19dd35a04256fe0f37ae\n\nbuild:\n  merge_build_host: True  # [win]\n  number: 1\n  noarch: generic\n  rpaths:\n    - lib/R/lib/\n    - lib/\n\nrequirements:\n  build:\n    - {{ posix }}zip               # [win]\n  host:\n    - r-base\n  run:\n    - r-base\n\ntest:\n  commands:\n    - $R -e \"library('ROCit')\"           # [not win]\n    - \"\\\"%R%\\\" -e \\\"library('ROCit')\\\"\"  # [win]\n\nabout:\n  home: https://CRAN.R-project.org/package=ROCit\n  license: GPL-3.0-only\n  summary: Sensitivity (or recall or true positive rate), false positive rate, specificity, precision\n    (or positive predictive value), negative predictive value, misclassification rate,\n    accuracy, F-score- these are popular metrics for assessing performance of binary\n    classifier for certain threshold. These metrics are calculated at certain threshold\n    values. Receiver operating characteristic (ROC) curve is a common tool for assessing\n    overall diagnostic ability of the binary classifier. Unlike depending on a certain\n    threshold, area under ROC curve (also known as AUC), is a summary statistic about\n    how well a binary classifier performs overall for the classification task. ROCit\n    package provides flexibility to easily evaluate threshold-bound metrics. Also, ROC\n    curve, along with AUC, can be obtained using different methods, such as empirical,\n    binormal and non-parametric. ROCit encompasses a wide variety of methods for constructing\n    confidence interval of ROC curve and AUC. ROCit also features the option of constructing\n    empirical gains table, which is a handy tool for direct marketing. The package offers\n    options for commonly used visualization, such as, ROC curve, KS plot, lift plot.\n    Along with in-built default graphics setting, there are rooms for manual tweak by\n    providing the necessary values as function arguments. ROCit is a powerful tool offering\n    a range of things, yet it is very easy to use.\n  license_family: GPL3\n  license_file:\n    - '{{ environ[\"PREFIX\"] }}/lib/R/share/licenses/GPL-3'\n\nextra:\n  recipe-maintainers:\n    - conda-forge/r\n\n# Package: ROCit\n# Type: Package\n# Title: Performance Assessment of Binary Classifier with Visualization\n# Version: 1.1.1\n# Date: 2019-01-21\n# Authors@R: c(person(\"Md Riaz Ahmed\", \"Khan\", email = \"mdriazahmed.khan@jacks.sdstate.edu\", role = c(\"aut\", \"cre\")), person(\"Thomas\", \"Brandenburger\", email = \"thomas.brandenburger@sdstate.edu\", role = \"aut\" ))\n# Description: Sensitivity (or recall or true positive rate), false positive rate, specificity, precision (or positive predictive value), negative predictive value, misclassification rate, accuracy, F-score- these are popular metrics for assessing performance of binary classifier for certain threshold. These metrics are calculated at certain threshold values. Receiver operating characteristic (ROC) curve is a common tool for assessing overall diagnostic ability of the binary classifier. Unlike depending on a certain threshold, area under ROC curve (also known as AUC), is a summary statistic about how well a binary classifier performs overall for the classification task. ROCit package provides flexibility to easily evaluate threshold-bound metrics. Also, ROC curve, along with AUC, can be obtained using different methods, such as empirical, binormal and non-parametric. ROCit encompasses a wide variety of methods for constructing confidence interval of ROC curve and AUC. ROCit also features the option of constructing empirical gains table, which is a handy tool for direct marketing. The package offers options for commonly used visualization, such as, ROC curve, KS plot, lift plot. Along with in-built default graphics setting, there are rooms for manual tweak by providing the necessary values as function arguments. ROCit is a powerful tool offering a range of things, yet it is very easy to use.\n# Imports: stats, graphics\n# License: GPL-3\n# Encoding: UTF-8\n# LazyData: true\n# RoxygenNote: 6.1.0\n# Suggests: testthat, knitr, rmarkdown\n# VignetteBuilder: knitr\n# NeedsCompilation: no\n# Packaged: 2019-01-21 16:38:04 UTC; Riaz\n# Author: Md Riaz Ahmed Khan [aut, cre], Thomas Brandenburger [aut]\n# Maintainer: Md Riaz Ahmed Khan <mdriazahmed.khan@jacks.sdstate.edu>\n# Repository: CRAN\n# Date/Publication: 2019-01-30 23:23:35 UTC\n",
 "req":{
  "__set__":true,
  "elements":[
   "r-base"
  ]
 },
 "requirements":{
  "build":{
   "__set__":true,
   "elements":[]
  },
  "host":{
   "__set__":true,
   "elements":[
    "r-base"
   ]
  },
  "run":{
   "__set__":true,
   "elements":[
    "r-base"
   ]
  },
  "test":{
   "__set__":true,
   "elements":[]
  }
 },
 "smithy_version":"No azure token. Create a token and\nput it in ~/.conda-smithy/azure.token\n3.7.1\n",
 "strong_exports":false,
 "total_requirements":{
  "build":{
   "__set__":true,
   "elements":[]
  },
  "host":{
   "__set__":true,
   "elements":[
    "r-base"
   ]
  },
  "run":{
   "__set__":true,
   "elements":[
    "r-base"
   ]
  },
  "test":{
   "__set__":true,
   "elements":[]
  }
 },
 "url":[
  "https://cran.r-project.org/src/contrib/ROCit_1.1.1.tar.gz",
  "https://cran.r-project.org/src/contrib/Archive/ROCit/ROCit_1.1.1.tar.gz",
  "https://cran.r-project.org/src/contrib/ROCit_1.1.1.tar.gz",
  "https://cran.r-project.org/src/contrib/Archive/ROCit/ROCit_1.1.1.tar.gz",
  "https://cran.r-project.org/src/contrib/ROCit_1.1.1.tar.gz",
  "https://cran.r-project.org/src/contrib/Archive/ROCit/ROCit_1.1.1.tar.gz"
 ],
 "version":"1.1.1"
}