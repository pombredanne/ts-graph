{
 "PRed":[
  {
   "PR":{
    "__lazy_json__":"pr_json/371820267.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"Version",
    "migrator_version":0,
    "version":"1.10.0"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/413549470.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"MigrationYaml",
    "migrator_object_version":2,
    "migrator_version":0,
    "name":"r400"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  }
 ],
 "bad":false,
 "conda-forge.yml":{
  "bot":{
   "automerge":true
  }
 },
 "feedstock_name":"r-vcfr",
 "hash_type":"sha256",
 "meta_yaml":{
  "about":{
   "home":"https://github.com/knausb/vcfR, https://knausb.github.io/vcfR_documentation/",
   "license":"GPL-3",
   "license_family":"GPL3",
   "license_file":[
    "/lib/R/share/licenses/GPL-3",
    "/lib/R/share/licenses/GPL-3",
    "/lib/R/share/licenses/GPL-3"
   ],
   "summary":"Facilitates easy manipulation of variant call format (VCF) data. Functions are provided to rapidly read from and write to VCF files. Once VCF data is read into R a parser function extracts matrices of data. This information can then be used for quality control or other purposes. Additional functions provide visualization of genomic data. Once processing is complete data may be written to a VCF file (*.vcf.gz). It also may be converted into other popular R objects (e.g., genlight, DNAbin). VcfR provides a link between VCF data and familiar R software."
  },
  "build":{
   "merge_build_host":true,
   "number":"1",
   "rpaths":[
    "lib/R/lib/",
    "lib/",
    "lib/R/lib/",
    "lib/",
    "lib/R/lib/",
    "lib/"
   ]
  },
  "extra":{
   "recipe-maintainers":[
    "conda-forge/r",
    "conda-forge/r",
    "conda-forge/r"
   ]
  },
  "package":{
   "name":"r-vcfr",
   "version":"1.10.0"
  },
  "requirements":{
   "build":[
    "m2w64_c_compiler_stub",
    "m2w64_cxx_compiler_stub",
    "filesystem",
    "make",
    "sed",
    "coreutils",
    "zip",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "make",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "make"
   ],
   "host":[
    "r-base",
    "r-rcpp",
    "r-ape",
    "r-dplyr",
    "r-magrittr",
    "r-memuse",
    "r-pinfsc50",
    "r-stringr",
    "r-tibble",
    "r-vegan",
    "r-viridislite",
    "zlib",
    "r-base",
    "r-rcpp",
    "r-ape",
    "r-dplyr",
    "r-magrittr",
    "r-memuse",
    "r-pinfsc50",
    "r-stringr",
    "r-tibble",
    "r-vegan",
    "r-viridislite",
    "zlib",
    "r-base",
    "r-rcpp",
    "r-ape",
    "r-dplyr",
    "r-magrittr",
    "r-memuse",
    "r-pinfsc50",
    "r-stringr",
    "r-tibble",
    "r-vegan",
    "r-viridislite",
    "zlib"
   ],
   "run":[
    "r-base",
    "gcc-libs",
    "r-rcpp",
    "r-ape",
    "r-dplyr",
    "r-magrittr",
    "r-memuse",
    "r-pinfsc50",
    "r-stringr",
    "r-tibble",
    "r-vegan",
    "r-viridislite",
    "zlib",
    "r-base",
    "r-rcpp",
    "r-ape",
    "r-dplyr",
    "r-magrittr",
    "r-memuse",
    "r-pinfsc50",
    "r-stringr",
    "r-tibble",
    "r-vegan",
    "r-viridislite",
    "zlib",
    "r-base",
    "r-rcpp",
    "r-ape",
    "r-dplyr",
    "r-magrittr",
    "r-memuse",
    "r-pinfsc50",
    "r-stringr",
    "r-tibble",
    "r-vegan",
    "r-viridislite",
    "zlib"
   ]
  },
  "source":{
   "sha256":"9e19c8b23c981b61320aa275821f9accae8738bca775175b1201fcc30479ae8d",
   "url":[
    "https://cran.r-project.org/src/contrib/vcfR_1.10.0.tar.gz",
    "https://cran.r-project.org/src/contrib/Archive/vcfR/vcfR_1.10.0.tar.gz",
    "https://cran.r-project.org/src/contrib/vcfR_1.10.0.tar.gz",
    "https://cran.r-project.org/src/contrib/Archive/vcfR/vcfR_1.10.0.tar.gz",
    "https://cran.r-project.org/src/contrib/vcfR_1.10.0.tar.gz",
    "https://cran.r-project.org/src/contrib/Archive/vcfR/vcfR_1.10.0.tar.gz"
   ]
  },
  "test":{
   "commands":[
    "\"%R%\" -e \"library('vcfR')\"",
    "$R -e \"library('vcfR')\"",
    "$R -e \"library('vcfR')\""
   ]
  }
 },
 "name":"r-vcfr",
 "new_version":"1.10.0",
 "pinning_version":"2020.05.04.19.59.17",
 "raw_meta_yaml":"{% set version = \"1.10.0\" %}\n{% set posix = 'm2-' if win else '' %}\n{% set native = 'm2w64-' if win else '' %}\n\npackage:\n  name: r-vcfr\n  version: {{ version|replace(\"-\", \"_\") }}\n\nsource:\n  url:\n    - {{ cran_mirror }}/src/contrib/vcfR_{{ version }}.tar.gz\n    - {{ cran_mirror }}/src/contrib/Archive/vcfR/vcfR_{{ version }}.tar.gz\n  sha256: 9e19c8b23c981b61320aa275821f9accae8738bca775175b1201fcc30479ae8d\n\nbuild:\n  merge_build_host: True  # [win]\n  number: 1\n  rpaths:\n    - lib/R/lib/\n    - lib/\n\nrequirements:\n  build:\n    - {{ compiler('c') }}              # [not win]\n    - {{ compiler('m2w64_c') }}        # [win]\n    - {{ compiler('cxx') }}            # [not win]\n    - {{ compiler('m2w64_cxx') }}      # [win]\n    - {{ posix }}filesystem        # [win]\n    - {{ posix }}make\n    - {{ posix }}sed               # [win]\n    - {{ posix }}coreutils         # [win]\n    - {{ posix }}zip               # [win]\n  host:\n    - r-base\n    - r-rcpp\n    - r-ape\n    - r-dplyr\n    - r-magrittr\n    - r-memuse\n    - r-pinfsc50\n    - r-stringr\n    - r-tibble\n    - r-vegan\n    - r-viridislite\n    - zlib\n  run:\n    - r-base\n    - {{ native }}gcc-libs         # [win]\n    - r-rcpp\n    - r-ape\n    - r-dplyr\n    - r-magrittr\n    - r-memuse\n    - r-pinfsc50\n    - r-stringr\n    - r-tibble\n    - r-vegan\n    - r-viridislite\n    - zlib\n\ntest:\n  commands:\n    - $R -e \"library('vcfR')\"           # [not win]\n    - \"\\\"%R%\\\" -e \\\"library('vcfR')\\\"\"  # [win]\n\nabout:\n  home: https://github.com/knausb/vcfR, https://knausb.github.io/vcfR_documentation/\n  license: GPL-3\n  summary: Facilitates easy manipulation of variant call format (VCF) data. Functions are provided\n    to rapidly read from and write to VCF files. Once VCF data is read into R a parser\n    function extracts matrices of data. This information can then be used for quality\n    control or other purposes. Additional functions provide visualization of genomic\n    data. Once processing is complete data may be written to a VCF file (*.vcf.gz).\n    It also may be converted into other popular R objects (e.g., genlight, DNAbin).\n    VcfR provides a link between VCF data and familiar R software.\n  license_family: GPL3\n  license_file:\n    - '{{ environ[\"PREFIX\"] }}/lib/R/share/licenses/GPL-3'\n\nextra:\n  recipe-maintainers:\n    - conda-forge/r\n\n# Package: vcfR\n# Title: Manipulate and Visualize VCF Data\n# Description: Facilitates easy manipulation of variant call format (VCF) data. Functions are provided to rapidly read from and write to VCF files. Once VCF data is read into R a parser function extracts matrices of data. This information can then be used for quality control or other purposes. Additional functions provide visualization of genomic data. Once processing is complete data may be written to a VCF file (*.vcf.gz). It also may be converted into other popular R objects (e.g., genlight, DNAbin). VcfR provides a link between VCF data and familiar R software.\n# Version: 1.9.0\n# Authors@R: c( person(c(\"Brian\", \"J.\"), \"Knaus\", role = c(\"cre\", \"aut\"), email = \"briank.lists@gmail.com\", comment = c(ORCID = \"0000-0003-1665-4343\")), person(c(\"Niklaus\", \"J.\"), \"Grunwald\", role = \"aut\", email = \"grunwaln@science.oregonstate.edu\", comment = c(ORCID = \"0000-0003-1656-7602\")), person(c(\"Eric\", \"C.\"), \"Anderson\", role = \"ctb\", email = \"eric.anderson@noaa.gov\"), person(c(\"David\", \"J.\"), \"Winter\", role = \"ctb\", email = \"david.winter@gmail.com\"), person(c(\"Zhian\", \"N.\"), \"Kamvar\", role = \"ctb\", email = \"zkamvar@gmail.com\", comment = c(ORCID = \"0000-0003-1458-7108\")), person(c(\"Javier\", \"F.\"), \"Tabima\", role = \"ctb\", email = \"caifaz01@gmail.com\", comment = c(ORCID = \"0000-0002-3603-2691\")) )\n# Maintainer: Brian J. Knaus <briank.lists@gmail.com>\n# URL: https://github.com/knausb/vcfR, https://knausb.github.io/vcfR_documentation/\n# Depends: R (>= 3.0.1)\n# LinkingTo: Rcpp\n# Imports: ape, dplyr, graphics, grDevices, magrittr, memuse, methods, pinfsc50, Rcpp, stats, stringr, tibble, utils, vegan, viridisLite\n# Suggests: adegenet, ggplot2, knitr, poppr, reshape2, rmarkdown, scales, testthat, tidyr\n# VignetteBuilder: knitr\n# License: GPL-3\n# RoxygenNote: 7.0.2\n# Encoding: UTF-8\n# NeedsCompilation: yes\n# Packaged: 2020-01-09 00:48:18 UTC; knausb\n# Author: Brian J. Knaus [cre, aut] (<https://orcid.org/0000-0003-1665-4343>), Niklaus J. Grunwald [aut] (<https://orcid.org/0000-0003-1656-7602>), Eric C. Anderson [ctb], David J. Winter [ctb], Zhian N. Kamvar [ctb] (<https://orcid.org/0000-0003-1458-7108>), Javier F. Tabima [ctb] (<https://orcid.org/0000-0002-3603-2691>)\n# Repository: CRAN\n# Date/Publication: 2020-01-10 10:50:03 UTC\n",
 "req":{
  "__set__":true,
  "elements":[
   "c_compiler_stub",
   "coreutils",
   "cxx_compiler_stub",
   "filesystem",
   "gcc-libs",
   "m2w64_c_compiler_stub",
   "m2w64_cxx_compiler_stub",
   "make",
   "r-ape",
   "r-base",
   "r-dplyr",
   "r-magrittr",
   "r-memuse",
   "r-pinfsc50",
   "r-rcpp",
   "r-stringr",
   "r-tibble",
   "r-vegan",
   "r-viridislite",
   "sed",
   "zip",
   "zlib"
  ]
 },
 "requirements":{
  "build":{
   "__set__":true,
   "elements":[
    "c_compiler_stub",
    "coreutils",
    "cxx_compiler_stub",
    "filesystem",
    "m2w64_c_compiler_stub",
    "m2w64_cxx_compiler_stub",
    "make",
    "sed",
    "zip"
   ]
  },
  "host":{
   "__set__":true,
   "elements":[
    "r-ape",
    "r-base",
    "r-dplyr",
    "r-magrittr",
    "r-memuse",
    "r-pinfsc50",
    "r-rcpp",
    "r-stringr",
    "r-tibble",
    "r-vegan",
    "r-viridislite",
    "zlib"
   ]
  },
  "run":{
   "__set__":true,
   "elements":[
    "gcc-libs",
    "r-ape",
    "r-base",
    "r-dplyr",
    "r-magrittr",
    "r-memuse",
    "r-pinfsc50",
    "r-rcpp",
    "r-stringr",
    "r-tibble",
    "r-vegan",
    "r-viridislite",
    "zlib"
   ]
  },
  "test":{
   "__set__":true,
   "elements":[]
  }
 },
 "smithy_version":"No azure token. Create a token and\nput it in ~/.conda-smithy/azure.token\n3.7.0\n",
 "strong_exports":false,
 "total_requirements":{
  "build":{
   "__set__":true,
   "elements":[
    "c_compiler_stub",
    "coreutils",
    "cxx_compiler_stub",
    "filesystem",
    "m2w64_c_compiler_stub",
    "m2w64_cxx_compiler_stub",
    "make",
    "sed",
    "zip"
   ]
  },
  "host":{
   "__set__":true,
   "elements":[
    "r-ape",
    "r-base",
    "r-dplyr",
    "r-magrittr",
    "r-memuse",
    "r-pinfsc50",
    "r-rcpp",
    "r-stringr",
    "r-tibble",
    "r-vegan",
    "r-viridislite",
    "zlib"
   ]
  },
  "run":{
   "__set__":true,
   "elements":[
    "gcc-libs",
    "r-ape",
    "r-base",
    "r-dplyr",
    "r-magrittr",
    "r-memuse",
    "r-pinfsc50",
    "r-rcpp",
    "r-stringr",
    "r-tibble",
    "r-vegan",
    "r-viridislite",
    "zlib"
   ]
  },
  "test":{
   "__set__":true,
   "elements":[]
  }
 },
 "url":[
  "https://cran.r-project.org/src/contrib/vcfR_1.9.0.tar.gz",
  "https://cran.r-project.org/src/contrib/Archive/vcfR/vcfR_1.9.0.tar.gz",
  "https://cran.r-project.org/src/contrib/vcfR_1.9.0.tar.gz",
  "https://cran.r-project.org/src/contrib/Archive/vcfR/vcfR_1.9.0.tar.gz",
  "https://cran.r-project.org/src/contrib/vcfR_1.9.0.tar.gz",
  "https://cran.r-project.org/src/contrib/Archive/vcfR/vcfR_1.9.0.tar.gz"
 ],
 "version":"1.10.0"
}