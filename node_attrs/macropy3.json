{
 "bad":false,
 "conda-forge.yml":{},
 "feedstock_name":"macropy3",
 "hash_type":"sha256",
 "meta_yaml":{
  "about":{
   "description":"MacroPy is an implementation of Syntactic Macros in the Python Programming\nLanguage. MacroPy provides a mechanism for user-defined functions (macros)\nto perform transformations on the abstract syntax tree (AST) of a Python\nprogram at import time. This is an easy way to enhance the semantics of a\nPython program in ways which are otherwise impossible, for example providing\nan extremely concise way of declaring classes.\n",
   "dev_url":"https://github.com/simplejson/simplejson",
   "doc_url":"https://macropy3.readthedocs.io/",
   "home":"https://github.com/lihaoyi/macropy",
   "license":"MIT",
   "license_family":"MIT",
   "license_file":"LICENSE.txt",
   "summary":"Macros in Python: quasiquotes, case classes, LINQ and more"
  },
  "build":{
   "noarch":"python",
   "number":"0",
   "script":" -m pip install . -vv"
  },
  "extra":{
   "recipe-maintainers":[
    "hoechenberger",
    "hoechenberger",
    "hoechenberger"
   ]
  },
  "package":{
   "name":"macropy3",
   "version":"1.1.0b2"
  },
  "requirements":{
   "host":[
    "python >=3",
    "pip",
    "python >=3",
    "pip",
    "python >=3",
    "pip"
   ],
   "run":[
    "python >=3",
    "python >=3",
    "python >=3"
   ]
  },
  "source":{
   "sha256":"7a8eae9886ea4a5df4fcf4f71f53165b82becfc7fc87d9c1c8cd2196f22d9408",
   "url":"https://pypi.io/packages/source/m/macropy3/macropy3-1.1.0b2.tar.gz"
  },
  "test":{
   "imports":[
    "macropy",
    "macropy.activate",
    "macropy",
    "macropy.activate",
    "macropy",
    "macropy.activate"
   ]
  }
 },
 "name":"macropy3",
 "new_version":false,
 "raw_meta_yaml":"{% set name = \"macropy3\" %}\n{% set version = \"1.1.0b2\" %}\n\npackage:\n  name: {{ name|lower }}\n  version: {{ version }}\n\nsource:\n  url: https://pypi.io/packages/source/{{ name[0] }}/{{ name }}/{{ name }}-{{ version }}.tar.gz\n  sha256: 7a8eae9886ea4a5df4fcf4f71f53165b82becfc7fc87d9c1c8cd2196f22d9408\n\nbuild:\n  noarch: python\n  number: 0\n  script: \"{{ PYTHON }} -m pip install . -vv\"\n\nrequirements:\n  host:\n    - python >=3\n    - pip\n  run:\n    - python >=3\n\ntest:\n  imports:\n    - macropy\n    - macropy.activate\n\nabout:\n  home: https://github.com/lihaoyi/macropy\n  license: MIT\n  license_family: MIT\n  license_file: LICENSE.txt\n  summary: 'Macros in Python: quasiquotes, case classes, LINQ and more'\n  description: |\n    MacroPy is an implementation of Syntactic Macros in the Python Programming\n    Language. MacroPy provides a mechanism for user-defined functions (macros)\n    to perform transformations on the abstract syntax tree (AST) of a Python\n    program at import time. This is an easy way to enhance the semantics of a\n    Python program in ways which are otherwise impossible, for example providing\n    an extremely concise way of declaring classes.\n  doc_url: https://macropy3.readthedocs.io/\n  dev_url: https://github.com/simplejson/simplejson\n\nextra:\n  recipe-maintainers:\n    - hoechenberger\n",
 "req":{
  "__set__":true,
  "elements":[
   "pip",
   "python"
  ]
 },
 "requirements":{
  "build":{
   "__set__":true,
   "elements":[]
  },
  "host":{
   "__set__":true,
   "elements":[
    "pip",
    "python"
   ]
  },
  "run":{
   "__set__":true,
   "elements":[
    "python"
   ]
  },
  "test":{
   "__set__":true,
   "elements":[]
  }
 },
 "strong_exports":false,
 "total_requirements":{
  "build":{
   "__set__":true,
   "elements":[]
  },
  "host":{
   "__set__":true,
   "elements":[
    "pip",
    "python >=3"
   ]
  },
  "run":{
   "__set__":true,
   "elements":[
    "python >=3"
   ]
  },
  "test":{
   "__set__":true,
   "elements":[]
  }
 },
 "url":"https://pypi.io/packages/source/m/macropy3/macropy3-1.1.0b2.tar.gz",
 "version":"1.1.0b2"
}