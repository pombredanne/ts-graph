{
 "PRed":[
  {
   "PR":{
    "__lazy_json__":"pr_json/197275687.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"Compiler",
    "migrator_version":0
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/228756172.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"CompilerRebuild",
    "migrator_version":1,
    "name":"Python 3.7, GCC 7, R 3.5.1, openBLAS 0.3.2"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/334032307.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"ArchRebuild",
    "migrator_version":1,
    "name":"aarch64 and ppc64le addition"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  }
 ],
 "bad":false,
 "conda-forge.yml":{
  "compiler_stack":"comp7",
  "max_py_ver":"37",
  "max_r_ver":"35",
  "provider":{
   "linux_aarch64":"default",
   "linux_ppc64le":"default",
   "win":"azure"
  }
 },
 "feedstock_name":"metis",
 "hash_type":"sha256",
 "meta_yaml":{
  "about":{
   "description":"METIS is a set of serial programs for partitioning graphs, partitioning\nfinite element meshes, and producing fill reducing orderings for sparse\nmatrices. The algorithms implemented in METIS are based on the multilevel\nrecursive-bisection, multilevel k-way, and multi-constraint partitioning\nschemes developed in our lab.\n",
   "doc_url":"http://glaros.dtc.umn.edu/gkhome/metis/metis/faq",
   "home":"http://glaros.dtc.umn.edu/gkhome/metis/metis/overview",
   "license":"Apache 2.0",
   "license_file":"LICENSE.txt",
   "summary":"METIS - Serial Graph Partitioning and Fill-reducing Matrix Ordering"
  },
  "build":{
   "binary_relocation":true,
   "ignore_run_exports":[
    "cxx_compiler_stub",
    "cxx_compiler_stub",
    "cxx_compiler_stub"
   ],
   "number":"1005",
   "run_exports":[
    "metis",
    "metis",
    "metis"
   ]
  },
  "extra":{
   "recipe-maintainers":[
    "basnijholt",
    "SylvainCorlay",
    "basnijholt",
    "SylvainCorlay",
    "basnijholt",
    "SylvainCorlay"
   ]
  },
  "package":{
   "name":"metis",
   "version":"5.1.0"
  },
  "requirements":{
   "build":[
    "cmake",
    "make",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cmake",
    "make",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cmake",
    "make",
    "c_compiler_stub",
    "cxx_compiler_stub"
   ],
   "host":null,
   "run":null
  },
  "source":{
   "fn":"metis-5.1.0.tar.gz",
   "patches":[
    "vc14.patch",
    "vc14.patch",
    "vc14.patch"
   ],
   "sha256":"76faebe03f6c963127dbb73c13eab58c9a3faeae48779f049066a21c087c5db2",
   "url":"http://glaros.dtc.umn.edu/gkhome/fetch/sw/metis/metis-5.1.0.tar.gz"
  },
  "test":{
   "commands":[
    "if not exist \"%LIBRARY_LIB%\\\\metis.lib\" exit 1",
    "if not exist \"%LIBRARY_BIN%\\\\graphchk.exe\" exit 1",
    "if not exist \"%LIBRARY_BIN%\\\\cmpfillin.exe\" exit 1",
    "if not exist \"%LIBRARY_BIN%\\\\mpmetis.exe\" exit 1",
    "if not exist \"%LIBRARY_BIN%\\\\gpmetis.exe\" exit 1",
    "if not exist \"%LIBRARY_BIN%\\\\ndmetis.exe\" exit 1",
    "if not exist \"%LIBRARY_BIN%\\\\gpmetis.exe\" exit 1",
    "if not exist \"%LIBRARY_BIN%\\\\m2gmetis.exe\" exit 1",
    "if not exist \"%LIBRARY_INC%\\\\metis.h\" exit 1",
    "graphchk",
    "cmpfillin -h",
    "mpmetis -h",
    "gpmetis -h",
    "ndmetis -h",
    "gpmetis -h",
    "m2gmetis -h",
    "test -f $PREFIX/include/metis.h",
    "test -f $PREFIX/lib/libmetis.dylib",
    "conda inspect linkages -p ${PREFIX} metis",
    "conda inspect objects -p ${PREFIX} metis",
    "graphchk",
    "cmpfillin -h",
    "mpmetis -h",
    "gpmetis -h",
    "ndmetis -h",
    "gpmetis -h",
    "m2gmetis -h",
    "test -f $PREFIX/include/metis.h",
    "test -f $PREFIX/lib/libmetis.so",
    "conda inspect linkages -p ${PREFIX} metis"
   ],
   "source_files":[
    "graphs",
    "graphs",
    "graphs"
   ]
  }
 },
 "name":"metis",
 "new_version":false,
 "pinning_version":"2019.10.28",
 "raw_meta_yaml":"{% set name = \"metis\" %}\n{% set version = \"5.1.0\" %}\n\npackage:\n  name: {{ name|lower }}\n  version: {{ version }}\n\nsource:\n  fn: {{ name }}-{{ version }}.tar.gz\n  url: http://glaros.dtc.umn.edu/gkhome/fetch/sw/metis/{{ name }}-{{ version }}.tar.gz\n  sha256: 76faebe03f6c963127dbb73c13eab58c9a3faeae48779f049066a21c087c5db2\n  patches:\n    - vc14.patch\n\n# While Metis is a pure C library, it is built with cmake, which assumes C++\n# by defaults and attempts to locate the C++ compiler. Hence the recipe has a\n# build dependency on {{ compiler('cxx') }}. The `ignore_run_exports` entry is\n# added so that the package does not depend on the C++ runtime due to the\n# dependency to the C++ compiler.\n#\n# Another fix to this would be to have metis' cmake specify `project(METIS C)`\n# instead of `project(METIS)`.\n\nbuild:\n  number: 1005\n  binary_relocation: true\n  ignore_run_exports:        # Cf comment above\n    - {{ compiler('cxx') }}\n  run_exports:\n    - {{ pin_subpackage('metis', max_pin='x.x') }}\n\nrequirements:\n  build:\n    - cmake\n    - make\n    - {{ compiler('c') }}\n    - {{ compiler('cxx') }}  # Cf comment above\n  host:\n  run:\n\ntest:\n  commands:\n    - graphchk  # [unix]\n    - cmpfillin -h  # [unix]\n    - mpmetis -h  # [unix]\n    - gpmetis -h  # [unix]\n    - ndmetis -h  # [unix]\n    - gpmetis -h  # [unix]\n    - m2gmetis -h  # [unix]\n    - test -f $PREFIX/include/metis.h  # [unix]\n    - test -f $PREFIX/lib/libmetis.dylib  # [osx]\n    - test -f $PREFIX/lib/libmetis.so  # [linux]\n    - if not exist \"%LIBRARY_LIB%\\\\metis.lib\" exit 1  # [win]\n    - if not exist \"%LIBRARY_BIN%\\\\graphchk.exe\" exit 1  # [win]\n    - if not exist \"%LIBRARY_BIN%\\\\cmpfillin.exe\" exit 1  # [win]\n    - if not exist \"%LIBRARY_BIN%\\\\mpmetis.exe\" exit 1  # [win]\n    - if not exist \"%LIBRARY_BIN%\\\\gpmetis.exe\" exit 1  # [win]\n    - if not exist \"%LIBRARY_BIN%\\\\ndmetis.exe\" exit 1  # [win]\n    - if not exist \"%LIBRARY_BIN%\\\\gpmetis.exe\" exit 1  # [win]\n    - if not exist \"%LIBRARY_BIN%\\\\m2gmetis.exe\" exit 1  # [win]\n    - if not exist \"%LIBRARY_INC%\\\\metis.h\" exit 1  # [win]\n    - conda inspect linkages -p ${PREFIX} metis  # [not win]\n    - conda inspect objects -p ${PREFIX} metis  # [osx]\n  source_files:\n    - graphs\n\nabout:\n  home: http://glaros.dtc.umn.edu/gkhome/metis/metis/overview\n  license: Apache 2.0\n  license_file: LICENSE.txt\n  summary: 'METIS - Serial Graph Partitioning and Fill-reducing Matrix Ordering'\n  description: |\n    METIS is a set of serial programs for partitioning graphs, partitioning\n    finite element meshes, and producing fill reducing orderings for sparse\n    matrices. The algorithms implemented in METIS are based on the multilevel\n    recursive-bisection, multilevel k-way, and multi-constraint partitioning\n    schemes developed in our lab.\n  doc_url: http://glaros.dtc.umn.edu/gkhome/metis/metis/faq\n\nextra:\n  recipe-maintainers:\n    - basnijholt\n    - SylvainCorlay\n",
 "req":{
  "__set__":true,
  "elements":[
   "c_compiler_stub",
   "cmake",
   "cxx_compiler_stub",
   "make"
  ]
 },
 "requirements":{
  "build":{
   "__set__":true,
   "elements":[
    "c_compiler_stub",
    "cmake",
    "cxx_compiler_stub",
    "make"
   ]
  },
  "host":{
   "__set__":true,
   "elements":[]
  },
  "run":{
   "__set__":true,
   "elements":[]
  },
  "test":{
   "__set__":true,
   "elements":[]
  }
 },
 "smithy_version":"3.6.0",
 "strong_exports":false,
 "total_requirements":{
  "build":{
   "__set__":true,
   "elements":[
    "c_compiler_stub",
    "cmake",
    "cxx_compiler_stub",
    "make"
   ]
  },
  "host":{
   "__set__":true,
   "elements":[]
  },
  "run":{
   "__set__":true,
   "elements":[]
  },
  "test":{
   "__set__":true,
   "elements":[]
  }
 },
 "url":"http://glaros.dtc.umn.edu/gkhome/fetch/sw/metis/metis-5.1.0.tar.gz",
 "version":"5.1.0"
}