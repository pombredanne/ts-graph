{
 "PRed":[
  {
   "PR":{
    "__lazy_json__":"pr_json/196933044.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"Compiler",
    "migrator_version":0
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/207061157.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"Version",
    "migrator_version":0,
    "version":"4.13.1"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/223727019.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"CompilerRebuild",
    "migrator_version":1,
    "name":"Python 3.7, GCC 7, R 3.5.1, openBLAS 0.3.2"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/257251109.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"Version",
    "migrator_version":0,
    "version":"4.13.2"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/281272858.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"Version",
    "migrator_version":0,
    "version":"5.0.0"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/285678271.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"Rebuild",
    "migrator_version":0,
    "name":"hdf5-1.10.5"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/300458724.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"Version",
    "migrator_version":0,
    "version":"5.0.1"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/342769979.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"MigrationYaml",
    "migrator_object_version":1,
    "migrator_version":0,
    "name":"libtiff-4.1.0"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/404276786.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"MigrationYaml",
    "migrator_object_version":1,
    "migrator_version":0,
    "name":"hdf51106"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/408948706.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"Version",
    "migrator_version":0,
    "version":"5.1.0"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  }
 ],
 "bad":false,
 "conda-forge.yml":{
  "provider":{
   "win":"azure"
  }
 },
 "feedstock_name":"libitk",
 "hash_type":"sha256",
 "meta_yaml":{
  "about":{
   "home":"http://www.itk.org",
   "license":"Apache-2.0",
   "license_file":[
    "LICENSE",
    "NOTICE",
    "LICENSE",
    "NOTICE",
    "LICENSE",
    "NOTICE"
   ],
   "summary":"Runtime libraries and header files for the Insight Toolkit for segmentation and registration."
  },
  "build":{
   "number":"0",
   "skip":true
  },
  "extra":{
   "recipe-maintainers":[
    "blowekamp",
    "bluescarni",
    "blowekamp",
    "bluescarni",
    "blowekamp",
    "bluescarni"
   ]
  },
  "outputs":[
   {
    "name":"libitk",
    "requirements":{
     "run":[
      "fftw",
      "jpeg",
      "libtiff",
      "libpng",
      "eigen"
     ]
    },
    "script":"libitk_install.bat",
    "test":{
     "commands":[
      "if not exist %LIBRARY_INC%\\\\ITK* exit 1",
      "itkTestDriver -- echo \"Runtime ITK OK\"",
      "itkTestDriver --no-process --compare-MD5 ITK-JPEG.jpg 959e1682d19026fc62cfbdc140df31da"
     ],
     "files":[
      "ITK-JPEG.jpg"
     ]
    }
   },
   {
    "name":"libitk-devel",
    "requirements":{
     "build":[
      "cmake"
     ],
     "host":[
      "libitk"
     ],
     "run":[
      "libitk"
     ]
    },
    "script":"libitk-devel_install.bat",
    "test":{
     "commands":[
      "cmake -G Ninja -D \"CMAKE_SYSTEM_PREFIX_PATH:FILEPATH=%PREFIX%\" example"
     ],
     "files":[
      "example"
     ],
     "requires":[
      "cmake",
      "c_compiler_stub",
      "cxx_compiler_stub",
      "ninja"
     ]
    }
   },
   {
    "name":"libitk",
    "requirements":{
     "run":[
      "expat",
      "fftw",
      "hdf5",
      "jpeg",
      "libtiff",
      "libpng",
      "eigen",
      "zlib"
     ]
    },
    "script":"libitk_install.sh",
    "test":{
     "commands":[
      "test -d $PREFIX/include/ITK*",
      "itkTestDriver -- echo \"Runtime ITK OK\"",
      "itkTestDriver --no-process --compare-MD5 ITK-JPEG.jpg 959e1682d19026fc62cfbdc140df31da"
     ],
     "files":[
      "ITK-JPEG.jpg"
     ]
    }
   },
   {
    "name":"libitk-devel",
    "requirements":{
     "build":[
      "cmake"
     ],
     "host":[
      "libitk"
     ],
     "run":[
      "libitk"
     ]
    },
    "script":"libitk-devel_install.sh",
    "test":{
     "commands":[
      "cmake -D \"CMAKE_SYSTEM_PREFIX_PATH:FILEPATH=${PREFIX}\" ./example",
      "cmake --build . --config Release"
     ],
     "files":[
      "example"
     ],
     "requires":[
      "cmake",
      "c_compiler_stub",
      "cxx_compiler_stub"
     ]
    }
   },
   {
    "name":"libitk",
    "requirements":{
     "run":[
      "expat",
      "fftw",
      "hdf5",
      "jpeg",
      "libtiff",
      "libpng",
      "eigen",
      "zlib"
     ]
    },
    "script":"libitk_install.sh",
    "test":{
     "commands":[
      "test -d $PREFIX/include/ITK*",
      "itkTestDriver -- echo \"Runtime ITK OK\"",
      "itkTestDriver --no-process --compare-MD5 ITK-JPEG.jpg 959e1682d19026fc62cfbdc140df31da"
     ],
     "files":[
      "ITK-JPEG.jpg"
     ]
    }
   },
   {
    "name":"libitk-devel",
    "requirements":{
     "build":[
      "cmake"
     ],
     "host":[
      "libitk"
     ],
     "run":[
      "libitk"
     ]
    },
    "script":"libitk-devel_install.sh",
    "test":{
     "commands":[
      "cmake -D \"CMAKE_SYSTEM_PREFIX_PATH:FILEPATH=${PREFIX}\" ./example",
      "cmake --build . --config Release"
     ],
     "files":[
      "example"
     ],
     "requires":[
      "cmake",
      "c_compiler_stub",
      "cxx_compiler_stub"
     ]
    }
   }
  ],
  "package":{
   "name":"libitk",
   "version":"5.1.0"
  },
  "requirements":{
   "build":[
    "cmake    >=3.3",
    "ninja",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cmake    >=3.3",
    "ninja",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cmake    >=3.3",
    "ninja",
    "c_compiler_stub",
    "cxx_compiler_stub"
   ],
   "host":[
    "fftw",
    "jpeg",
    "libtiff",
    "libpng",
    "eigen",
    "expat",
    "fftw",
    "hdf5",
    "jpeg",
    "libtiff",
    "libpng",
    "eigen",
    "zlib",
    "expat",
    "fftw",
    "hdf5",
    "jpeg",
    "libtiff",
    "libpng",
    "eigen",
    "zlib"
   ]
  },
  "source":{
   "sha256":"7cd0849f8f6769de8c5e90dd4de019a2c4b447d907b5d2193a95a3ec6267e76d",
   "url":"https://github.com/InsightSoftwareConsortium/ITK/archive/v5.1.0.tar.gz"
  }
 },
 "name":"libitk",
 "new_version":"5.1.0",
 "new_version_attempts":{
  "5.1.0":1
 },
 "new_version_errors":{},
 "outputs_names":[
  "libitk",
  "libitk-devel"
 ],
 "pinning_version":"2020.04.24.22.56.04",
 "raw_meta_yaml":"{% set version = \"5.1.0\" %}\n\npackage:\n  name: libitk\n  version: {{ version }}\n\nsource:\n  url: https://github.com/InsightSoftwareConsortium/ITK/archive/v{{ version }}.tar.gz\n  sha256: 7cd0849f8f6769de8c5e90dd4de019a2c4b447d907b5d2193a95a3ec6267e76d\n\nbuild:\n  number: 0\n  skip: true  # [win and vc<14]\n\nrequirements:\n  build:\n    - cmake    >=3.3\n    - ninja\n    - {{ compiler('c') }}\n    - {{ compiler('cxx') }}\n  host:\n    - expat                     # [not win]\n    - fftw\n    - hdf5                      # [not win]\n    - jpeg\n    - libtiff\n    - libpng\n    - eigen\n    - zlib                      # [not win]\n\noutputs:\n  - name: libitk\n    script: libitk_install.sh  # [not win]\n    script: libitk_install.bat  # [win]\n    requirements:\n      run:\n        - expat                     # [not win]\n        - fftw\n        - hdf5                      # [not win]\n        - jpeg\n        - libtiff\n        - libpng\n        - eigen\n        - zlib                      # [not win]\n\n    test:\n      files:\n        - ITK-JPEG.jpg\n      commands:\n        - test -d $PREFIX/include/ITK*                        # [not win]\n        - if not exist %LIBRARY_INC%\\\\ITK* exit 1             # [win]\n        - itkTestDriver -- echo \"Runtime ITK OK\"\n        - itkTestDriver --no-process --compare-MD5 ITK-JPEG.jpg 959e1682d19026fc62cfbdc140df31da\n  - name: libitk-devel\n    script: libitk-devel_install.sh  # [not win]\n    script: libitk-devel_install.bat  # [win]\n    requirements:\n      build:\n        - cmake\n      host:\n        - {{ pin_subpackage(\"libitk\", exact=True) }}\n      run:\n        - {{ pin_subpackage(\"libitk\", exact=True) }}\n\n    test:\n      requires:\n        - cmake\n        - {{ compiler(\"c\") }}\n        - {{ compiler(\"cxx\") }}\n        - ninja  # [win]\n      files:\n        - example\n      commands:\n        - cmake -D \"CMAKE_SYSTEM_PREFIX_PATH:FILEPATH=${PREFIX}\" ./example  # [not win]\n        - cmake -G Ninja -D \"CMAKE_SYSTEM_PREFIX_PATH:FILEPATH=%PREFIX%\" example     # [win]\n        - cmake --build . --config Release                                  # [not win]\n\nabout:\n  home: http://www.itk.org\n  license: Apache-2.0\n  license_file:\n    - LICENSE\n    - NOTICE\n  summary: Runtime libraries and header files for the Insight Toolkit for segmentation and registration.\n\nextra:\n  recipe-maintainers:\n    - blowekamp\n    - bluescarni\n",
 "req":{
  "__set__":true,
  "elements":[
   "c_compiler_stub",
   "cmake",
   "cxx_compiler_stub",
   "eigen",
   "expat",
   "fftw",
   "hdf5",
   "jpeg",
   "libitk",
   "libpng",
   "libtiff",
   "ninja",
   "zlib"
  ]
 },
 "requirements":{
  "build":{
   "__set__":true,
   "elements":[
    "c_compiler_stub",
    "cmake",
    "cxx_compiler_stub",
    "ninja"
   ]
  },
  "host":{
   "__set__":true,
   "elements":[
    "eigen",
    "expat",
    "fftw",
    "hdf5",
    "jpeg",
    "libitk",
    "libpng",
    "libtiff",
    "zlib"
   ]
  },
  "run":{
   "__set__":true,
   "elements":[
    "eigen",
    "expat",
    "fftw",
    "hdf5",
    "jpeg",
    "libitk",
    "libpng",
    "libtiff",
    "zlib"
   ]
  },
  "test":{
   "__set__":true,
   "elements":[
    "c_compiler_stub",
    "cmake",
    "cxx_compiler_stub",
    "ninja"
   ]
  }
 },
 "smithy_version":"No azure token. Create a token and\nput it in ~/.conda-smithy/azure.token\n3.6.17",
 "strong_exports":false,
 "total_requirements":{
  "build":{
   "__set__":true,
   "elements":[
    "c_compiler_stub",
    "cmake",
    "cmake    >=3.3",
    "cxx_compiler_stub",
    "ninja"
   ]
  },
  "host":{
   "__set__":true,
   "elements":[
    "eigen",
    "expat",
    "fftw",
    "hdf5",
    "jpeg",
    "libitk",
    "libpng",
    "libtiff",
    "zlib"
   ]
  },
  "run":{
   "__set__":true,
   "elements":[
    "eigen",
    "expat",
    "fftw",
    "hdf5",
    "jpeg",
    "libitk",
    "libpng",
    "libtiff",
    "zlib"
   ]
  },
  "test":{
   "__set__":true,
   "elements":[
    "c_compiler_stub",
    "cmake",
    "cxx_compiler_stub",
    "ninja"
   ]
  }
 },
 "url":"https://github.com/InsightSoftwareConsortium/ITK/archive/v4.13.2.tar.gz",
 "version":"5.1.0"
}