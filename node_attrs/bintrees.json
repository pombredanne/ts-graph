{
 "PRed":[
  {
   "data":{
    "bot_rerun":false,
    "migrator_name":"Compiler",
    "migrator_version":0
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/220753344.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"CompilerRebuild",
    "migrator_version":1,
    "name":"Python 3.7, GCC 7, R 3.5.1, openBLAS 0.3.2"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/335880540.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"MigrationYaml",
    "migrator_object_version":1,
    "migrator_version":0,
    "name":"python38"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/358555225.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"Version",
    "migrator_version":0,
    "version":"2.1.0"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/391820442.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"MigrationYaml",
    "migrator_object_version":1,
    "migrator_version":0,
    "name":"pypy"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  }
 ],
 "bad":false,
 "conda-forge.yml":{
  "compiler_stack":"comp7",
  "max_py_ver":"37",
  "max_r_ver":"35"
 },
 "feedstock_name":"bintrees",
 "hash_type":"sha256",
 "meta_yaml":{
  "about":{
   "description":"Use sortedcontainers instead: https://pypi.python.org/pypi/sortedcontainers\nThis Classes are much slower than the built-in dict class, but all iterators/generators\nyielding data in sorted key order. Trees can be uses as drop in replacement\nfor dicts in most cases.\n",
   "dev_url":"https://github.com/mozman/bintrees",
   "doc_url":"https://pypi.python.org/pypi/bintrees/2.0.7",
   "home":"https://pypi.python.org/pypi/bintrees/2.0.7",
   "license":"MIT",
   "license_file":"LICENSE.txt",
   "summary":"Binary-, RedBlack- and AVL-Trees in Python and Cython"
  },
  "build":{
   "number":"1000",
   "script":" -m pip install . --no-deps --ignore-installed --no-cache-dir -vvv",
   "skip":true
  },
  "extra":{
   "recipe-maintainers":[
    "pvanheus",
    "pvanheus",
    "pvanheus"
   ]
  },
  "package":{
   "name":"bintrees",
   "version":"2.0.7"
  },
  "requirements":{
   "build":[
    "c_compiler_stub",
    "c_compiler_stub",
    "c_compiler_stub"
   ],
   "host":[
    "python",
    "pip",
    "cython",
    "python",
    "pip",
    "cython",
    "python",
    "pip",
    "cython"
   ],
   "run":[
    "python",
    "python",
    "python"
   ]
  },
  "source":{
   "sha256":"60675e6602cef094abcd38bf4aecc067d78ae2d5e1645615c789724542d11270",
   "url":"https://pypi.io/packages/source/b/bintrees/bintrees-2.0.7.zip"
  },
  "test":{
   "imports":[
    "bintrees",
    "bintrees.bintree",
    "bintrees.avltree",
    "bintrees.rbtree",
    "bintrees",
    "bintrees.bintree",
    "bintrees.avltree",
    "bintrees.rbtree",
    "bintrees",
    "bintrees.bintree",
    "bintrees.avltree",
    "bintrees.rbtree"
   ]
  }
 },
 "name":"bintrees",
 "new_version":"2.1.0",
 "pinning_version":"2020.03.20",
 "raw_meta_yaml":"{% set version = \"2.0.7\" %}\n\npackage:\n  name: bintrees\n  version: {{ version }}\n\nsource:\n  url: https://pypi.io/packages/source/b/bintrees/bintrees-{{ version }}.zip\n  sha256: 60675e6602cef094abcd38bf4aecc067d78ae2d5e1645615c789724542d11270\n\nbuild:\n  number: 1000\n  skip: True  # [py>36]\n  script: \"{{ PYTHON }} -m pip install . --no-deps --ignore-installed --no-cache-dir -vvv\"\n\nrequirements:\n  build:\n    - {{ compiler('c') }}\n  host:\n    - python\n    - pip\n    - cython\n  run:\n    - python\n\ntest:\n  imports:\n    - bintrees\n    - bintrees.bintree\n    - bintrees.avltree\n    - bintrees.rbtree\n\nabout:\n  home: https://pypi.python.org/pypi/bintrees/2.0.7\n  license: MIT\n  license_file: LICENSE.txt\n  summary: 'Binary-, RedBlack- and AVL-Trees in Python and Cython'\n\n  # The remaining entries in this section are optional, but recommended\n  description: |\n    Use sortedcontainers instead: https://pypi.python.org/pypi/sortedcontainers\n    This Classes are much slower than the built-in dict class, but all iterators/generators\n    yielding data in sorted key order. Trees can be uses as drop in replacement \n    for dicts in most cases. \n  doc_url: https://pypi.python.org/pypi/bintrees/2.0.7\n  dev_url: https://github.com/mozman/bintrees\n\nextra:\n  recipe-maintainers:\n    - pvanheus\n",
 "req":{
  "__set__":true,
  "elements":[
   "c_compiler_stub",
   "cython",
   "pip",
   "python"
  ]
 },
 "requirements":{
  "build":{
   "__set__":true,
   "elements":[
    "c_compiler_stub"
   ]
  },
  "host":{
   "__set__":true,
   "elements":[
    "cython",
    "pip",
    "python"
   ]
  },
  "run":{
   "__set__":true,
   "elements":[
    "python"
   ]
  },
  "test":{
   "__set__":true,
   "elements":[]
  }
 },
 "smithy_version":"No azure token. Create a token and\nput it in ~/.conda-smithy/azure.token\n3.6.14",
 "strong_exports":false,
 "total_requirements":{
  "build":{
   "__set__":true,
   "elements":[
    "c_compiler_stub"
   ]
  },
  "host":{
   "__set__":true,
   "elements":[
    "cython",
    "pip",
    "python"
   ]
  },
  "run":{
   "__set__":true,
   "elements":[
    "python"
   ]
  },
  "test":{
   "__set__":true,
   "elements":[]
  }
 },
 "url":"https://pypi.io/packages/source/b/bintrees/bintrees-2.0.7.zip",
 "version":"2.0.7"
}