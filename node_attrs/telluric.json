{
 "PRed":[
  {
   "PR":{
    "__lazy_json__":"pr_json/217047574.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"Version",
    "migrator_version":0,
    "version":"0.3.0"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/224306608.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"Version",
    "migrator_version":0,
    "version":"0.4.0"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/225103363.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"Version",
    "migrator_version":0,
    "version":"0.4.1"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/226029593.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"Version",
    "migrator_version":0,
    "version":"0.5.0"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/228386204.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"Version",
    "migrator_version":0,
    "version":"0.6.0"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/228787993.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"Version",
    "migrator_version":0,
    "version":"0.7.0"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/230209432.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"Version",
    "migrator_version":0,
    "version":"0.7.1"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/231784626.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"Version",
    "migrator_version":0,
    "version":"0.8.0"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/238134280.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"Version",
    "migrator_version":0,
    "version":"0.9.0"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/238734535.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"Version",
    "migrator_version":0,
    "version":"0.9.1"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/240443988.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"Version",
    "migrator_version":0,
    "version":"0.10.0"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/241182387.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"Version",
    "migrator_version":0,
    "version":"0.10.1"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/243666970.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"Version",
    "migrator_version":0,
    "version":"0.10.2"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/243703368.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"Version",
    "migrator_version":0,
    "version":"0.10.3"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/268409968.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"Version",
    "migrator_version":0,
    "version":"0.10.5"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/275328840.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"Version",
    "migrator_version":0,
    "version":"0.10.6"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/285902595.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"Version",
    "migrator_version":0,
    "version":"0.10.7"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/312888581.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"Version",
    "migrator_version":0,
    "version":"0.10.8"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/347933707.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"Version",
    "migrator_version":0,
    "version":"0.11.0"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/376225999.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"MatplotlibBase",
    "migrator_version":0,
    "name":"matplotlib-to-matplotlib-base"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  }
 ],
 "bad":false,
 "conda-forge.yml":{},
 "feedstock_name":"telluric",
 "hash_type":"sha256",
 "meta_yaml":{
  "about":{
   "description":"telluric is a MIT licensed Python library to manage vector and raster\ngeospatial data in an interactive and easy way. It lets you read the common\nvector and raster geospatial formats (leveraging on well known libraries\nsuch as fiona, shapely and rasterio) and makes it extremely easy to combine\ndata sources with different projections, visualize them, read and write\nthem from/to disk, and more.\n",
   "dev_url":"https://github.com/satellogic/telluric",
   "doc_url":"http://telluric.readthedocs.io/",
   "home":"http://github.com/satellogic/telluric",
   "license":"MIT",
   "license_family":"MIT",
   "license_file":"LICENSE",
   "summary":"Interactive geospatial data manipulation in Python"
  },
  "build":{
   "noarch":"python",
   "number":"1",
   "script":" -m pip install . --no-deps --ignore-installed --no-cache-dir -vvv "
  },
  "extra":{
   "recipe-maintainers":[
    "Juanlu001",
    "drnextgis",
    "Juanlu001",
    "drnextgis",
    "Juanlu001",
    "drnextgis"
   ]
  },
  "package":{
   "name":"telluric",
   "version":"0.11.0"
  },
  "requirements":{
   "host":[
    "python >=3.5",
    "setuptools",
    "pip",
    "python >=3.5",
    "setuptools",
    "pip",
    "python >=3.5",
    "setuptools",
    "pip"
   ],
   "run":[
    "python >=3.5",
    "affine",
    "dsnparse",
    "fiona >=1.8.4,<2",
    "folium >=0.6.0",
    "ipyleaflet",
    "pyproj",
    "shapely >=1.6.3,<2",
    "rasterio >=1.0.21,<2",
    "pillow",
    "mercantile >=0.10.0",
    "matplotlib-base",
    "boltons",
    "imageio",
    "lxml",
    "python >=3.5",
    "affine",
    "dsnparse",
    "fiona >=1.8.4,<2",
    "folium >=0.6.0",
    "ipyleaflet",
    "pyproj",
    "shapely >=1.6.3,<2",
    "rasterio >=1.0.21,<2",
    "pillow",
    "mercantile >=0.10.0",
    "matplotlib-base",
    "boltons",
    "imageio",
    "lxml",
    "python >=3.5",
    "affine",
    "dsnparse",
    "fiona >=1.8.4,<2",
    "folium >=0.6.0",
    "ipyleaflet",
    "pyproj",
    "shapely >=1.6.3,<2",
    "rasterio >=1.0.21,<2",
    "pillow",
    "mercantile >=0.10.0",
    "matplotlib-base",
    "boltons",
    "imageio",
    "lxml"
   ]
  },
  "source":{
   "fn":"telluric-0.11.0.tar.gz",
   "sha256":"6cfd9f2097357332f0a52210ad73a53fb8d09d43f2fec78a6f510bfe830f6c46",
   "url":"https://pypi.io/packages/source/t/telluric/telluric-0.11.0.tar.gz"
  },
  "test":{
   "imports":[
    "telluric",
    "telluric",
    "telluric"
   ]
  }
 },
 "name":"telluric",
 "new_version":"0.11.0",
 "pinning_version":"2020.02.12",
 "raw_meta_yaml":"{% set name = \"telluric\" %}\n{% set version = \"0.11.0\" %}\n{% set sha256 = \"6cfd9f2097357332f0a52210ad73a53fb8d09d43f2fec78a6f510bfe830f6c46\" %}\n\npackage:\n  name: {{ name|lower }}\n  version: {{ version }}\n\nsource:\n  fn: {{ name }}-{{ version }}.tar.gz\n  url: https://pypi.io/packages/source/{{ name[0] }}/{{ name }}/{{ name }}-{{ version }}.tar.gz\n  sha256: {{ sha256 }}\n\nbuild:\n  number: 1\n  script: \"{{ PYTHON }} -m pip install . --no-deps --ignore-installed --no-cache-dir -vvv \"\n  noarch: python\n\nrequirements:\n  host:\n    - python >=3.5\n    - setuptools\n    - pip\n\n  run:\n    - python >=3.5\n    - affine\n    - dsnparse\n    - fiona >=1.8.4,<2\n    - folium >=0.6.0\n    - ipyleaflet\n    - pyproj\n    - shapely >=1.6.3,<2\n    - rasterio >=1.0.21,<2\n    - pillow\n    - mercantile >=0.10.0\n    - matplotlib-base\n    - boltons\n    - imageio\n    - lxml\n\ntest:\n  imports:\n    - telluric\n\nabout:\n  home: http://github.com/satellogic/telluric\n  license: MIT\n  license_family: MIT\n  license_file: LICENSE\n  summary: 'Interactive geospatial data manipulation in Python'\n  description: |\n    telluric is a MIT licensed Python library to manage vector and raster\n    geospatial data in an interactive and easy way. It lets you read the common\n    vector and raster geospatial formats (leveraging on well known libraries\n    such as fiona, shapely and rasterio) and makes it extremely easy to combine\n    data sources with different projections, visualize them, read and write\n    them from/to disk, and more.\n  doc_url: http://telluric.readthedocs.io/\n  dev_url: https://github.com/satellogic/telluric\n\nextra:\n  recipe-maintainers:\n    - Juanlu001\n    - drnextgis\n",
 "req":{
  "__set__":true,
  "elements":[
   "affine",
   "boltons",
   "dsnparse",
   "fiona",
   "folium",
   "imageio",
   "ipyleaflet",
   "lxml",
   "matplotlib-base",
   "mercantile",
   "pillow",
   "pip",
   "pyproj",
   "python",
   "rasterio",
   "setuptools",
   "shapely"
  ]
 },
 "requirements":{
  "build":{
   "__set__":true,
   "elements":[]
  },
  "host":{
   "__set__":true,
   "elements":[
    "pip",
    "python",
    "setuptools"
   ]
  },
  "run":{
   "__set__":true,
   "elements":[
    "affine",
    "boltons",
    "dsnparse",
    "fiona",
    "folium",
    "imageio",
    "ipyleaflet",
    "lxml",
    "matplotlib-base",
    "mercantile",
    "pillow",
    "pyproj",
    "python",
    "rasterio",
    "shapely"
   ]
  },
  "test":{
   "__set__":true,
   "elements":[]
  }
 },
 "smithy_version":"3.6.8",
 "strong_exports":false,
 "total_requirements":{
  "build":{
   "__set__":true,
   "elements":[]
  },
  "host":{
   "__set__":true,
   "elements":[
    "pip",
    "python >=3.5",
    "setuptools"
   ]
  },
  "run":{
   "__set__":true,
   "elements":[
    "affine",
    "boltons",
    "dsnparse",
    "fiona >=1.8.4,<2",
    "folium >=0.6.0",
    "imageio",
    "ipyleaflet",
    "lxml",
    "matplotlib-base",
    "mercantile >=0.10.0",
    "pillow",
    "pyproj",
    "python >=3.5",
    "rasterio >=1.0.21,<2",
    "shapely >=1.6.3,<2"
   ]
  },
  "test":{
   "__set__":true,
   "elements":[]
  }
 },
 "url":"https://pypi.io/packages/source/t/telluric/telluric-0.10.8.tar.gz",
 "version":"0.11.0"
}