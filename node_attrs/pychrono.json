{
 "PRed":[
  {
   "PR":{
    "__lazy_json__":"pr_json/335624081.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"MigrationYaml",
    "migrator_object_version":1,
    "migrator_version":0,
    "name":"python38"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/379145051.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"Version",
    "migrator_version":0,
    "version":"5.0.0"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/381935269.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"Version",
    "migrator_version":0,
    "version":"5.0.1"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/400934231.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"MigrationYaml",
    "migrator_object_version":1,
    "migrator_version":0,
    "name":"pypy"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  }
 ],
 "bad":false,
 "conda-forge.yml":{},
 "feedstock_name":"pychrono",
 "hash_type":"sha256",
 "meta_yaml":{
  "about":{
   "home":"https://github.com/projectchrono/chrono",
   "license":"BSD 3-Clause",
   "license_family":"BSD",
   "license_file":"LICENSE",
   "summary":"A physics engine for constrained multi-flexible-body dynamics"
  },
  "build":{
   "number":"0",
   "run_exports":[
    "chrono",
    "chrono",
    "chrono"
   ],
   "skip":true
  },
  "extra":{
   "recipe-maintainers":[
    "davidbrochart",
    "SylvainCorlay",
    "wolfv",
    "davidbrochart",
    "SylvainCorlay",
    "wolfv",
    "davidbrochart",
    "SylvainCorlay",
    "wolfv"
   ]
  },
  "outputs":[
   {
    "name":"chrono",
    "script":"clean_python.sh",
    "test":{
     "commands":[
      "test -f ${PREFIX}/lib/libChronoEngine${SHLIB_EXT}"
     ]
    }
   },
   {
    "name":"pychrono",
    "requirements":{
     "build":[
      "c_compiler_stub",
      "cxx_compiler_stub",
      "cmake",
      "swig 3.0.12"
     ],
     "host":[
      "chrono",
      "python",
      "eigen"
     ],
     "run":[
      "chrono",
      "python"
     ]
    },
    "script":"py_install.sh",
    "test":{
     "imports":[
      "pychrono"
     ]
    }
   },
   {
    "name":"chrono",
    "script":"clean_python.sh",
    "test":{
     "commands":[
      "test -f ${PREFIX}/lib/libChronoEngine${SHLIB_EXT}"
     ]
    }
   },
   {
    "name":"pychrono",
    "requirements":{
     "build":[
      "c_compiler_stub",
      "cxx_compiler_stub",
      "cmake",
      "swig 3.0.12",
      "llvm-openmp"
     ],
     "host":[
      "chrono",
      "python",
      "eigen",
      "llvm-openmp"
     ],
     "run":[
      "chrono",
      "python",
      "llvm-openmp"
     ]
    },
    "script":"py_install.sh",
    "test":{
     "imports":[
      "pychrono"
     ]
    }
   },
   {
    "name":"chrono",
    "script":"clean_python.sh",
    "test":{
     "commands":[
      "test -f ${PREFIX}/lib/libChronoEngine${SHLIB_EXT}"
     ]
    }
   },
   {
    "name":"pychrono",
    "requirements":{
     "build":[
      "c_compiler_stub",
      "cxx_compiler_stub",
      "cmake",
      "swig 3.0.12",
      "libgomp"
     ],
     "host":[
      "chrono",
      "python",
      "eigen"
     ],
     "run":[
      "chrono",
      "python"
     ]
    },
    "script":"py_install.sh",
    "test":{
     "imports":[
      "pychrono"
     ]
    }
   }
  ],
  "package":{
   "name":"chrono",
   "version":"5.0.1"
  },
  "requirements":{
   "build":[
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cmake",
    "swig 3.0.12",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cmake",
    "swig 3.0.12",
    "llvm-openmp",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cmake",
    "swig 3.0.12",
    "libgomp"
   ],
   "host":[
    "eigen",
    "python",
    "eigen",
    "python",
    "llvm-openmp",
    "eigen",
    "python"
   ],
   "run":null
  },
  "source":{
   "sha256":"d98028e6bfdea8d13b4f380913734475f8a0e152dfd6f7cd1c80232a1cf347fd",
   "url":"https://github.com/projectchrono/chrono/archive/5.0.1.tar.gz"
  }
 },
 "name":"chrono",
 "new_version":"5.0.1",
 "outputs_names":[
  "chrono",
  "pychrono"
 ],
 "pinning_version":"2020.04.08",
 "raw_meta_yaml":"{% set name = \"chrono\" %}\n{% set version = \"5.0.1\" %}\n{% set build = 0 %}\n{% set sha256 = \"d98028e6bfdea8d13b4f380913734475f8a0e152dfd6f7cd1c80232a1cf347fd\" %}\n\npackage:\n  name: {{ name }}\n  version: {{ version }}\n\nsource:\n  url: https://github.com/projectchrono/chrono/archive/{{ version }}.tar.gz\n  sha256: {{ sha256 }}\n\nbuild:\n  number: {{ build }}\n  skip: true  # [win or py2k]\n  run_exports:\n    - {{ pin_subpackage('chrono', max_pin='x.x' )}}\n\nrequirements:\n  build:\n    - {{ compiler('c') }}\n    - {{ compiler('cxx') }}\n    - cmake\n    - swig 3.0.12\n    - llvm-openmp  # [osx]\n    - libgomp      # [linux and not aarch64]\n  host:\n    - eigen\n    - python\n    - llvm-openmp  # [osx]\n  run:\n    - llvm-openmp  # [osx]\n\noutputs:\n  - name: chrono\n    script: clean_python.sh\n    test:\n      commands:\n        - test -f ${PREFIX}/lib/libChronoEngine${SHLIB_EXT}\n  - name: pychrono\n    script: py_install.sh\n    requirements:\n      build:\n        - {{ compiler('c') }}\n        - {{ compiler('cxx') }}\n        - cmake\n        - swig 3.0.12\n        - llvm-openmp  # [osx]\n        - libgomp      # [linux and not aarch64]\n      host:\n        - {{ pin_subpackage('chrono', exact=True) }}\n        - python\n        - eigen\n        - llvm-openmp  # [osx]\n      run:\n        - {{ pin_subpackage('chrono', exact=True) }}\n        - python\n        - llvm-openmp  # [osx]\n\n    test:\n      imports:\n        - pychrono\n\nabout:\n  home: https://github.com/projectchrono/chrono\n  license: BSD 3-Clause\n  license_family: BSD\n  license_file: LICENSE\n  summary: A physics engine for constrained multi-flexible-body dynamics\n\nextra:\n  recipe-maintainers:\n    - davidbrochart\n    - SylvainCorlay\n    - wolfv\n",
 "req":{
  "__set__":true,
  "elements":[
   "c_compiler_stub",
   "chrono",
   "cmake",
   "cxx_compiler_stub",
   "eigen",
   "libgomp",
   "llvm-openmp",
   "python",
   "swig"
  ]
 },
 "requirements":{
  "build":{
   "__set__":true,
   "elements":[
    "c_compiler_stub",
    "cmake",
    "cxx_compiler_stub",
    "libgomp",
    "llvm-openmp",
    "swig"
   ]
  },
  "host":{
   "__set__":true,
   "elements":[
    "chrono",
    "eigen",
    "llvm-openmp",
    "python"
   ]
  },
  "run":{
   "__set__":true,
   "elements":[
    "chrono",
    "llvm-openmp",
    "python"
   ]
  },
  "test":{
   "__set__":true,
   "elements":[]
  }
 },
 "smithy_version":"No azure token. Create a token and\nput it in ~/.conda-smithy/azure.token\n3.6.15",
 "strong_exports":false,
 "total_requirements":{
  "build":{
   "__set__":true,
   "elements":[
    "c_compiler_stub",
    "cmake",
    "cxx_compiler_stub",
    "libgomp",
    "llvm-openmp",
    "swig 3.0.12"
   ]
  },
  "host":{
   "__set__":true,
   "elements":[
    "chrono",
    "eigen",
    "llvm-openmp",
    "python"
   ]
  },
  "run":{
   "__set__":true,
   "elements":[
    "chrono",
    "llvm-openmp",
    "python"
   ]
  },
  "test":{
   "__set__":true,
   "elements":[]
  }
 },
 "url":"https://github.com/projectchrono/chrono/archive/4.0.0.tar.gz",
 "version":"5.0.1"
}