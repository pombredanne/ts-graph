{
 "PRed":[
  {
   "data":{
    "bot_rerun":false,
    "migrator_name":"Version",
    "migrator_version":0,
    "version":"0.38.1"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/200480978.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"Version",
    "migrator_version":0,
    "version":"0.39.0"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/217391826.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"Version",
    "migrator_version":0,
    "version":"0.40.0"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/221548727.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"Version",
    "migrator_version":0,
    "version":"0.40.1"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/222765085.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"CompilerRebuild",
    "migrator_version":1,
    "name":"Python 3.7, GCC 7, R 3.5.1, openBLAS 0.3.2"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/234012327.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"Version",
    "migrator_version":0,
    "version":"0.41.0"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/241397011.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"Version",
    "migrator_version":0,
    "version":"0.42.0"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/249737120.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"Version",
    "migrator_version":0,
    "version":"0.42.1"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/260686258.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"Version",
    "migrator_version":0,
    "version":"0.43.0"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/264726600.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"Version",
    "migrator_version":0,
    "version":"0.43.1"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/283437704.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"Version",
    "migrator_version":0,
    "version":"0.44.0"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/288653682.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"Version",
    "migrator_version":0,
    "version":"0.44.1"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/299016729.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"Version",
    "migrator_version":0,
    "version":"0.45.0"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/302662558.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"Version",
    "migrator_version":0,
    "version":"0.45.1"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/326485449.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"Version",
    "migrator_version":0,
    "version":"0.46.0"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/336076443.json"
   },
   "data":{
    "bot_rerun":1579272528.464493,
    "migrator_name":"MigrationYaml",
    "migrator_object_version":1,
    "migrator_version":0,
    "name":"python38"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/341971181.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"MigrationYaml",
    "migrator_object_version":1,
    "migrator_version":0,
    "name":"python38"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/358779771.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"Version",
    "migrator_version":0,
    "version":"0.47.0"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/367547370.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"Version",
    "migrator_version":0,
    "version":"0.48.0"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/404593798.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"Version",
    "migrator_version":0,
    "version":"0.49.0"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/414891679.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"Version",
    "migrator_version":0,
    "version":"0.49.1"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  }
 ],
 "bad":false,
 "conda-forge.yml":{
  "compiler_stack":"comp7",
  "max_py_ver":"37",
  "max_r_ver":"35"
 },
 "feedstock_name":"numba",
 "hash_type":"sha256",
 "meta_yaml":{
  "about":{
   "description":"Numba is an Open Source NumPy-aware optimizing compiler for Python\nsponsored by Anaconda, Inc. It uses the remarkable LLVM compiler\ninfrastructure to compile Python syntax to machine code.\"\n",
   "dev_url":"https://github.com/numba/numba",
   "doc_url":"http://numba.pydata.org/",
   "home":"http://numba.github.com",
   "license":"BSD 2-clause",
   "license_family":"BSD",
   "license_file":"LICENSE",
   "summary":"NumPy aware dynamic Python compiler using LLVM"
  },
  "build":{
   "entry_points":[
    "pycc = numba.pycc:main",
    "numba = numba.numba_entry:main",
    "pycc = numba.pycc:main",
    "numba = numba.numba_entry:main",
    "pycc = numba.pycc:main",
    "numba = numba.numba_entry:main"
   ],
   "ignore_run_exports":[
    "tbb",
    "tbb",
    "tbb"
   ],
   "number":"0",
   "script":[
    " buildscripts/remove_unwanted_files.py",
    " -m pip install . --no-deps --ignore-installed -vvv",
    " buildscripts/remove_unwanted_files.py",
    " -m pip install . --no-deps --ignore-installed -vvv",
    " buildscripts/remove_unwanted_files.py",
    " -m pip install . --no-deps --ignore-installed -vvv"
   ]
  },
  "extra":{
   "recipe-maintainers":[
    "souravsingh",
    "marcelotrevisani",
    "henryiii",
    "mbargull",
    "souravsingh",
    "marcelotrevisani",
    "henryiii",
    "mbargull",
    "souravsingh",
    "marcelotrevisani",
    "henryiii",
    "mbargull"
   ]
  },
  "package":{
   "name":"numba",
   "version":"0.48.0"
  },
  "requirements":{
   "build":[
    "c_compiler_stub",
    "cxx_compiler_stub",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "c_compiler_stub",
    "cxx_compiler_stub"
   ],
   "host":[
    "python",
    "pip",
    "setuptools",
    "llvmlite 0.31.*",
    "numpy",
    "python",
    "pip",
    "setuptools",
    "llvmlite 0.31.*",
    "numpy",
    "python",
    "pip",
    "setuptools",
    "llvmlite 0.31.*",
    "numpy",
    "tbb-devel >=2018.0.5"
   ],
   "run":[
    "python",
    "llvmlite",
    "numpy",
    "setuptools",
    "python",
    "llvmlite",
    "numpy",
    "setuptools",
    "python",
    "llvmlite",
    "numpy",
    "setuptools"
   ],
   "run_constrained":[
    "tbb >=2018.0.5"
   ]
  },
  "source":{
   "sha256":"7cadc9075a2675c9152ee36642cea34210a41ca6c5cc6f1cb47d2834f0e67bdf",
   "url":"https://github.com/numba/numba/archive/0.48.0.tar.gz"
  },
  "test":{
   "imports":[
    "numba",
    "numba.annotations",
    "numba.cuda",
    "numba.cuda.cudadrv",
    "numba.cuda.kernels",
    "numba.cuda.simulator",
    "numba.cuda.simulator.cudadrv",
    "numba.cuda.tests",
    "numba.cuda.tests.cudadrv",
    "numba.cuda.tests.cudadrv.data",
    "numba.cuda.tests.cudapy",
    "numba.cuda.tests.cudasim",
    "numba.cuda.tests.nocuda",
    "numba.datamodel",
    "numba.jitclass",
    "numba.npyufunc",
    "numba.pycc",
    "numba.rewrites",
    "numba.runtime",
    "numba.scripts",
    "numba.servicelib",
    "numba.targets",
    "numba.testing",
    "numba.tests",
    "numba.tests.npyufunc",
    "numba.typeconv",
    "numba.types",
    "numba.typing",
    "numba.unsafe",
    "numba",
    "numba.annotations",
    "numba.cuda",
    "numba.cuda.cudadrv",
    "numba.cuda.kernels",
    "numba.cuda.simulator",
    "numba.cuda.simulator.cudadrv",
    "numba.cuda.tests",
    "numba.cuda.tests.cudadrv",
    "numba.cuda.tests.cudadrv.data",
    "numba.cuda.tests.cudapy",
    "numba.cuda.tests.cudasim",
    "numba.cuda.tests.nocuda",
    "numba.datamodel",
    "numba.jitclass",
    "numba.npyufunc",
    "numba.pycc",
    "numba.rewrites",
    "numba.runtime",
    "numba.scripts",
    "numba.servicelib",
    "numba.targets",
    "numba.testing",
    "numba.tests",
    "numba.tests.npyufunc",
    "numba.typeconv",
    "numba.types",
    "numba.typing",
    "numba.unsafe",
    "numba",
    "numba.annotations",
    "numba.cuda",
    "numba.cuda.cudadrv",
    "numba.cuda.kernels",
    "numba.cuda.simulator",
    "numba.cuda.simulator.cudadrv",
    "numba.cuda.tests",
    "numba.cuda.tests.cudadrv",
    "numba.cuda.tests.cudadrv.data",
    "numba.cuda.tests.cudapy",
    "numba.cuda.tests.cudasim",
    "numba.cuda.tests.nocuda",
    "numba.datamodel",
    "numba.jitclass",
    "numba.npyufunc",
    "numba.pycc",
    "numba.rewrites",
    "numba.runtime",
    "numba.scripts",
    "numba.servicelib",
    "numba.targets",
    "numba.testing",
    "numba.tests",
    "numba.tests.npyufunc",
    "numba.typeconv",
    "numba.types",
    "numba.typing",
    "numba.unsafe"
   ],
   "requires":[
    "jinja2",
    "cffi",
    "scipy",
    "ipython",
    "setuptools",
    "jinja2",
    "cffi",
    "scipy",
    "ipython",
    "setuptools",
    "intel-openmp",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "jinja2",
    "cffi",
    "scipy",
    "ipython",
    "setuptools",
    "tbb >=2018.0.5",
    "c_compiler_stub",
    "cxx_compiler_stub"
   ]
  }
 },
 "name":"numba",
 "new_version":"0.49.1",
 "new_version_attempts":{
  "0.49.0":1,
  "0.49.1":1
 },
 "new_version_errors":{},
 "pinning_version":"2020.05.06.22.15.02",
 "raw_meta_yaml":"{% set name = \"numba\" %}\n{% set version = \"0.48.0\" %}\n{% set sha256 = \"7cadc9075a2675c9152ee36642cea34210a41ca6c5cc6f1cb47d2834f0e67bdf\" %}\n\npackage:\n  name: numba\n  version: {{ version }}\n\nsource:\n  # url: https://pypi.io/packages/source/{{ name[0] }}/{{ name }}/{{ name }}-{{ version }}.tar.gz\n  url: https://github.com/numba/{{ name }}/archive/{{ version }}.tar.gz\n  sha256: {{ sha256 }}\n\nbuild:\n  number: 0\n  entry_points:\n    - pycc = numba.pycc:main\n    - numba = numba.numba_entry:main\n  script:\n    - \"{{ PYTHON }} buildscripts/remove_unwanted_files.py\"   # the script is not available in pypi tar-ball\n    - \"{{ PYTHON }} -m pip install . --no-deps --ignore-installed -vvv\"\n  ignore_run_exports:\n      # TBB is entirely optional\n      - tbb\n  skip: true  # [py2k]\n\nrequirements:\n  build:\n    - {{ compiler('c') }}\n    - {{ compiler('cxx') }}\n\n  host:\n    - python\n    - pip\n    - setuptools\n    - llvmlite 0.31.*\n    - numpy\n    - tbb-devel >=2018.0.5  # [linux]\n\n  run:\n    - python\n    - {{ pin_compatible('llvmlite', max_pin='x.x') }}\n    - {{ pin_compatible('numpy') }}\n    # needed for pkg_resources\n    - setuptools\n\n  run_constrained:\n    # If TBB is present it must be at least this version from Anaconda due to\n    # build flag issues triggering UB in defaults::tbb=2018.0.4\n    # See https://github.com/numba/numba/pull/3202#issuecomment-415939206 ff.\n    - tbb >=2018.0.5  # [linux]\n\ntest:\n  requires:\n    # Required to test optional Numba features\n    - jinja2\n    - cffi\n    - scipy\n    - ipython\n    - setuptools\n    - tbb >=2018.0.5           # [linux]\n    - intel-openmp             # [osx]\n    # Need these for AOT. Do not init msvc as it may not be present\n    - {{ compiler('c') }}      # [not win]\n    - {{ compiler('cxx') }}    # [not win]\n\n  imports:\n    - numba\n    - numba.annotations\n    - numba.cuda\n    - numba.cuda.cudadrv\n    - numba.cuda.kernels\n    - numba.cuda.simulator\n    - numba.cuda.simulator.cudadrv\n    - numba.cuda.tests\n    - numba.cuda.tests.cudadrv\n    - numba.cuda.tests.cudadrv.data\n    - numba.cuda.tests.cudapy\n    - numba.cuda.tests.cudasim\n    - numba.cuda.tests.nocuda\n    - numba.datamodel\n    - numba.jitclass\n    - numba.npyufunc\n    - numba.pycc\n    - numba.rewrites\n    - numba.runtime\n    - numba.scripts\n    - numba.servicelib\n    - numba.targets\n    - numba.testing\n    - numba.tests\n    - numba.tests.npyufunc\n    - numba.typeconv\n    - numba.types\n    - numba.typing\n    - numba.unsafe\n\nabout:\n  home: http://numba.github.com\n  license: BSD 2-clause\n  license_family: BSD\n  license_file: LICENSE\n  summary: NumPy aware dynamic Python compiler using LLVM\n  description: | \n    Numba is an Open Source NumPy-aware optimizing compiler for Python \n    sponsored by Anaconda, Inc. It uses the remarkable LLVM compiler \n    infrastructure to compile Python syntax to machine code.\"\n  doc_url: http://numba.pydata.org/\n  dev_url: https://github.com/numba/numba\n\nextra:\n  recipe-maintainers:\n    - souravsingh\n    - marcelotrevisani\n    - henryiii\n    - mbargull\n",
 "req":{
  "__set__":true,
  "elements":[
   "c_compiler_stub",
   "cxx_compiler_stub",
   "llvmlite",
   "numpy",
   "pip",
   "python",
   "setuptools",
   "tbb-devel"
  ]
 },
 "requirements":{
  "build":{
   "__set__":true,
   "elements":[
    "c_compiler_stub",
    "cxx_compiler_stub"
   ]
  },
  "host":{
   "__set__":true,
   "elements":[
    "llvmlite",
    "numpy",
    "pip",
    "python",
    "setuptools",
    "tbb-devel"
   ]
  },
  "run":{
   "__set__":true,
   "elements":[
    "llvmlite",
    "numpy",
    "python",
    "setuptools"
   ]
  },
  "test":{
   "__set__":true,
   "elements":[
    "c_compiler_stub",
    "cffi",
    "cxx_compiler_stub",
    "intel-openmp",
    "ipython",
    "jinja2",
    "scipy",
    "setuptools",
    "tbb"
   ]
  }
 },
 "smithy_version":"No azure token. Create a token and\nput it in ~/.conda-smithy/azure.token\n3.7.0\n",
 "strong_exports":false,
 "total_requirements":{
  "build":{
   "__set__":true,
   "elements":[
    "c_compiler_stub",
    "cxx_compiler_stub"
   ]
  },
  "host":{
   "__set__":true,
   "elements":[
    "llvmlite 0.31.*",
    "numpy",
    "pip",
    "python",
    "setuptools",
    "tbb-devel >=2018.0.5"
   ]
  },
  "run":{
   "__set__":true,
   "elements":[
    "llvmlite",
    "numpy",
    "python",
    "setuptools"
   ]
  },
  "test":{
   "__set__":true,
   "elements":[
    "c_compiler_stub",
    "cffi",
    "cxx_compiler_stub",
    "intel-openmp",
    "ipython",
    "jinja2",
    "scipy",
    "setuptools",
    "tbb >=2018.0.5"
   ]
  }
 },
 "url":"https://github.com/numba/numba/archive/0.45.1.tar.gz",
 "version":"0.48.0"
}