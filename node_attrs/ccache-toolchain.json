{
 "PRed":[
  {
   "PR":{
    "__lazy_json__":"pr_json/375775269.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"ArchRebuild",
    "migrator_version":1,
    "name":"aarch64 and ppc64le addition"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  }
 ],
 "bad":"Upstream: Error getting upstream version",
 "conda-forge.yml":{},
 "feedstock_name":"ccache-toolchain",
 "meta_yaml":{
  "about":{
   "home":"https://github.com/conda-forge/ccache-toolchain-feedstock",
   "license":"BSD 3-Clause",
   "summary":"A meta-package to enable caching in CI using ccache."
  },
  "build":{
   "number":"0"
  },
  "extra":{
   "recipe-maintainers":[
    "gqmelo",
    "isuruf",
    "gqmelo",
    "isuruf",
    "gqmelo",
    "isuruf"
   ]
  },
  "package":{
   "name":"ccache-toolchain",
   "version":"1.1.0"
  },
  "requirements":{
   "build":[
    "ccache"
   ],
   "run":[
    "toolchain 2.*",
    "ccache",
    "toolchain 2.*",
    "ccache",
    "toolchain 2.*"
   ]
  },
  "test":{
   "commands":[
    "test -f \"${PREFIX}/etc/conda/activate.d/ccache_toolchain_activate.sh\"",
    "test -f \"${PREFIX}/etc/conda/deactivate.d/ccache_toolchain_deactivate.sh\"",
    "test `which gcc` == \"${PREFIX}/bin/conda_forge_ccache/gcc\"",
    "test `readlink -f \\`which gcc\\`` == \"${PREFIX}/bin/ccache\"",
    "test `which g++` == \"${PREFIX}/bin/conda_forge_ccache/g++\"",
    "test `readlink -f \\`which g++\\`` == \"${PREFIX}/bin/ccache\"",
    "test `which clang` == \"${PREFIX}/bin/conda_forge_ccache/clang\"",
    "test `readlink -f \\`which clang\\`` == \"${PREFIX}/bin/ccache\"",
    "test `which clang++` == \"${PREFIX}/bin/conda_forge_ccache/clang++\"",
    "test `readlink -f \\`which clang++\\`` == \"${PREFIX}/bin/ccache\"",
    "test `which gfortran` == \"${PREFIX}/bin/conda_forge_ccache/gfortran\"",
    "test `readlink -f \\`which gfortran\\`` == \"${PREFIX}/bin/ccache\"",
    "gcc --version",
    "g++ --version",
    "gfortran --version"
   ],
   "requires":[
    "gcc"
   ]
  }
 },
 "name":"ccache-toolchain",
 "new_version":false,
 "pinning_version":"2020.02.12",
 "raw_meta_yaml":"{% set name = \"ccache-toolchain\" %}\n{% set version = \"1.1.0\" %}\n\npackage:\n  name: {{ name }}\n  version: {{ version }}\n\nbuild:\n  number: 0\n\nrequirements:\n  build:\n    - ccache      # [unix]\n  run:\n    - ccache      # [unix]\n    - toolchain 2.*\n\ntest:\n  requires:\n    - gcc         # [unix]\n  commands:\n    # Verify the scripts are in-place.\n    {% for state in [\"activate\", \"deactivate\"] %}\n    - test -f \"${PREFIX}/etc/conda/{{ state }}.d/ccache_toolchain_{{ state }}.sh\"  # [unix]\n    {% endfor %}\n    {% for cc in [\"gcc\", \"g++\", \"clang\", \"clang++\", \"gfortran\"] %}\n    # Verify that cc is in the path\n    - test `which {{ cc }}` == \"${PREFIX}/bin/conda_forge_ccache/{{ cc }}\"         # [unix]\n    # Verify that cc points to ccache\n    - test `readlink -f \\`which {{ cc }}\\`` == \"${PREFIX}/bin/ccache\"              # [linux]\n    {% endfor %}\n    - gcc --version        # [unix]\n    - g++ --version        # [unix]\n    - gfortran --version   # [unix]\n    - clang --version      # [osx]\n    - clang++ --version    # [osx]\n\nabout:\n  home: https://github.com/conda-forge/ccache-toolchain-feedstock\n  license: BSD 3-Clause\n  summary: A meta-package to enable caching in CI using ccache.\n\nextra:\n  recipe-maintainers:\n    - gqmelo\n    - isuruf\n",
 "req":{
  "__set__":true,
  "elements":[
   "ccache",
   "toolchain"
  ]
 },
 "requirements":{
  "build":{
   "__set__":true,
   "elements":[
    "ccache"
   ]
  },
  "host":{
   "__set__":true,
   "elements":[]
  },
  "run":{
   "__set__":true,
   "elements":[
    "ccache",
    "toolchain"
   ]
  },
  "test":{
   "__set__":true,
   "elements":[
    "gcc"
   ]
  }
 },
 "smithy_version":"3.6.8",
 "strong_exports":false,
 "time":1568135283.5865138,
 "total_requirements":{
  "build":{
   "__set__":true,
   "elements":[
    "ccache"
   ]
  },
  "host":{
   "__set__":true,
   "elements":[]
  },
  "run":{
   "__set__":true,
   "elements":[
    "ccache",
    "toolchain 2.*"
   ]
  },
  "test":{
   "__set__":true,
   "elements":[
    "gcc"
   ]
  }
 },
 "version":"1.1.0"
}