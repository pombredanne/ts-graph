{
 "PRed":[
  {
   "PR":{
    "__lazy_json__":"pr_json/199859428.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"Compiler",
    "migrator_version":0
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/215066273.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"CompilerRebuild",
    "migrator_version":1,
    "name":"Python 3.7, GCC 7, R 3.5.1, openBLAS 0.3.2"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/334180736.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"ArchRebuild",
    "migrator_version":1,
    "name":"aarch64 and ppc64le addition"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  }
 ],
 "bad":false,
 "conda-forge.yml":{
  "provider":{
   "linux_aarch64":"default",
   "linux_ppc64le":"default"
  }
 },
 "feedstock_name":"symmetrica",
 "hash_type":"sha256",
 "meta_yaml":{
  "about":{
   "home":"http://www.algorithm.uni-bayreuth.de/en/research/SYMMETRICA/index.html",
   "license":"ISC",
   "license_file":"/LICENSE",
   "summary":"Symmetrica is a collection of routines to handle several topics including\nordinary representation theory of the symmetric group and related groups\n"
  },
  "build":{
   "number":"1007",
   "run_exports":[
    "symmetrica",
    "symmetrica",
    "symmetrica"
   ],
   "skip":true
  },
  "extra":{
   "recipe-maintainers":[
    "isuruf",
    "isuruf",
    "isuruf"
   ]
  },
  "package":{
   "name":"symmetrica",
   "version":"2.0"
  },
  "requirements":{
   "build":[
    "cmake",
    "make",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cmake",
    "make",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cmake",
    "make",
    "c_compiler_stub",
    "cxx_compiler_stub"
   ],
   "host":null,
   "run":null
  },
  "source":{
   "fn":"symmetrica-2.0.tar.gz",
   "patches":[
    "patches/bruch.patch",
    "patches/de.patch",
    "patches/int32.patch",
    "patches/sort_sum_rename.patch",
    "patches/return_values.patch",
    "patches/unistd.patch",
    "patches/bruch.patch",
    "patches/de.patch",
    "patches/int32.patch",
    "patches/sort_sum_rename.patch",
    "patches/return_values.patch",
    "patches/unistd.patch",
    "patches/bruch.patch",
    "patches/de.patch",
    "patches/int32.patch",
    "patches/sort_sum_rename.patch",
    "patches/return_values.patch",
    "patches/unistd.patch"
   ],
   "sha256":"5d2b30c962aea6dd9c8ba7108e260194418d4ae096bc09748eddb561f5d624a9",
   "url":"http://mirrors.mit.edu/sage/spkg/upstream/symmetrica/symmetrica-2.0.tar.bz2"
  },
  "test":{
   "commands":[
    "if not exist %LIBRARY_INC%\\\\symmetrica\\\\macro.h exit 1",
    "if not exist %LIBRARY_LIB%\\\\symmetrica.lib exit 1",
    "test -f ${PREFIX}/include/symmetrica/macro.h",
    "test -f ${PREFIX}/lib/libsymmetrica${SHLIB_EXT}",
    "test -f ${PREFIX}/include/symmetrica/macro.h",
    "test -f ${PREFIX}/lib/libsymmetrica${SHLIB_EXT}"
   ]
  }
 },
 "name":"symmetrica",
 "new_version":false,
 "pinning_version":"2019.10.28",
 "raw_meta_yaml":"{% set version = \"2.0\" %}\n{% set name = \"symmetrica\" %}\n\npackage:\n  name: {{ name }}\n  version: {{ version }}\n\nsource:\n  fn: {{ name }}-{{ version }}.tar.gz\n  # http://www.algorithm.uni-bayreuth.de/en/research/SYMMETRICA/SYM2_0_tar.gz\n  # not using upstream tarball because it has weird permissions and patching fails\n  url: http://mirrors.mit.edu/sage/spkg/upstream/symmetrica/symmetrica-{{ version }}.tar.bz2\n  sha256: 5d2b30c962aea6dd9c8ba7108e260194418d4ae096bc09748eddb561f5d624a9\n  patches:\n  - patches/bruch.patch           # store integers in a temporary variable before freeing memory\n  - patches/de.patch              # turn off banner\n  - patches/int32.patch           # use int32_t and uint32_t for type INT.\n  - patches/sort_sum_rename.patch # rename sort to sym_sort, sum to sym_sum\n  - patches/return_values.patch   # return 0 in functions expecting int\n  - patches/unistd.patch   # return 0 in functions expecting int\n\nbuild:\n  number: 1007\n  skip: True    # [win and vc<14]\n  run_exports:\n    - {{ pin_subpackage(\"symmetrica\", max_pin=\"x.x\") }}\n\nrequirements:\n  build:\n    - cmake\n    - make\n    - {{ compiler('c') }}\n    - {{ compiler('cxx') }}\n    - clangxx  # [ppc64le]\n  host:\n  run:\n\ntest:\n  commands:\n    - test -f ${PREFIX}/include/symmetrica/macro.h   # [unix]\n    - test -f ${PREFIX}/lib/libsymmetrica${SHLIB_EXT}          # [unix]\n    - if not exist %LIBRARY_INC%\\\\symmetrica\\\\macro.h exit 1       # [win]\n    - if not exist %LIBRARY_LIB%\\\\symmetrica.lib exit 1           # [win]\n\nabout:\n  home: http://www.algorithm.uni-bayreuth.de/en/research/SYMMETRICA/index.html\n  license: ISC\n  license_file: {{ RECIPE_DIR }}/LICENSE\n  summary: |\n    Symmetrica is a collection of routines to handle several topics including\n    ordinary representation theory of the symmetric group and related groups\n\nextra:\n  recipe-maintainers:\n    - isuruf\n",
 "req":{
  "__set__":true,
  "elements":[
   "c_compiler_stub",
   "cmake",
   "cxx_compiler_stub",
   "make"
  ]
 },
 "requirements":{
  "build":{
   "__set__":true,
   "elements":[
    "c_compiler_stub",
    "cmake",
    "cxx_compiler_stub",
    "make"
   ]
  },
  "host":{
   "__set__":true,
   "elements":[]
  },
  "run":{
   "__set__":true,
   "elements":[]
  },
  "test":{
   "__set__":true,
   "elements":[]
  }
 },
 "smithy_version":"3.6.0",
 "strong_exports":false,
 "total_requirements":{
  "build":{
   "__set__":true,
   "elements":[
    "c_compiler_stub",
    "cmake",
    "cxx_compiler_stub",
    "make"
   ]
  },
  "host":{
   "__set__":true,
   "elements":[]
  },
  "run":{
   "__set__":true,
   "elements":[]
  },
  "test":{
   "__set__":true,
   "elements":[]
  }
 },
 "url":"http://mirrors.mit.edu/sage/spkg/upstream/symmetrica/symmetrica-2.0.tar.bz2",
 "version":"2.0"
}