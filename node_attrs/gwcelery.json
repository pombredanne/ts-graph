{
 "PRed":[
  {
   "data":{
    "bot_rerun":false,
    "migrator_name":"Version",
    "migrator_version":0,
    "version":"0.2.6"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/257628542.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"Version",
    "migrator_version":0,
    "version":"0.3.0"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/262261040.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"Version",
    "migrator_version":0,
    "version":"0.3.1"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/265910215.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"Version",
    "migrator_version":0,
    "version":"0.4.0"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/266797118.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"Version",
    "migrator_version":0,
    "version":"0.4.1"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/318264561.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"Version",
    "migrator_version":0,
    "version":"0.8.7"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/344784803.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"Version",
    "migrator_version":0,
    "version":"0.9.0"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/353366124.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"Version",
    "migrator_version":0,
    "version":"0.9.1"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/360009585.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"Version",
    "migrator_version":0,
    "version":"0.9.2"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/372682125.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"Version",
    "migrator_version":0,
    "version":"0.10.0"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/378415341.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"Version",
    "migrator_version":0,
    "version":"0.11.0"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/378481071.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"Version",
    "migrator_version":0,
    "version":"0.11.1"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/381421695.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"Version",
    "migrator_version":0,
    "version":"0.11.2"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/384630061.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"Version",
    "migrator_version":0,
    "version":"0.12.0"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/391604925.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"Version",
    "migrator_version":0,
    "version":"0.12.2"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR":{
    "head":{
     "ref":"<this_is_not_a_branch>"
    },
    "state":"closed"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"Version",
    "migrator_version":0,
    "version":"0.12.3"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  }
 ],
 "bad":false,
 "conda-forge.yml":{},
 "feedstock_name":"gwcelery",
 "hash_type":"sha256",
 "meta_yaml":{
  "about":{
   "description":"GWCelery is a simple and reliable package for annotating and orchestrating\nLIGO/Virgo alerts, built from widely used open source components.\n",
   "dev_url":"https://git.ligo.org/emfollow/gwcelery",
   "doc_url":"https://gwcelery.readthedocs.io/en/latest/",
   "home":"https://git.ligo.org/emfollow/gwcelery",
   "license":"GPL-2.0-or-later",
   "license_family":"GPL",
   "license_file":"LICENSE.rst",
   "summary":"Hipster pipeline for annotating LIGO events"
  },
  "build":{
   "entry_points":[
    "gwcelery = gwcelery:app.start",
    "gwcelery = gwcelery:app.start",
    "gwcelery = gwcelery:app.start"
   ],
   "noarch":"python",
   "number":"0",
   "script":"-m pip install . -vv"
  },
  "extra":{
   "recipe-maintainers":[
    "duncanmmacleod",
    "duncanmmacleod",
    "duncanmmacleod"
   ]
  },
  "package":{
   "name":"gwcelery",
   "version":"0.12.0"
  },
  "requirements":{
   "host":[
    "python >=3.6",
    "pip",
    "setuptools >=30.3.0",
    "python >=3.6",
    "pip",
    "setuptools >=30.3.0",
    "python >=3.6",
    "pip",
    "setuptools >=30.3.0"
   ],
   "run":[
    "bilby_pipe >=0.3.8",
    "celery >=4.4.0",
    "comet",
    "corner",
    "dnspython",
    "flask",
    "flask-caching",
    "gracedb-sdk >=0.1.4",
    "gwdatafind",
    "gwpy",
    "healpy",
    "imapclient",
    "jinja2",
    "lalsuite",
    "ligo-followup-advocate >=1.1.6",
    "ligo-gracedb >=2.3.0",
    "ligo-raven >=1.17",
    "ligo-segments",
    "ligo.skymap >=0.1.13",
    "lscsoft-glue",
    "lxml",
    "numpy",
    "p_astro 0.8.1",
    "pygcn >=0.1.19",
    "python >=3.6",
    "python-ligo-lw",
    "redis-py",
    "safe-netrc",
    "sentry-sdk",
    "service_identity",
    "sleek-lvalert >=0.0.4",
    "tornado >=5",
    "voeventlib >=1.2",
    "werkzeug >=0.15.0,<1.0.0a0",
    "bilby_pipe >=0.3.8",
    "celery >=4.4.0",
    "comet",
    "corner",
    "dnspython",
    "flask",
    "flask-caching",
    "gracedb-sdk >=0.1.4",
    "gwdatafind",
    "gwpy",
    "healpy",
    "imapclient",
    "jinja2",
    "lalsuite",
    "ligo-followup-advocate >=1.1.6",
    "ligo-gracedb >=2.3.0",
    "ligo-raven >=1.17",
    "ligo-segments",
    "ligo.skymap >=0.1.13",
    "lscsoft-glue",
    "lxml",
    "numpy",
    "p_astro 0.8.1",
    "pygcn >=0.1.19",
    "python >=3.6",
    "python-ligo-lw",
    "redis-py",
    "safe-netrc",
    "sentry-sdk",
    "service_identity",
    "sleek-lvalert >=0.0.4",
    "tornado >=5",
    "voeventlib >=1.2",
    "werkzeug >=0.15.0,<1.0.0a0",
    "bilby_pipe >=0.3.8",
    "celery >=4.4.0",
    "comet",
    "corner",
    "dnspython",
    "flask",
    "flask-caching",
    "gracedb-sdk >=0.1.4",
    "gwdatafind",
    "gwpy",
    "healpy",
    "imapclient",
    "jinja2",
    "lalsuite",
    "ligo-followup-advocate >=1.1.6",
    "ligo-gracedb >=2.3.0",
    "ligo-raven >=1.17",
    "ligo-segments",
    "ligo.skymap >=0.1.13",
    "lscsoft-glue",
    "lxml",
    "numpy",
    "p_astro 0.8.1",
    "pygcn >=0.1.19",
    "python >=3.6",
    "python-ligo-lw",
    "redis-py",
    "safe-netrc",
    "sentry-sdk",
    "service_identity",
    "sleek-lvalert >=0.0.4",
    "tornado >=5",
    "voeventlib >=1.2",
    "werkzeug >=0.15.0,<1.0.0a0"
   ]
  },
  "source":{
   "sha256":"0490ec218534c778cfb113dd03f90049b43caf3a1debc0b4bbc7d03db3811e9b",
   "url":"https://pypi.io/packages/source/g/gwcelery/gwcelery-0.12.0.tar.gz"
  },
  "test":{
   "commands":[
    "gwcelery --version",
    "python -m pytest --pyargs gwcelery",
    "gwcelery --version",
    "python -m pytest --pyargs gwcelery",
    "gwcelery --version",
    "python -m pytest --pyargs gwcelery"
   ],
   "imports":[
    "gwcelery",
    "gwcelery",
    "gwcelery"
   ],
   "requires":[
    "openblas",
    "openssh",
    "pytest >=3.0",
    "pytest-flask",
    "pytest-socket",
    "openblas",
    "openssh",
    "pytest >=3.0",
    "pytest-flask",
    "pytest-socket",
    "openblas",
    "openssh",
    "pytest >=3.0",
    "pytest-flask",
    "pytest-socket"
   ]
  }
 },
 "name":"gwcelery",
 "new_version":"0.12.3",
 "pinning_version":"2020.03.24",
 "raw_meta_yaml":"{% set name = \"gwcelery\" %}\n{% set version = \"0.12.0\" %}\n\npackage:\n  name: {{ name|lower }}\n  version: {{ version }}\n\nsource:\n  url: https://pypi.io/packages/source/{{ name[0] }}/{{ name }}/{{ name }}-{{ version }}.tar.gz\n  sha256: 0490ec218534c778cfb113dd03f90049b43caf3a1debc0b4bbc7d03db3811e9b\n\nbuild:\n  entry_points:\n    - gwcelery = gwcelery:app.start\n  noarch: python\n  number: 0\n  script: {{ PYTHON }} -m pip install . -vv\n\nrequirements:\n  host:\n    - python >=3.6\n    - pip\n    - setuptools >=30.3.0\n  run:\n    - bilby_pipe >=0.3.8\n    - celery >=4.4.0\n    - comet\n    - corner\n    - dnspython\n    - flask\n    - flask-caching\n    - gracedb-sdk >=0.1.4\n    - gwdatafind\n    - gwpy\n    - healpy\n    - imapclient\n    - jinja2\n    - lalsuite\n    - ligo-followup-advocate >=1.1.6\n    - ligo-gracedb >=2.3.0\n    - ligo-raven >=1.17\n    - ligo-segments\n    - ligo.skymap >=0.1.13\n    - lscsoft-glue\n    - lxml\n    - numpy\n    - p_astro 0.8.1\n    - pygcn >=0.1.19\n    - python >=3.6\n    - python-ligo-lw\n    - redis-py\n    - safe-netrc\n    - sentry-sdk\n    - service_identity\n    - sleek-lvalert >=0.0.4\n    - tornado >=5\n    - voeventlib >=1.2\n    - werkzeug >=0.15.0,<1.0.0a0\n\ntest:\n  imports:\n    - gwcelery\n  requires:\n    # for scikit-learn\n    - openblas\n    # for mpi\n    - openssh\n    # for gwcelery's test suite\n    - pytest >=3.0\n    - pytest-flask\n    - pytest-socket\n  commands:\n    - gwcelery --version\n    - python -m pytest --pyargs gwcelery\n\nabout:\n  home: https://git.ligo.org/emfollow/gwcelery\n  dev_url: https://git.ligo.org/emfollow/gwcelery\n  doc_url: https://gwcelery.readthedocs.io/en/latest/\n  license: GPL-2.0-or-later\n  license_family: GPL\n  license_file: LICENSE.rst\n  summary: Hipster pipeline for annotating LIGO events\n  description: |\n    GWCelery is a simple and reliable package for annotating and orchestrating\n    LIGO/Virgo alerts, built from widely used open source components.\n\nextra:\n  recipe-maintainers:\n    - duncanmmacleod\n",
 "req":{
  "__set__":true,
  "elements":[
   "bilby_pipe",
   "celery",
   "comet",
   "corner",
   "dnspython",
   "flask",
   "flask-caching",
   "gracedb-sdk",
   "gwdatafind",
   "gwpy",
   "healpy",
   "imapclient",
   "jinja2",
   "lalsuite",
   "ligo-followup-advocate",
   "ligo-gracedb",
   "ligo-raven",
   "ligo-segments",
   "ligo.skymap",
   "lscsoft-glue",
   "lxml",
   "numpy",
   "p_astro",
   "pip",
   "pygcn",
   "python",
   "python-ligo-lw",
   "redis-py",
   "safe-netrc",
   "sentry-sdk",
   "service_identity",
   "setuptools",
   "sleek-lvalert",
   "tornado",
   "voeventlib",
   "werkzeug"
  ]
 },
 "requirements":{
  "build":{
   "__set__":true,
   "elements":[]
  },
  "host":{
   "__set__":true,
   "elements":[
    "pip",
    "python",
    "setuptools"
   ]
  },
  "run":{
   "__set__":true,
   "elements":[
    "bilby_pipe",
    "celery",
    "comet",
    "corner",
    "dnspython",
    "flask",
    "flask-caching",
    "gracedb-sdk",
    "gwdatafind",
    "gwpy",
    "healpy",
    "imapclient",
    "jinja2",
    "lalsuite",
    "ligo-followup-advocate",
    "ligo-gracedb",
    "ligo-raven",
    "ligo-segments",
    "ligo.skymap",
    "lscsoft-glue",
    "lxml",
    "numpy",
    "p_astro",
    "pygcn",
    "python",
    "python-ligo-lw",
    "redis-py",
    "safe-netrc",
    "sentry-sdk",
    "service_identity",
    "sleek-lvalert",
    "tornado",
    "voeventlib",
    "werkzeug"
   ]
  },
  "test":{
   "__set__":true,
   "elements":[
    "openblas",
    "openssh",
    "pytest",
    "pytest-flask",
    "pytest-socket"
   ]
  }
 },
 "smithy_version":"No azure token. Create a token and\nput it in ~/.conda-smithy/azure.token\n3.6.15",
 "strong_exports":false,
 "total_requirements":{
  "build":{
   "__set__":true,
   "elements":[]
  },
  "host":{
   "__set__":true,
   "elements":[
    "pip",
    "python >=3.6",
    "setuptools >=30.3.0"
   ]
  },
  "run":{
   "__set__":true,
   "elements":[
    "bilby_pipe >=0.3.8",
    "celery >=4.4.0",
    "comet",
    "corner",
    "dnspython",
    "flask",
    "flask-caching",
    "gracedb-sdk >=0.1.4",
    "gwdatafind",
    "gwpy",
    "healpy",
    "imapclient",
    "jinja2",
    "lalsuite",
    "ligo-followup-advocate >=1.1.6",
    "ligo-gracedb >=2.3.0",
    "ligo-raven >=1.17",
    "ligo-segments",
    "ligo.skymap >=0.1.13",
    "lscsoft-glue",
    "lxml",
    "numpy",
    "p_astro 0.8.1",
    "pygcn >=0.1.19",
    "python >=3.6",
    "python-ligo-lw",
    "redis-py",
    "safe-netrc",
    "sentry-sdk",
    "service_identity",
    "sleek-lvalert >=0.0.4",
    "tornado >=5",
    "voeventlib >=1.2",
    "werkzeug >=0.15.0,<1.0.0a0"
   ]
  },
  "test":{
   "__set__":true,
   "elements":[
    "openblas",
    "openssh",
    "pytest >=3.0",
    "pytest-flask",
    "pytest-socket"
   ]
  }
 },
 "url":"https://pypi.io/packages/source/g/gwcelery/gwcelery-0.2.5.tar.gz",
 "version":"0.12.0"
}