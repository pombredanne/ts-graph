{
 "PRed":[
  {
   "PR":{
    "__lazy_json__":"pr_json/335861341.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"MigrationYaml",
    "migrator_object_version":1,
    "migrator_version":0,
    "name":"python38"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/392540484.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"MigrationYaml",
    "migrator_object_version":1,
    "migrator_version":0,
    "name":"pypy"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  }
 ],
 "bad":false,
 "conda-forge.yml":{
  "provider":{
   "win":"azure"
  }
 },
 "feedstock_name":"pcaspy",
 "hash_type":"sha256",
 "meta_yaml":{
  "about":{
   "description":"PCASpy provides not only the low level python binding to\nEPICS Portable Channel Access Server but also the necessary\nhigh level abstraction to ease the server tool programming.\n",
   "dev_url":"https://github.com/paulscherrerinstitute/pcaspy",
   "doc_url":"https://pcaspy.readthedocs.io/",
   "home":"https://github.com/paulscherrerinstitute/pcaspy/wiki",
   "license":"BSD 3-clause",
   "license_family":"BSD",
   "license_file":"LICENSE",
   "summary":"Portable Channel Access Server in Python"
  },
  "build":{
   "number":"0",
   "script":" -m pip install . --no-deps --ignore-installed --no-cache-dir -vvv"
  },
  "extra":{
   "recipe-maintainers":[
    "duncanmmacleod",
    "duncanmmacleod",
    "duncanmmacleod"
   ]
  },
  "package":{
   "name":"pcaspy",
   "version":"0.7.2"
  },
  "requirements":{
   "build":[
    "c_compiler_stub",
    "cxx_compiler_stub",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "c_compiler_stub",
    "cxx_compiler_stub"
   ],
   "host":[
    "epics-base",
    "pip",
    "python",
    "setuptools",
    "swig",
    "epics-base",
    "pip",
    "python",
    "setuptools",
    "swig",
    "epics-base",
    "pip",
    "python",
    "setuptools",
    "swig"
   ],
   "run":[
    "epics-base",
    "python",
    "epics-base",
    "python",
    "epics-base",
    "python"
   ]
  },
  "source":{
   "patches":null,
   "sha256":"823e5b3c25dcb73795730aee4f656e21fb4f590f866fcf6adb2d56cc6b5ced3d",
   "url":"https://pypi.io/packages/source/p/pcaspy/pcaspy-0.7.2.tar.gz"
  },
  "test":{
   "commands":[
    "python test/gddTest.py",
    "python test/gddTest.py",
    "python test/gddTest.py"
   ],
   "imports":[
    "pcaspy",
    "pcaspy.alarm",
    "pcaspy.cas",
    "pcaspy.driver",
    "pcaspy.tools",
    "pcaspy",
    "pcaspy.alarm",
    "pcaspy.cas",
    "pcaspy.driver",
    "pcaspy.tools",
    "pcaspy",
    "pcaspy.alarm",
    "pcaspy.cas",
    "pcaspy.driver",
    "pcaspy.tools"
   ],
   "requires":[
    "numpy",
    "numpy",
    "numpy"
   ],
   "source_files":[
    "test/gddTest.py",
    "test/gddTest.py",
    "test/gddTest.py"
   ]
  }
 },
 "name":"pcaspy",
 "new_version":"0.7.2",
 "pinning_version":"2020.03.23",
 "raw_meta_yaml":"{% set version = \"0.7.2\" %}\n\npackage:\n  name: pcaspy\n  version: {{ version }}\n\nsource:\n  url: https://pypi.io/packages/source/p/pcaspy/pcaspy-{{ version }}.tar.gz\n  sha256: 823e5b3c25dcb73795730aee4f656e21fb4f590f866fcf6adb2d56cc6b5ced3d\n  patches:\n    # the pypi tarball is built by conda-build on linux, so we need to undo a patch\n    # that should only have been applied for linux builds, see\n    # https://github.com/paulscherrerinstitute/pcaspy/blob/69fa94055838e8a7fbbc6dffaf97f535493dbf85/conda-recipe/readline.patch\n    - readline.patch  # [win]\n\nbuild:\n  number: 0\n  script: \"{{ PYTHON }} -m pip install . --no-deps --ignore-installed --no-cache-dir -vvv\"  # [not win]\n\nrequirements:\n  build:\n    - {{ compiler('c') }}\n    - {{ compiler('cxx') }}\n  host:\n    - epics-base\n    - pip\n    - python\n    - setuptools\n    - swig\n  run:\n    - epics-base\n    - python\n\ntest:\n  imports:\n    - pcaspy\n    - pcaspy.alarm\n    - pcaspy.cas\n    - pcaspy.driver\n    - pcaspy.tools\n  requires:\n    - numpy\n  source_files:\n    - test/gddTest.py\n  commands:\n    - python test/gddTest.py\n\nabout:\n  home: https://github.com/paulscherrerinstitute/pcaspy/wiki\n  doc_url: https://pcaspy.readthedocs.io/\n  dev_url: https://github.com/paulscherrerinstitute/pcaspy\n  license: BSD 3-clause\n  license_family: BSD\n  license_file: LICENSE\n  summary: Portable Channel Access Server in Python\n  description: |\n    PCASpy provides not only the low level python binding to\n    EPICS Portable Channel Access Server but also the necessary\n    high level abstraction to ease the server tool programming.\n\nextra:\n  recipe-maintainers:\n    - duncanmmacleod\n",
 "req":{
  "__set__":true,
  "elements":[
   "c_compiler_stub",
   "cxx_compiler_stub",
   "epics-base",
   "pip",
   "python",
   "setuptools",
   "swig"
  ]
 },
 "requirements":{
  "build":{
   "__set__":true,
   "elements":[
    "c_compiler_stub",
    "cxx_compiler_stub"
   ]
  },
  "host":{
   "__set__":true,
   "elements":[
    "epics-base",
    "pip",
    "python",
    "setuptools",
    "swig"
   ]
  },
  "run":{
   "__set__":true,
   "elements":[
    "epics-base",
    "python"
   ]
  },
  "test":{
   "__set__":true,
   "elements":[
    "numpy"
   ]
  }
 },
 "smithy_version":"No azure token. Create a token and\nput it in ~/.conda-smithy/azure.token\n3.6.15",
 "strong_exports":false,
 "total_requirements":{
  "build":{
   "__set__":true,
   "elements":[
    "c_compiler_stub",
    "cxx_compiler_stub"
   ]
  },
  "host":{
   "__set__":true,
   "elements":[
    "epics-base",
    "pip",
    "python",
    "setuptools",
    "swig"
   ]
  },
  "run":{
   "__set__":true,
   "elements":[
    "epics-base",
    "python"
   ]
  },
  "test":{
   "__set__":true,
   "elements":[
    "numpy"
   ]
  }
 },
 "url":"https://pypi.io/packages/source/p/pcaspy/pcaspy-0.7.2.tar.gz",
 "version":"0.7.2"
}