{
 "PRed":[
  {
   "PR":{
    "__lazy_json__":"pr_json/198445589.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"Compiler",
    "migrator_version":0
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/221009818.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"CompilerRebuild",
    "migrator_version":1,
    "name":"Python 3.7, GCC 7, R 3.5.1, openBLAS 0.3.2"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/239961372.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"Version",
    "migrator_version":0,
    "version":"4.0.0"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/285662642.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"Rebuild",
    "migrator_version":0,
    "name":"hdf5-1.10.5"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/308395170.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"GFortranOSXRebuild",
    "migrator_version":0,
    "name":"fortran_compiler_stub-7"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/335864322.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"MigrationYaml",
    "migrator_object_version":1,
    "migrator_version":0,
    "name":"python38"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/391324370.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"MigrationYaml",
    "migrator_object_version":1,
    "migrator_version":0,
    "name":"pypy"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/404434438.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"MigrationYaml",
    "migrator_object_version":1,
    "migrator_version":0,
    "name":"hdf51106"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  }
 ],
 "bad":false,
 "conda-forge.yml":{},
 "feedstock_name":"libmed",
 "hash_type":"sha256",
 "meta_yaml":{
  "about":{
   "description":"The purpose of the MED module is to provide a standard for storing and recovering computer data associated to numerical meshes and fields, and to facilitate the exchange between codes and solvers.\n",
   "dev_url":"http://www.salome-platform.org/",
   "doc_url":"http://www.salome-platform.org/",
   "home":"https://www.salome-platform.org/user-section/about/med",
   "license":"LGPLv3.0",
   "license_family":"LGPL",
   "license_file":"COPYING",
   "summary":"MED : interoperable format for data interchange between mesh based solvers."
  },
  "build":{
   "number":"1",
   "skip":true
  },
  "extra":{
   "recipe-maintainers":[
    "looooo",
    "ldallolio-irt",
    "looooo",
    "ldallolio-irt",
    "looooo",
    "ldallolio-irt"
   ]
  },
  "package":{
   "name":"libmed",
   "version":"4.0.0"
  },
  "requirements":{
   "build":[
    "ninja",
    "cmake",
    "fortran_compiler_stub",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "ninja",
    "cmake",
    "fortran_compiler_stub",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "ninja",
    "cmake",
    "fortran_compiler_stub",
    "c_compiler_stub",
    "cxx_compiler_stub"
   ],
   "host":[
    "hdf5 1.10.3|1.10.4",
    "zlib",
    "python",
    "swig",
    "hdf5 1.10.3|1.10.4",
    "zlib",
    "python",
    "swig",
    "hdf5 1.10.3|1.10.4",
    "zlib",
    "python",
    "swig"
   ],
   "run":[
    "hdf5 1.10.3|1.10.4",
    "zlib",
    "python",
    "hdf5 1.10.3|1.10.4",
    "zlib",
    "python",
    "hdf5 1.10.3|1.10.4",
    "zlib",
    "python"
   ]
  },
  "source":{
   "fn":"libmed 4.0.0.tar.gz",
   "sha256":"a474e90b5882ce69c5e9f66f6359c53b8b73eb448c5f631fa96e8cd2c14df004",
   "url":"https://files.salome-platform.org/Salome/other/med-4.0.0.tar.gz"
  },
  "test":{
   "imports":[
    "med",
    "med",
    "med"
   ]
  }
 },
 "name":"libmed",
 "new_version":false,
 "pinning_version":"2020.04.16.07.55.54",
 "raw_meta_yaml":"{% set name = \"libmed\" %}\n{% set version = \"4.0.0\" %}\n{% set sha256 = \"a474e90b5882ce69c5e9f66f6359c53b8b73eb448c5f631fa96e8cd2c14df004\" %}\n\n\npackage:\n    name: libmed\n    version: 4.0.0\n\nsource:\n    fn: {{ name }} {{ version }}.tar.gz\n    url: https://files.salome-platform.org/Salome/other/med-{{ version }}.tar.gz\n    sha256: {{ sha256  }}\n    #git_url: https://salsa.debian.org/science-team/med-fichier\n    #git_rev: 8a0b0d21d4bac79772797b0a800cf4d5bf77bc32    \n\nbuild:\n    number: 1\n    skip: True  # [py2k or osx or win]\n\nrequirements:\n    build:\n        - ninja\n        - cmake\n        - {{ compiler('fortran') }}\n        - {{ compiler('c') }}\n        - {{ compiler('cxx') }}\n    host:\n        - hdf5 1.10.3|1.10.4\n        - zlib\n        - python\n        - swig\n    run:\n        - hdf5 1.10.3|1.10.4\n        - zlib\n        - python\n\n\ntest:\n    imports:\n        - med\n\nabout:\n    home: https://www.salome-platform.org/user-section/about/med\n    license: LGPLv3.0\n    license_family: LGPL\n    license_file: COPYING\n    summary: 'MED : interoperable format for data interchange between mesh based solvers.'\n    description: |\n        The purpose of the MED module is to provide a standard for storing and recovering computer data associated to numerical meshes and fields, and to facilitate the exchange between codes and solvers.\n    doc_url: http://www.salome-platform.org/\n    dev_url: http://www.salome-platform.org/\n\nextra:\n    recipe-maintainers:\n        - looooo\n        - ldallolio-irt\n",
 "req":{
  "__set__":true,
  "elements":[
   "c_compiler_stub",
   "cmake",
   "cxx_compiler_stub",
   "fortran_compiler_stub",
   "hdf5",
   "ninja",
   "python",
   "swig",
   "zlib"
  ]
 },
 "requirements":{
  "build":{
   "__set__":true,
   "elements":[
    "c_compiler_stub",
    "cmake",
    "cxx_compiler_stub",
    "fortran_compiler_stub",
    "ninja"
   ]
  },
  "host":{
   "__set__":true,
   "elements":[
    "hdf5",
    "python",
    "swig",
    "zlib"
   ]
  },
  "run":{
   "__set__":true,
   "elements":[
    "hdf5",
    "python",
    "zlib"
   ]
  },
  "test":{
   "__set__":true,
   "elements":[]
  }
 },
 "smithy_version":"No azure token. Create a token and\nput it in ~/.conda-smithy/azure.token\n3.6.16",
 "strong_exports":false,
 "total_requirements":{
  "build":{
   "__set__":true,
   "elements":[
    "c_compiler_stub",
    "cmake",
    "cxx_compiler_stub",
    "fortran_compiler_stub",
    "ninja"
   ]
  },
  "host":{
   "__set__":true,
   "elements":[
    "hdf5 1.10.3|1.10.4",
    "python",
    "swig",
    "zlib"
   ]
  },
  "run":{
   "__set__":true,
   "elements":[
    "hdf5 1.10.3|1.10.4",
    "python",
    "zlib"
   ]
  },
  "test":{
   "__set__":true,
   "elements":[]
  }
 },
 "url":"http://files.salome-platform.org/Salome/other/med-3.3.1.tar.gz",
 "version":"4.0.0"
}