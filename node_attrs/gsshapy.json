{
 "PRed":[
  {
   "data":{
    "bot_rerun":false,
    "migrator_name":"Version",
    "migrator_version":0,
    "version":"2.3.9"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "data":{
    "bot_rerun":false,
    "migrator_name":"Rebuild",
    "migrator_version":0,
    "name":"gdal-3.0.1"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  }
 ],
 "bad":false,
 "conda-forge.yml":{
  "min_py_ver":"36",
  "provider":{
   "win":"azure"
  }
 },
 "feedstock_name":"gsshapy",
 "hash_type":"sha256",
 "meta_yaml":{
  "about":{
   "description":"GsshaPy is an object relational model (ORM) for the\nGridded Surface Subsurface Hydrologic Analysis (GSSHA) model\nand a toolkit to convert gridded input into GSSHA input.\nThe purpose of GsshaPy is to expose GSSHA files to a web\ndevelopment environment by reading them into an SQL database.\nThe files can also be written back to file for model execution.\n",
   "dev_url":"https://github.com/ci-water/gsshapy",
   "doc_url":"http://gsshapy.readthedocs.io",
   "home":"http://github.com/ci-water/gsshapy",
   "license":"BSD-3-Clause",
   "license_family":"BSD",
   "license_file":"LICENSE.txt",
   "summary":"Object Relational Model for GSSHA model files and a toolkit to convert gridded input into GSSHA input."
  },
  "build":{
   "noarch":"python",
   "number":"1",
   "script":"-m pip install --no-deps --ignore-installed ."
  },
  "extra":{
   "recipe-maintainers":[
    "dharhas",
    "kajiglet",
    "sdc50",
    "swainn",
    "snowman2",
    "dharhas",
    "kajiglet",
    "sdc50",
    "swainn",
    "snowman2",
    "dharhas",
    "kajiglet",
    "sdc50",
    "swainn",
    "snowman2"
   ]
  },
  "package":{
   "name":"gsshapy",
   "version":"2.3.9"
  },
  "requirements":{
   "build":[
    "pip",
    "python>=3.6",
    "setuptools",
    "pip",
    "python>=3.6",
    "setuptools",
    "pip",
    "python>=3.6",
    "setuptools"
   ],
   "host":[
    "python>=3.6",
    "pip",
    "setuptools",
    "python>=3.6",
    "pip",
    "setuptools",
    "python>=3.6",
    "pip",
    "setuptools"
   ],
   "run":[
    "python>=3.6",
    "affine",
    "appdirs",
    "gdal",
    "geopandas",
    "mapkit>=1.2.6",
    "pangaea",
    "psycopg2",
    "pyyaml",
    "rapidpy",
    "timezonefinder",
    "utm",
    "wrf-python",
    "python>=3.6",
    "affine",
    "appdirs",
    "gdal",
    "geopandas",
    "mapkit>=1.2.6",
    "pangaea",
    "psycopg2",
    "pyyaml",
    "rapidpy",
    "timezonefinder",
    "utm",
    "wrf-python",
    "python>=3.6",
    "affine",
    "appdirs",
    "gdal",
    "geopandas",
    "mapkit>=1.2.6",
    "pangaea",
    "psycopg2",
    "pyyaml",
    "rapidpy",
    "timezonefinder",
    "utm",
    "wrf-python"
   ]
  },
  "source":{
   "fn":"gsshapy-2.3.9.tar.gz",
   "sha256":"13b47b450d0cc5e9053b83211dac8cf2905991a1626bda7c6e9219a7e70ceb50",
   "url":"https://pypi.io/packages/source/g/gsshapy/gsshapy-2.3.9.tar.gz"
  },
  "test":{
   "imports":[
    "gsshapy",
    "gsshapy.orm",
    "gsshapy.orm.file_io",
    "gsshapy.orm.prj",
    "gsshapy.lib",
    "gsshapy.lib.db_tools",
    "gsshapy.grid",
    "gsshapy.grid.grid_to_gssha",
    "gsshapy.grid.hrrr_to_gssha",
    "gsshapy.grid.era_to_gssha",
    "gsshapy.grid.nwm_to_gssha",
    "gsshapy.modeling",
    "gsshapy.modeling.event",
    "gsshapy.modeling.framework",
    "gsshapy.modeling.model",
    "gsshapy",
    "gsshapy.orm",
    "gsshapy.orm.file_io",
    "gsshapy.orm.prj",
    "gsshapy.lib",
    "gsshapy.lib.db_tools",
    "gsshapy.grid",
    "gsshapy.grid.grid_to_gssha",
    "gsshapy.grid.hrrr_to_gssha",
    "gsshapy.grid.era_to_gssha",
    "gsshapy.grid.nwm_to_gssha",
    "gsshapy.modeling",
    "gsshapy.modeling.event",
    "gsshapy.modeling.framework",
    "gsshapy.modeling.model",
    "gsshapy",
    "gsshapy.orm",
    "gsshapy.orm.file_io",
    "gsshapy.orm.prj",
    "gsshapy.lib",
    "gsshapy.lib.db_tools",
    "gsshapy.grid",
    "gsshapy.grid.grid_to_gssha",
    "gsshapy.grid.hrrr_to_gssha",
    "gsshapy.grid.era_to_gssha",
    "gsshapy.grid.nwm_to_gssha",
    "gsshapy.modeling",
    "gsshapy.modeling.event",
    "gsshapy.modeling.framework",
    "gsshapy.modeling.model"
   ]
  }
 },
 "name":"gsshapy",
 "new_version":"2.3.9",
 "pinning_version":"2019.08.11",
 "raw_meta_yaml":"{% set name = \"gsshapy\" %}\n{% set version = \"2.3.9\" %}\n{% set sha256 = \"13b47b450d0cc5e9053b83211dac8cf2905991a1626bda7c6e9219a7e70ceb50\" %}\n\npackage:\n  name: {{ name|lower }}\n  version: {{ version }}\n\nsource:\n  fn: {{ name }}-{{ version }}.tar.gz\n  url: https://pypi.io/packages/source/{{ name[0] }}/{{ name }}/{{ name }}-{{ version }}.tar.gz\n  sha256: {{ sha256 }}\n\nbuild:\n  number: 1\n  noarch: python\n  script: {{ PYTHON }} -m pip install --no-deps --ignore-installed .\n\nrequirements:\n  build:\n    - pip\n    - python>=3.6\n    - setuptools\n  host:\n    - python>=3.6\n    - pip\n    - setuptools\n  run:\n    - python>=3.6\n    - affine\n    - appdirs\n    - gdal\n    - geopandas\n    - mapkit>=1.2.6\n    - pangaea\n    - psycopg2\n    - pyyaml\n    - rapidpy\n    - timezonefinder\n    - utm\n    - wrf-python\n\ntest:\n  imports:\n    - gsshapy\n    - gsshapy.orm\n    - gsshapy.orm.file_io\n    - gsshapy.orm.prj\n    - gsshapy.lib\n    - gsshapy.lib.db_tools\n    - gsshapy.grid\n    - gsshapy.grid.grid_to_gssha\n    - gsshapy.grid.hrrr_to_gssha\n    - gsshapy.grid.era_to_gssha\n    - gsshapy.grid.nwm_to_gssha\n    - gsshapy.modeling\n    - gsshapy.modeling.event\n    - gsshapy.modeling.framework\n    - gsshapy.modeling.model\n\nabout:\n  home: http://github.com/ci-water/gsshapy\n  license: BSD-3-Clause\n  license_family: BSD\n  license_file: LICENSE.txt\n  summary: 'Object Relational Model for GSSHA model files and a toolkit to convert gridded input into GSSHA input.'\n  description: |\n    GsshaPy is an object relational model (ORM) for the\n    Gridded Surface Subsurface Hydrologic Analysis (GSSHA) model\n    and a toolkit to convert gridded input into GSSHA input.\n    The purpose of GsshaPy is to expose GSSHA files to a web\n    development environment by reading them into an SQL database.\n    The files can also be written back to file for model execution.\n  doc_url: http://gsshapy.readthedocs.io\n  dev_url: https://github.com/ci-water/gsshapy\n\nextra:\n  recipe-maintainers:\n    - dharhas\n    - kajiglet\n    - sdc50\n    - swainn\n    - snowman2\n",
 "req":{
  "__set__":true,
  "elements":[
   "affine",
   "appdirs",
   "gdal",
   "geopandas",
   "mapkit",
   "pangaea",
   "pip",
   "psycopg2",
   "python",
   "pyyaml",
   "rapidpy",
   "setuptools",
   "timezonefinder",
   "utm",
   "wrf-python"
  ]
 },
 "requirements":{
  "build":{
   "__set__":true,
   "elements":[
    "pip",
    "python",
    "setuptools"
   ]
  },
  "host":{
   "__set__":true,
   "elements":[
    "pip",
    "python",
    "setuptools"
   ]
  },
  "run":{
   "__set__":true,
   "elements":[
    "affine",
    "appdirs",
    "gdal",
    "geopandas",
    "mapkit",
    "pangaea",
    "psycopg2",
    "python",
    "pyyaml",
    "rapidpy",
    "timezonefinder",
    "utm",
    "wrf-python"
   ]
  },
  "test":{
   "__set__":true,
   "elements":[]
  }
 },
 "smithy_version":"3.4.1",
 "strong_exports":false,
 "total_requirements":{
  "build":{
   "__set__":true,
   "elements":[
    "pip",
    "python>=3.6",
    "setuptools"
   ]
  },
  "host":{
   "__set__":true,
   "elements":[
    "pip",
    "python>=3.6",
    "setuptools"
   ]
  },
  "run":{
   "__set__":true,
   "elements":[
    "affine",
    "appdirs",
    "gdal",
    "geopandas",
    "mapkit>=1.2.6",
    "pangaea",
    "psycopg2",
    "python>=3.6",
    "pyyaml",
    "rapidpy",
    "timezonefinder",
    "utm",
    "wrf-python"
   ]
  },
  "test":{
   "__set__":true,
   "elements":[]
  }
 },
 "url":"https://pypi.io/packages/source/g/gsshapy/gsshapy-2.3.9.tar.gz",
 "version":"2.3.9"
}