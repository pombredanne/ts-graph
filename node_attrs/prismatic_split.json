{
 "PRed":[
  {
   "PR":{
    "id":"024fdd3c-63fd-4f66-8e68-6bc496dfc495",
    "merged_at":"never issued",
    "state":"closed"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"MigrationYaml",
    "migrator_object_version":1,
    "migrator_version":0,
    "name":"python38"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/378510769.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"MigrationYaml",
    "migrator_object_version":2,
    "migrator_version":0,
    "name":"boost172"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  }
 ],
 "bad":false,
 "conda-forge.yml":{},
 "feedstock_name":"prismatic_split",
 "hash_type":"sha256",
 "meta_yaml":{
  "about":{
   "description":"CPU / GPU software for fast simulation of Scanning Transmission Electron Microscopy (STEM) experiments\n",
   "dev_url":"https://github.com/prism-em/prismatic",
   "home":"http://prism-em.com/",
   "license":"GPL-3.0-only",
   "license_file":"LICENSE",
   "summary":"CPU / GPU software for fast simulation of Scanning Transmission Electron Microscopy (STEM) experiments"
  },
  "build":{
   "number":"5"
  },
  "extra":{
   "recipe-maintainers":[
    "ericpre",
    "douglowe",
    "tschoonj",
    "ericpre",
    "douglowe",
    "tschoonj",
    "ericpre",
    "douglowe",
    "tschoonj"
   ]
  },
  "outputs":[
   {
    "build":{
     "number":"5",
     "string":"cpu_pyh_5"
    },
    "name":"prismatic",
    "requirements":{
     "host":[
      "python"
     ],
     "run":[
      "prismatic_cli",
      "prismatic_gui",
      "pyprismatic"
     ]
    },
    "test":{
     "commands":[
      "where prismatic-gui",
      "where prismatic",
      "python -c \"import pyprismatic; pyprismatic.demo()\""
     ]
    }
   },
   {
    "build":{
     "script":"\\build.bat cli",
     "string":"cpu_h_5"
    },
    "name":"prismatic_cli",
    "requirements":{
     "build":[
      "c_compiler_stub",
      "cxx_compiler_stub",
      "cmake",
      "pkg-config"
     ],
     "host":[
      "boost-cpp",
      "hdf5",
      "fftw"
     ],
     "ignore_run_exports":[
      "boost-cpp"
     ],
     "run":[
      "hdf5",
      "fftw"
     ]
    },
    "test":{
     "commands":[
      "prismatic -i SI100.XYZ",
      "prismatic-double -i SI100.XYZ"
     ],
     "source_files":[
      "SI100.XYZ"
     ]
    }
   },
   {
    "build":{
     "script":"\\build.bat gui",
     "string":"cpu_h_5"
    },
    "name":"prismatic_gui",
    "requirements":{
     "build":[
      "c_compiler_stub",
      "cxx_compiler_stub",
      "cmake",
      "pkg-config"
     ],
     "host":[
      "boost-cpp",
      "hdf5",
      "fftw",
      "qt"
     ],
     "ignore_run_exports":[
      "boost-cpp"
     ],
     "run":[
      "hdf5",
      "fftw",
      "qt"
     ]
    },
    "test":{
     "commands":[
      "where prismatic-gui",
      "if not exist %PREFIX%\\\\Menu\\\\prismatic_gui.json exit 1",
      "if not exist %PREFIX%\\\\Menu\\\\prismatic.ico exit 1"
     ]
    }
   },
   {
    "build":{
     "script":"\\build_pyprismatic.bat",
     "string":"py_cpu_h_5"
    },
    "name":"pyprismatic",
    "requirements":{
     "build":[
      "c_compiler_stub",
      "cxx_compiler_stub",
      "cmake",
      "pkg-config"
     ],
     "host":[
      "setuptools",
      "python",
      "boost",
      "hdf5",
      "fftw",
      "h5py"
     ],
     "ignore_run_exports":[
      "boost"
     ],
     "run":[
      "python",
      "numpy",
      "fftw",
      "h5py"
     ]
    },
    "test":{
     "commands":[
      "python -c \"import pyprismatic; pyprismatic.demo()\""
     ]
    }
   },
   {
    "build":{
     "number":"5",
     "string":"cpu_pyh_5"
    },
    "name":"prismatic",
    "requirements":{
     "host":[
      "python"
     ],
     "run":[
      "prismatic_cli",
      "prismatic_gui",
      "pyprismatic"
     ]
    },
    "test":{
     "commands":[
      "test -f $PREFIX/Applications/prismatic-gui.app/Contents/MacOS/prismatic-gui",
      "python -c \"import pyprismatic; pyprismatic.demo()\""
     ]
    }
   },
   {
    "build":{
     "script":"bash ${RECIPE_DIR}/combined_build_install.sh cli",
     "string":"cpu_h_5"
    },
    "name":"prismatic_cli",
    "requirements":{
     "build":[
      "c_compiler_stub",
      "cxx_compiler_stub",
      "make",
      "cmake",
      "pkg-config"
     ],
     "host":[
      "boost-cpp",
      "hdf5",
      "fftw"
     ],
     "ignore_run_exports":[
      "boost-cpp"
     ],
     "run":[
      "hdf5",
      "fftw"
     ]
    },
    "test":{
     "commands":[
      "prismatic -i SI100.XYZ",
      "prismatic-double -i SI100.XYZ"
     ],
     "source_files":[
      "SI100.XYZ"
     ]
    }
   },
   {
    "build":{
     "script":"bash ${RECIPE_DIR}/combined_build_install.sh gui",
     "string":"cpu_h_5"
    },
    "name":"prismatic_gui",
    "requirements":{
     "build":[
      "c_compiler_stub",
      "cxx_compiler_stub",
      "make",
      "cmake",
      "pkg-config"
     ],
     "host":[
      "boost-cpp",
      "hdf5",
      "fftw",
      "qt"
     ],
     "ignore_run_exports":[
      "boost-cpp"
     ],
     "run":[
      "hdf5",
      "fftw",
      "qt"
     ]
    },
    "test":{
     "commands":[
      "test -f $PREFIX/Applications/prismatic-gui.app/Contents/MacOS/prismatic-gui"
     ]
    }
   },
   {
    "build":{
     "script":"bash ${RECIPE_DIR}/build_pyprismatic.sh",
     "string":"py_cpu_h_5"
    },
    "name":"pyprismatic",
    "requirements":{
     "build":[
      "c_compiler_stub",
      "cxx_compiler_stub",
      "make",
      "cmake",
      "pkg-config"
     ],
     "host":[
      "setuptools",
      "python",
      "boost",
      "hdf5",
      "fftw",
      "h5py"
     ],
     "ignore_run_exports":[
      "boost"
     ],
     "run":[
      "python",
      "numpy",
      "fftw",
      "h5py"
     ]
    },
    "test":{
     "commands":[
      "python -c \"import pyprismatic; pyprismatic.demo()\""
     ]
    }
   },
   {
    "build":{
     "number":"5",
     "string":"cpu_pyh_5"
    },
    "name":"prismatic",
    "requirements":{
     "host":[
      "python"
     ],
     "run":[
      "prismatic_cli",
      "prismatic_gui",
      "pyprismatic"
     ]
    },
    "test":{
     "commands":[
      "command -v prismatic-gui",
      "python -c \"import pyprismatic\""
     ]
    }
   },
   {
    "build":{
     "script":"bash ${RECIPE_DIR}/combined_build_install.sh cli",
     "string":"cpu_h_5"
    },
    "name":"prismatic_cli",
    "requirements":{
     "build":[
      "c_compiler_stub",
      "cxx_compiler_stub",
      "cuda_compiler_stub",
      "cdt_stub",
      "cdt_stub",
      "cdt_stub",
      "cdt_stub",
      "cdt_stub",
      "cdt_stub",
      "cdt_stub",
      "cdt_stub",
      "make",
      "cmake",
      "pkg-config"
     ],
     "host":[
      "boost-cpp",
      "hdf5",
      "fftw"
     ],
     "ignore_run_exports":[
      "boost-cpp"
     ],
     "run":[
      "hdf5",
      "fftw"
     ]
    },
    "test":{
     "commands":[
      "test $PREFIX/bin/prismatic",
      "test $PREFIX/bin/prismatic-double"
     ],
     "source_files":[
      "SI100.XYZ"
     ]
    }
   },
   {
    "build":{
     "script":"bash ${RECIPE_DIR}/combined_build_install.sh gui",
     "string":"cpu_h_5"
    },
    "name":"prismatic_gui",
    "requirements":{
     "build":[
      "c_compiler_stub",
      "cxx_compiler_stub",
      "cuda_compiler_stub",
      "cdt_stub",
      "cdt_stub",
      "cdt_stub",
      "cdt_stub",
      "cdt_stub",
      "cdt_stub",
      "cdt_stub",
      "cdt_stub",
      "make",
      "cmake",
      "pkg-config"
     ],
     "host":[
      "boost-cpp",
      "hdf5",
      "fftw",
      "qt"
     ],
     "ignore_run_exports":[
      "boost-cpp"
     ],
     "run":[
      "hdf5",
      "fftw",
      "qt"
     ]
    },
    "test":{
     "commands":[
      "command -v prismatic-gui"
     ]
    }
   },
   {
    "build":{
     "script":"bash ${RECIPE_DIR}/build_pyprismatic.sh gpu",
     "string":"py_cpu_h_5"
    },
    "name":"pyprismatic",
    "requirements":{
     "build":[
      "c_compiler_stub",
      "cxx_compiler_stub",
      "cuda_compiler_stub",
      "cdt_stub",
      "cdt_stub",
      "cdt_stub",
      "cdt_stub",
      "cdt_stub",
      "cdt_stub",
      "cdt_stub",
      "cdt_stub",
      "make",
      "cmake",
      "pkg-config"
     ],
     "host":[
      "setuptools",
      "python",
      "boost",
      "hdf5",
      "fftw",
      "h5py"
     ],
     "ignore_run_exports":[
      "boost"
     ],
     "run":[
      "python",
      "numpy",
      "fftw",
      "h5py"
     ]
    },
    "test":{
     "commands":[
      "python -c \"import pyprismatic\""
     ]
    }
   }
  ],
  "package":{
   "name":"prismatic_split",
   "version":"1.2.1"
  },
  "requirements":{
   "build":[
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cmake",
    "pkg-config",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "make",
    "cmake",
    "pkg-config",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cuda_compiler_stub",
    "cdt_stub",
    "cdt_stub",
    "cdt_stub",
    "cdt_stub",
    "cdt_stub",
    "cdt_stub",
    "cdt_stub",
    "cdt_stub",
    "make",
    "cmake",
    "pkg-config"
   ]
  },
  "source":{
   "patches":[
    "0001-fftw_cmake.patch",
    "0002-Set-output-name-for-cmake.patch",
    "0001-Fix-GUI_SOURCE_FILE-in-CMakeLists.txt.patch",
    "0001-Fix-python-blinding-on-windows.patch",
    "0001-fix_pyprismatic_macos.patch",
    "0001-fftw_cmake.patch",
    "0001-Fix-GUI_SOURCE_FILE-in-CMakeLists.txt.patch",
    "0001-fftw_cmake.patch",
    "0002-Set-output-name-for-cmake.patch",
    "0001-Fix-GUI_SOURCE_FILE-in-CMakeLists.txt.patch"
   ],
   "sha256":"844f659575dd98999b7c4864e850a7ec735f297ab1fb6c2d2be91d7f9720fe70",
   "url":"https://github.com/prism-em/prismatic/archive/1.2.1.tar.gz"
  }
 },
 "name":"prismatic_split",
 "new_version":"1.2.1",
 "outputs_names":[
  "prismatic",
  "prismatic_cli",
  "prismatic_gui",
  "pyprismatic"
 ],
 "pinning_version":"2020.02.20",
 "raw_meta_yaml":"{% set version = \"1.2.1\" %}\n{% set build = 5 %}\n\n{% set processor = \"cpu\" if cuda_compiler_version == \"None\" else \"gpu\" %}  # [linux64]\n{% set processor = \"cpu\" %}  # [not linux64]\n\npackage:\n  name: prismatic_split\n  version: {{ version }}\n\nsource:\n  url: https://github.com/prism-em/prismatic/archive/{{ version }}.tar.gz\n  sha256: 844f659575dd98999b7c4864e850a7ec735f297ab1fb6c2d2be91d7f9720fe70\n  patches:\n    - 0001-fix_pyprismatic_macos.patch  # [osx]\n    - 0001-fftw_cmake.patch\n    - 0002-Set-output-name-for-cmake.patch  # [not osx]\n    - 0001-Fix-GUI_SOURCE_FILE-in-CMakeLists.txt.patch\n    - 0001-Fix-python-blinding-on-windows.patch  # [win]\n\nbuild:\n  number: {{ build }}\n\nrequirements:\n  build:\n    - {{ compiler('c') }}\n    - {{ compiler('cxx') }}\n    - {{ compiler('cuda') }}  # [linux64 and cuda_compiler_version != \"None\"]\n    - {{ cdt('libxext-devel') }}         # [linux]\n    - {{ cdt('mesa-libgl-devel') }}      # [linux]\n    - {{ cdt('mesa-dri-drivers') }}      # [linux]\n    - {{ cdt('libxau-devel') }}          # [linux]\n    - {{ cdt('libselinux-devel') }}      # [linux]\n    - {{ cdt('libxdamage') }}            # [linux]\n    - {{ cdt('libxfixes') }}             # [linux]\n    - {{ cdt('libxxf86vm') }}            # [linux]\n    - make                               # [unix]\n    - cmake\n    - pkg-config\n\n\noutputs:\n  - name: prismatic\n    build:\n      number: {{ build }}\n      skip: True  # [py2k]\n      string: \"{{processor}}_py{{ py }}h{{ PKG_HASH }}_{{ build }}\"\n    requirements:\n      host:\n        - python\n      run:\n        - {{ pin_subpackage('prismatic_cli', exact=True) }}\n        - {{ pin_subpackage('prismatic_gui', exact=True) }}\n        - {{ pin_subpackage('pyprismatic', exact=True) }}\n\n    test:\n      commands:\n        - command -v prismatic-gui  # [linux]\n        - test -f $PREFIX/Applications/prismatic-gui.app/Contents/MacOS/prismatic-gui  # [osx]\n        - where prismatic-gui  # [win]\n        - where prismatic  # [win]\n        - python -c \"import pyprismatic; pyprismatic.demo()\"  # [(linux64 and cuda_compiler_version == \"None\") or not linux64]\n        - python -c \"import pyprismatic\"  # [linux64 and cuda_compiler_version != \"None\"]\n\n  - name: prismatic_cli\n    build:\n      string: \"{{processor}}_h{{ PKG_HASH }}_{{ build }}\"\n      script: bash ${RECIPE_DIR}/combined_build_install.sh cli  # [not win]\n      script: {{ RECIPE_DIR }}\\build.bat cli  # [win]\n\n    requirements:\n      build:\n        - {{ compiler('c') }}\n        - {{ compiler('cxx') }}\n        - {{ compiler('cuda') }}  # [linux64 and cuda_compiler_version != \"None\"]\n        - {{ cdt('libxext-devel') }}         # [linux]\n        - {{ cdt('mesa-libgl-devel') }}      # [linux]\n        - {{ cdt('mesa-dri-drivers') }}      # [linux]\n        - {{ cdt('libxau-devel') }}          # [linux]\n        - {{ cdt('libselinux-devel') }}      # [linux]\n        - {{ cdt('libxdamage') }}            # [linux]\n        - {{ cdt('libxfixes') }}             # [linux]\n        - {{ cdt('libxxf86vm') }}            # [linux]\n        - make                               # [unix]\n        - cmake\n        - pkg-config\n      host:\n        - boost-cpp\n        - hdf5\n        - fftw\n      run:\n        - hdf5\n        - fftw\n      ignore_run_exports:\n        - boost-cpp\n\n    test:\n      source_files:\n        - SI100.XYZ\n      commands:\n        - prismatic -i SI100.XYZ  # [(linux64 and cuda_compiler_version == \"None\") or not linux64]\n        - prismatic-double -i SI100.XYZ  # [(linux64 and cuda_compiler_version == \"None\") or not linux64]\n        - test $PREFIX/bin/prismatic  # [linux64 and cuda_compiler_version != \"None\"]\n        - test $PREFIX/bin/prismatic-double  # [linux64 and cuda_compiler_version != \"None\"]\n\n  - name: prismatic_gui\n    build:\n      string: \"{{processor}}_h{{ PKG_HASH }}_{{ build }}\"\n      script: bash ${RECIPE_DIR}/combined_build_install.sh gui  # [not win]\n      script: {{ RECIPE_DIR }}\\build.bat gui  # [win]\n\n    requirements:\n      build:\n        - {{ compiler('c') }}\n        - {{ compiler('cxx') }}\n        - {{ compiler('cuda') }}  # [linux64 and cuda_compiler_version != \"None\"]\n        - {{ cdt('libxext-devel') }}         # [linux]\n        - {{ cdt('mesa-libgl-devel') }}      # [linux]\n        - {{ cdt('mesa-dri-drivers') }}      # [linux]\n        - {{ cdt('libxau-devel') }}          # [linux]\n        - {{ cdt('libselinux-devel') }}      # [linux]\n        - {{ cdt('libxdamage') }}            # [linux]\n        - {{ cdt('libxfixes') }}             # [linux]\n        - {{ cdt('libxxf86vm') }}            # [linux]\n        - make                               # [unix]\n        - cmake\n        - pkg-config\n      host:\n        - boost-cpp\n        - hdf5\n        - fftw\n        - qt\n      run:\n        - hdf5\n        - fftw\n        - qt\n      ignore_run_exports:\n        - boost-cpp\n\n    test:\n      commands:\n        - command -v prismatic-gui  # [linux]\n        - test -f $PREFIX/Applications/prismatic-gui.app/Contents/MacOS/prismatic-gui  # [osx]\n        - where prismatic-gui  # [win]\n        - if not exist %PREFIX%\\\\Menu\\\\prismatic_gui.json exit 1  # [win]\n        - if not exist %PREFIX%\\\\Menu\\\\prismatic.ico exit 1  # [win]\n\n  - name: pyprismatic\n    build:\n      skip: True  # [py2k]\n      string: \"py{{ py }}_{{processor}}_h{{ PKG_HASH }}_{{ build }}\"\n      script: bash ${RECIPE_DIR}/build_pyprismatic.sh gpu  # [linux64 and cuda_compiler_version != \"None\"]\n      script: bash ${RECIPE_DIR}/build_pyprismatic.sh  # [(linux64 and cuda_compiler_version == \"None\") or osx]\n      script: {{ RECIPE_DIR }}\\build_pyprismatic.bat  # [win]\n\n    requirements:\n      build:\n        - {{ compiler('c') }}\n        - {{ compiler('cxx') }}\n        - {{ compiler('cuda') }}  # [linux64 and cuda_compiler_version != \"None\"]\n        - {{ cdt('libxext-devel') }}         # [linux]\n        - {{ cdt('mesa-libgl-devel') }}      # [linux]\n        - {{ cdt('mesa-dri-drivers') }}      # [linux]\n        - {{ cdt('libxau-devel') }}          # [linux]\n        - {{ cdt('libselinux-devel') }}      # [linux]\n        - {{ cdt('libxdamage') }}            # [linux]\n        - {{ cdt('libxfixes') }}             # [linux]\n        - {{ cdt('libxxf86vm') }}            # [linux]\n        - make                               # [unix]\n        - cmake\n        - pkg-config\n      host:\n        - setuptools\n        - python\n        - boost\n        - hdf5\n        - fftw\n        - h5py\n      run:\n        - python\n        - numpy\n        - fftw\n        - h5py\n      ignore_run_exports:\n        - boost\n\n    test:\n      commands:\n        - python -c \"import pyprismatic\"  # [linux64 and cuda_compiler_version != \"None\"]\n        - python -c \"import pyprismatic; pyprismatic.demo()\"  # [(linux64 and cuda_compiler_version == \"None\") or not linux64]\n        \nabout:\n  home: http://prism-em.com/\n  license: GPL-3.0-only\n  license_file: LICENSE\n  summary: 'CPU / GPU software for fast simulation of Scanning Transmission Electron Microscopy (STEM) experiments'\n  description: |\n    CPU / GPU software for fast simulation of Scanning Transmission Electron Microscopy (STEM) experiments\n  dev_url: https://github.com/prism-em/prismatic\n\nextra:\n  recipe-maintainers:\n    - ericpre\n    - douglowe\n    - tschoonj\n",
 "req":{
  "__set__":true,
  "elements":[
   "boost",
   "boost-cpp",
   "c_compiler_stub",
   "cdt_stub",
   "cmake",
   "cuda_compiler_stub",
   "cxx_compiler_stub",
   "fftw",
   "h5py",
   "hdf5",
   "make",
   "numpy",
   "pkg-config",
   "prismatic_cli",
   "prismatic_gui",
   "pyprismatic",
   "python",
   "qt",
   "setuptools"
  ]
 },
 "requirements":{
  "build":{
   "__set__":true,
   "elements":[
    "c_compiler_stub",
    "cdt_stub",
    "cmake",
    "cuda_compiler_stub",
    "cxx_compiler_stub",
    "make",
    "pkg-config"
   ]
  },
  "host":{
   "__set__":true,
   "elements":[
    "boost",
    "boost-cpp",
    "fftw",
    "h5py",
    "hdf5",
    "python",
    "qt",
    "setuptools"
   ]
  },
  "run":{
   "__set__":true,
   "elements":[
    "fftw",
    "h5py",
    "hdf5",
    "numpy",
    "prismatic_cli",
    "prismatic_gui",
    "pyprismatic",
    "python",
    "qt"
   ]
  },
  "test":{
   "__set__":true,
   "elements":[]
  }
 },
 "smithy_version":"3.6.8",
 "strong_exports":false,
 "total_requirements":{
  "build":{
   "__set__":true,
   "elements":[
    "c_compiler_stub",
    "cdt_stub",
    "cmake",
    "cuda_compiler_stub",
    "cxx_compiler_stub",
    "make",
    "pkg-config"
   ]
  },
  "host":{
   "__set__":true,
   "elements":[
    "boost",
    "boost-cpp",
    "fftw",
    "h5py",
    "hdf5",
    "python",
    "qt",
    "setuptools"
   ]
  },
  "run":{
   "__set__":true,
   "elements":[
    "fftw",
    "h5py",
    "hdf5",
    "numpy",
    "prismatic_cli",
    "prismatic_gui",
    "pyprismatic",
    "python",
    "qt"
   ]
  },
  "test":{
   "__set__":true,
   "elements":[]
  }
 },
 "url":"https://github.com/prism-em/prismatic/archive/1.2.1.tar.gz",
 "version":"1.2.1"
}