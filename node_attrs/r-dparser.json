{
 "PRed":[
  {
   "PR":{
    "__lazy_json__":"pr_json/412860831.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"MigrationYaml",
    "migrator_object_version":2,
    "migrator_version":0,
    "name":"r400"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  }
 ],
 "bad":false,
 "conda-forge.yml":{
  "bot":{
   "automerge":true
  }
 },
 "feedstock_name":"r-dparser",
 "hash_type":"sha256",
 "meta_yaml":{
  "about":{
   "home":"https://CRAN.R-project.org/package=dparser",
   "license":"BSD_3_clause",
   "license_family":"BSD",
   "license_file":[
    "/lib/R/share/licenses/BSD_3_clause",
    "LICENSE",
    "/lib/R/share/licenses/BSD_3_clause",
    "LICENSE",
    "/lib/R/share/licenses/BSD_3_clause",
    "LICENSE"
   ],
   "summary":"A Scannerless GLR parser/parser generator.  Note that GLR standing for \"generalized LR\", where L stands for \"left-to-right\" and R stands for \"rightmost (derivation)\".  For more information see <https://en.wikipedia.org/wiki/GLR_parser>. This parser is based on the Tomita (1987) algorithm. (Paper can be found at <http://acl-arc.comp.nus.edu.sg/archives/acl-arc-090501d3/data/pdf/anthology-PDF/J/J87/J87-1004.pdf>). The original 'dparser' package documentation can be found at <http://dparser.sourceforge.net/>.  This allows you to add mini-languages to R (like RxODE's ODE mini-language Wang, Hallow, and James 2015 <DOI:10.1002/psp4.12052>) or to parse other languages like 'NONMEM' to automatically translate them to R code.   To use this in your code, add a LinkingTo dparser in your DESCRIPTION file and instead of using #include <dparse.h> use #include <dparser.h>.  This also provides a R-based port of the make_dparser <http://dparser.sourceforge.net/d/make_dparser.cat> command called mkdparser().  Additionally you can parse an arbitrary grammar within R using the dparse() function, which works on most OSes and is mainly for grammar testing.  The fastest parsing, of course, occurs at the C level, and is suggested."
  },
  "build":{
   "merge_build_host":true,
   "number":"1",
   "rpaths":[
    "lib/R/lib/",
    "lib/",
    "lib/R/lib/",
    "lib/",
    "lib/R/lib/",
    "lib/"
   ]
  },
  "extra":{
   "recipe-maintainers":[
    "conda-forge/r",
    "conda-forge/r",
    "conda-forge/r"
   ]
  },
  "package":{
   "name":"r-dparser",
   "version":"0.1.8"
  },
  "requirements":{
   "build":[
    "m2w64_c_compiler_stub",
    "filesystem",
    "make",
    "sed",
    "coreutils",
    "zip",
    "c_compiler_stub",
    "make",
    "c_compiler_stub",
    "make"
   ],
   "host":[
    "r-base",
    "r-digest",
    "r-base",
    "r-digest",
    "r-base",
    "r-digest"
   ],
   "run":[
    "r-base",
    "gcc-libs",
    "r-digest",
    "r-base",
    "r-digest",
    "r-base",
    "r-digest"
   ]
  },
  "source":{
   "sha256":"4576e4f9a7f762d0608e1f1488c992aa3e36aef3379037089003e0387411a4fb",
   "url":[
    "https://cran.r-project.org/src/contrib/dparser_0.1.8.tar.gz",
    "https://cran.r-project.org/src/contrib/Archive/dparser/dparser_0.1.8.tar.gz",
    "https://cran.r-project.org/src/contrib/dparser_0.1.8.tar.gz",
    "https://cran.r-project.org/src/contrib/Archive/dparser/dparser_0.1.8.tar.gz",
    "https://cran.r-project.org/src/contrib/dparser_0.1.8.tar.gz",
    "https://cran.r-project.org/src/contrib/Archive/dparser/dparser_0.1.8.tar.gz"
   ]
  },
  "test":{
   "commands":[
    "\"%R%\" -e \"library('dparser')\"",
    "$R -e \"library('dparser')\"",
    "$R -e \"library('dparser')\""
   ]
  }
 },
 "name":"r-dparser",
 "new_version":"0.1.8",
 "pinning_version":"2020.05.04.05.46.47",
 "raw_meta_yaml":"{% set version = '0.1.8' %}\n{% set posix = 'm2-' if win else '' %}\n{% set native = 'm2w64-' if win else '' %}\n\npackage:\n  name: r-dparser\n  version: {{ version|replace(\"-\", \"_\") }}\n\nsource:\n  url:\n    - {{ cran_mirror }}/src/contrib/dparser_{{ version }}.tar.gz\n    - {{ cran_mirror }}/src/contrib/Archive/dparser/dparser_{{ version }}.tar.gz\n  sha256: 4576e4f9a7f762d0608e1f1488c992aa3e36aef3379037089003e0387411a4fb\n\nbuild:\n  merge_build_host: True  # [win]\n  number: 1\n  rpaths:\n    - lib/R/lib/\n    - lib/\n\nrequirements:\n  build:\n    - {{ compiler('c') }}              # [not win]\n    - {{ compiler('m2w64_c') }}        # [win]\n    - {{ posix }}filesystem        # [win]\n    - {{ posix }}make\n    - {{ posix }}sed               # [win]\n    - {{ posix }}coreutils         # [win]\n    - {{ posix }}zip               # [win]\n  host:\n    - r-base\n    - r-digest\n  run:\n    - r-base\n    - {{ native }}gcc-libs         # [win]\n    - r-digest\n\ntest:\n  commands:\n    - $R -e \"library('dparser')\"           # [not win]\n    - \"\\\"%R%\\\" -e \\\"library('dparser')\\\"\"  # [win]\n\nabout:\n  home: https://CRAN.R-project.org/package=dparser\n  license: BSD_3_clause\n  summary: 'A Scannerless GLR parser/parser generator.  Note that GLR standing for \"generalized\n    LR\", where L stands for \"left-to-right\" and R stands for \"rightmost (derivation)\".  For\n    more information see <https://en.wikipedia.org/wiki/GLR_parser>. This parser is\n    based on the Tomita (1987) algorithm. (Paper can be found at <http://acl-arc.comp.nus.edu.sg/archives/acl-arc-090501d3/data/pdf/anthology-PDF/J/J87/J87-1004.pdf>).\n    The original ''dparser'' package documentation can be found at <http://dparser.sourceforge.net/>.  This\n    allows you to add mini-languages to R (like RxODE''s ODE mini-language Wang, Hallow,\n    and James 2015 <DOI:10.1002/psp4.12052>) or to parse other languages like ''NONMEM''\n    to automatically translate them to R code.   To use this in your code, add a LinkingTo\n    dparser in your DESCRIPTION file and instead of using #include <dparse.h> use #include\n    <dparser.h>.  This also provides a R-based port of the make_dparser <http://dparser.sourceforge.net/d/make_dparser.cat>\n    command called mkdparser().  Additionally you can parse an arbitrary grammar within\n    R using the dparse() function, which works on most OSes and is mainly for grammar\n    testing.  The fastest parsing, of course, occurs at the C level, and is suggested.'\n  license_family: BSD\n  license_file:\n    - '{{ environ[\"PREFIX\"] }}/lib/R/share/licenses/BSD_3_clause'\n    - LICENSE\n\nextra:\n  recipe-maintainers:\n    - conda-forge/r\n\n# Package: dparser\n# Title: Port of 'Dparser' Package\n# Version: 0.1.8\n# Authors@R: c(person(\"Matthew\", \"Fidler\", email = \"matthew.fidler@gmail.com\", role = c(\"aut\", \"cre\")), person(\"John\", \"Plevyak\", role = c(\"aut\", \"cph\"), email = \"jplevyak@gmail.com\"))\n# Imports: digest, methods\n# Suggests: rex, covr, testthat, knitr, devtools,\n# Description: A Scannerless GLR parser/parser generator.  Note that GLR standing for \"generalized LR\", where L stands for \"left-to-right\" and R stands for \"rightmost (derivation)\".  For more information see <https://en.wikipedia.org/wiki/GLR_parser>. This parser is based on the Tomita (1987) algorithm. (Paper can be found at <http://acl-arc.comp.nus.edu.sg/archives/acl-arc-090501d3/data/pdf/anthology-PDF/J/J87/J87-1004.pdf>). The original 'dparser' package documentation can be found at <http://dparser.sourceforge.net/>.  This allows you to add mini-languages to R (like RxODE's ODE mini-language Wang, Hallow, and James 2015 <DOI:10.1002/psp4.12052>) or to parse other languages like 'NONMEM' to automatically translate them to R code.   To use this in your code, add a LinkingTo dparser in your DESCRIPTION file and instead of using #include <dparse.h> use #include <dparser.h>.  This also provides a R-based port of the make_dparser <http://dparser.sourceforge.net/d/make_dparser.cat> command called mkdparser().  Additionally you can parse an arbitrary grammar within R using the dparse() function, which works on most OSes and is mainly for grammar testing.  The fastest parsing, of course, occurs at the C level, and is suggested.\n# Depends: R (>= 3.2.3)\n# License: BSD_3_clause + file LICENSE\n# Encoding: UTF-8\n# LazyData: true\n# RoxygenNote: 6.0.1\n# NeedsCompilation: yes\n# Packaged: 2017-11-13 16:20:46 UTC; FIDLEMA3\n# Author: Matthew Fidler [aut, cre], John Plevyak [aut, cph]\n# Maintainer: Matthew Fidler <matthew.fidler@gmail.com>\n# Repository: CRAN\n# Date/Publication: 2017-11-13 18:11:18 UTC\n",
 "req":{
  "__set__":true,
  "elements":[
   "c_compiler_stub",
   "coreutils",
   "filesystem",
   "gcc-libs",
   "m2w64_c_compiler_stub",
   "make",
   "r-base",
   "r-digest",
   "sed",
   "zip"
  ]
 },
 "requirements":{
  "build":{
   "__set__":true,
   "elements":[
    "c_compiler_stub",
    "coreutils",
    "filesystem",
    "m2w64_c_compiler_stub",
    "make",
    "sed",
    "zip"
   ]
  },
  "host":{
   "__set__":true,
   "elements":[
    "r-base",
    "r-digest"
   ]
  },
  "run":{
   "__set__":true,
   "elements":[
    "gcc-libs",
    "r-base",
    "r-digest"
   ]
  },
  "test":{
   "__set__":true,
   "elements":[]
  }
 },
 "smithy_version":"No azure token. Create a token and\nput it in ~/.conda-smithy/azure.token\n3.7.0\n",
 "strong_exports":false,
 "total_requirements":{
  "build":{
   "__set__":true,
   "elements":[
    "c_compiler_stub",
    "coreutils",
    "filesystem",
    "m2w64_c_compiler_stub",
    "make",
    "sed",
    "zip"
   ]
  },
  "host":{
   "__set__":true,
   "elements":[
    "r-base",
    "r-digest"
   ]
  },
  "run":{
   "__set__":true,
   "elements":[
    "gcc-libs",
    "r-base",
    "r-digest"
   ]
  },
  "test":{
   "__set__":true,
   "elements":[]
  }
 },
 "url":[
  "https://cran.r-project.org/src/contrib/dparser_0.1.8.tar.gz",
  "https://cran.r-project.org/src/contrib/Archive/dparser/dparser_0.1.8.tar.gz",
  "https://cran.r-project.org/src/contrib/dparser_0.1.8.tar.gz",
  "https://cran.r-project.org/src/contrib/Archive/dparser/dparser_0.1.8.tar.gz",
  "https://cran.r-project.org/src/contrib/dparser_0.1.8.tar.gz",
  "https://cran.r-project.org/src/contrib/Archive/dparser/dparser_0.1.8.tar.gz"
 ],
 "version":"0.1.8"
}