{
 "PRed":[
  {
   "PR":{
    "__lazy_json__":"pr_json/200128009.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"Noarch",
    "migrator_version":0
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/216502098.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"Version",
    "migrator_version":0,
    "version":"1.7.0"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/216714384.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"Version",
    "migrator_version":0,
    "version":"1.7.1"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "data":{
    "bot_rerun":false,
    "migrator_name":"Version",
    "migrator_version":0,
    "version":"1.8.0"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/268739611.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"Version",
    "migrator_version":0,
    "version":"1.8.1"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/271284731.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"Version",
    "migrator_version":0,
    "version":"1.8.2"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/273806470.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"Version",
    "migrator_version":0,
    "version":"1.8.3"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/284332272.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"Version",
    "migrator_version":0,
    "version":"1.8.4"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/336002978.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"Version",
    "migrator_version":0,
    "version":"1.9.0"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/389203846.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"Version",
    "migrator_version":0,
    "version":"1.10.0"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/400763899.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"Version",
    "migrator_version":0,
    "version":"1.11.0"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/400883711.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"Version",
    "migrator_version":0,
    "version":"1.11.1"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/409839883.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"Version",
    "migrator_version":0,
    "version":"2.0.0"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  }
 ],
 "bad":false,
 "conda-forge.yml":{},
 "feedstock_name":"smart_open",
 "hash_type":"sha256",
 "meta_yaml":{
  "about":{
   "description":"smart_open is a Python 2 & Python 3 library\nfor efficient streaming of very large files\nfrom/to S3, HDFS, WebHDFS or local (compressed) files.\n",
   "dev_url":"https://github.com/RaRe-Technologies/smart_open",
   "home":"https://github.com/RaRe-Technologies/smart_open",
   "license":"MIT",
   "license_family":"MIT",
   "license_file":"LICENSE",
   "summary":"Python library for efficient streaming of large files"
  },
  "build":{
   "noarch":"python",
   "number":"0",
   "script":"-m pip install . --no-deps -vv"
  },
  "extra":{
   "recipe-maintainers":[
    "souravsingh",
    "mpenkov",
    "souravsingh",
    "mpenkov",
    "souravsingh",
    "mpenkov"
   ]
  },
  "package":{
   "name":"smart_open",
   "version":"2.0.0"
  },
  "requirements":{
   "host":[
    "python",
    "pip",
    "python",
    "pip",
    "python",
    "pip"
   ],
   "run":[
    "python",
    "boto >=2.32",
    "bz2file",
    "requests",
    "boto3",
    "google-cloud-storage",
    "python",
    "boto >=2.32",
    "bz2file",
    "requests",
    "boto3",
    "google-cloud-storage",
    "python",
    "boto >=2.32",
    "bz2file",
    "requests",
    "boto3",
    "google-cloud-storage"
   ]
  },
  "source":{
   "fn":"smart_open-2.0.0.tar.gz",
   "sha256":"555962abf982faff8a8aeb65e0695474e3091f604826055782beffa8400e4e4e",
   "url":"https://pypi.io/packages/source/s/smart_open/smart_open-2.0.0.tar.gz"
  },
  "test":{
   "imports":[
    "smart_open",
    "smart_open.tests",
    "smart_open",
    "smart_open.tests",
    "smart_open",
    "smart_open.tests"
   ],
   "requires":[
    "mock",
    "responses",
    "mock",
    "responses",
    "mock",
    "responses"
   ]
  }
 },
 "name":"smart_open",
 "new_version":"2.0.0",
 "new_version_attempts":{
  "1.11.0":1,
  "1.11.1":1,
  "2.0.0":1
 },
 "new_version_errors":{},
 "pinning_version":"2020.04.27.17.45.41",
 "raw_meta_yaml":"{% set name = \"smart_open\" %}\n{% set version = \"2.0.0\" %}\n{% set sha256 = \"555962abf982faff8a8aeb65e0695474e3091f604826055782beffa8400e4e4e\" %}\n\npackage:\n  name: {{ name|lower }}\n  version: {{ version }}\n\nsource:\n  fn: {{ name }}-{{ version }}.tar.gz\n  url: https://pypi.io/packages/source/{{ name[0] }}/{{ name }}/{{ name }}-{{ version }}.tar.gz\n  sha256: {{ sha256 }}\n\nbuild:\n  noarch: python\n  number: 0\n  script: {{ PYTHON }} -m pip install . --no-deps -vv\n\nrequirements:\n  host:\n    - python\n    - pip\n  run:\n    - python\n    - boto >=2.32\n    - bz2file\n    - requests\n    - boto3\n    - google-cloud-storage\n\ntest:\n  requires:\n    - mock\n    - responses\n  imports:\n    - smart_open\n    - smart_open.tests\n\nabout:\n  home: https://github.com/RaRe-Technologies/smart_open\n  license: MIT\n  license_family: MIT\n  license_file: LICENSE\n  summary: Python library for efficient streaming of large files\n\n  description: |\n    smart_open is a Python 2 & Python 3 library \n    for efficient streaming of very large files\n    from/to S3, HDFS, WebHDFS or local (compressed) files. \n  dev_url: https://github.com/RaRe-Technologies/smart_open\n\nextra:\n  recipe-maintainers:\n    - souravsingh\n    - mpenkov\n",
 "req":{
  "__set__":true,
  "elements":[
   "boto",
   "boto3",
   "bz2file",
   "google-cloud-storage",
   "pip",
   "python",
   "requests"
  ]
 },
 "requirements":{
  "build":{
   "__set__":true,
   "elements":[]
  },
  "host":{
   "__set__":true,
   "elements":[
    "pip",
    "python"
   ]
  },
  "run":{
   "__set__":true,
   "elements":[
    "boto",
    "boto3",
    "bz2file",
    "google-cloud-storage",
    "python",
    "requests"
   ]
  },
  "test":{
   "__set__":true,
   "elements":[
    "mock",
    "responses"
   ]
  }
 },
 "smithy_version":"No azure token. Create a token and\nput it in ~/.conda-smithy/azure.token\n3.7.0",
 "strong_exports":false,
 "total_requirements":{
  "build":{
   "__set__":true,
   "elements":[]
  },
  "host":{
   "__set__":true,
   "elements":[
    "pip",
    "python"
   ]
  },
  "run":{
   "__set__":true,
   "elements":[
    "boto >=2.32",
    "boto3",
    "bz2file",
    "google-cloud-storage",
    "python",
    "requests"
   ]
  },
  "test":{
   "__set__":true,
   "elements":[
    "mock",
    "responses"
   ]
  }
 },
 "url":"https://pypi.io/packages/source/s/smart_open/smart_open-1.8.4.tar.gz",
 "version":"2.0.0"
}