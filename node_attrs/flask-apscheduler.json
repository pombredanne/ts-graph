{
 "PRed":[
  {
   "PR":{
    "__lazy_json__":"pr_json/203491115.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"Version",
    "migrator_version":0,
    "version":"1.9.0"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/203787350.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"Version",
    "migrator_version":0,
    "version":"1.10.0"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/203817191.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"Version",
    "migrator_version":0,
    "version":"1.10.1"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/235192631.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"Version",
    "migrator_version":0,
    "version":"1.11.0"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  }
 ],
 "bad":false,
 "conda-forge.yml":{},
 "feedstock_name":"flask-apscheduler",
 "hash_type":"sha256",
 "meta_yaml":{
  "about":{
   "description":"Flask-APScheduler is a Flask extension which adds support for the APScheduler.\nAdvanced Python Scheduler (APScheduler) is a Python library that lets you schedule your Python\ncode to be executed later, either just once or periodically. You can add new jobs or remove old\nones on the fly as you please. If you store your jobs in a database, they will also survive\nscheduler restarts and maintain their state. When the scheduler is restarted, it will then run\nall the jobs it should have run while it was offline [1].\n\nAmong other things, APScheduler can be used as a cross-platform, application specific replacement\nto platform specific schedulers, such as the cron daemon or the Windows task scheduler. Please\nnote, however, that APScheduler is not a daemon or service itself, nor does it come with any\ncommand line tools. It is primarily meant to be run inside existing applications. That said,\nAPScheduler does provide some building blocks for you to build a scheduler service or to run a\ndedicated scheduler process.\n",
   "dev_url":"https://github.com/viniciuschiele/flask-apscheduler",
   "doc_url":"https://apscheduler.readthedocs.io",
   "home":"https://github.com/viniciuschiele/flask-apscheduler",
   "license":"Apache-2.0",
   "license_family":"Apache",
   "license_file":"LICENSE",
   "summary":"Flask-APScheduler is a Flask extension which adds support for the APScheduler"
  },
  "build":{
   "noarch":"python",
   "number":"0",
   "script":"python -m pip install --no-deps --ignore-installed ."
  },
  "extra":{
   "recipe-maintainers":[
    "igortg",
    "lvoliveira",
    "edetec",
    "igortg",
    "lvoliveira",
    "edetec",
    "igortg",
    "lvoliveira",
    "edetec"
   ]
  },
  "package":{
   "name":"flask-apscheduler",
   "version":"1.11.0"
  },
  "requirements":{
   "host":[
    "python",
    "pip",
    "python",
    "pip",
    "python",
    "pip"
   ],
   "run":[
    "python",
    "apscheduler",
    "flask>=0.10.1",
    "apscheduler>=3.2.0",
    "python-dateutil>=2.4.2",
    "python",
    "apscheduler",
    "flask>=0.10.1",
    "apscheduler>=3.2.0",
    "python-dateutil>=2.4.2",
    "python",
    "apscheduler",
    "flask>=0.10.1",
    "apscheduler>=3.2.0",
    "python-dateutil>=2.4.2"
   ]
  },
  "source":{
   "sha256":"7911d66e449f412d92a1a6c524217f44f4c40a5c92148c60d5189c6c402f87d0",
   "url":"https://pypi.io/packages/source/f/flask-apscheduler/Flask-APScheduler-1.11.0.tar.gz"
  },
  "test":{
   "imports":[
    "flask_apscheduler",
    "flask_apscheduler",
    "flask_apscheduler"
   ]
  }
 },
 "name":"flask-apscheduler",
 "new_version":"1.11.0",
 "pinning_version":"2018.11.27",
 "raw_meta_yaml":"{% set name = \"flask-apscheduler\" %}\n{% set pkg_name = \"Flask-APScheduler\" %}\n{% set version = \"1.11.0\" %}\n{% set sha256 = \"7911d66e449f412d92a1a6c524217f44f4c40a5c92148c60d5189c6c402f87d0\" %}\n\n\npackage:\n  name: {{ name|lower }}\n  version: {{ version }}\n\nsource:\n  url: https://pypi.io/packages/source/{{ name[0] }}/{{ name }}/{{ pkg_name }}-{{ version }}.tar.gz\n  sha256: {{ sha256 }}\n\nbuild:\n  number: 0\n  noarch: python\n  script: python -m pip install --no-deps --ignore-installed .\n\nrequirements:\n  host:\n    - python\n    - pip\n  run:\n    - python\n    - apscheduler\n    - flask>=0.10.1\n    - apscheduler>=3.2.0\n    - python-dateutil>=2.4.2\n\ntest:\n  imports:\n    - flask_apscheduler\n\nabout:\n  home: https://github.com/viniciuschiele/flask-apscheduler\n  license: Apache-2.0\n  license_family: Apache\n  license_file: LICENSE\n  summary: 'Flask-APScheduler is a Flask extension which adds support for the APScheduler'\n  description: |\n    Flask-APScheduler is a Flask extension which adds support for the APScheduler.\n    Advanced Python Scheduler (APScheduler) is a Python library that lets you schedule your Python \n    code to be executed later, either just once or periodically. You can add new jobs or remove old \n    ones on the fly as you please. If you store your jobs in a database, they will also survive \n    scheduler restarts and maintain their state. When the scheduler is restarted, it will then run \n    all the jobs it should have run while it was offline [1].\n\n    Among other things, APScheduler can be used as a cross-platform, application specific replacement \n    to platform specific schedulers, such as the cron daemon or the Windows task scheduler. Please \n    note, however, that APScheduler is not a daemon or service itself, nor does it come with any \n    command line tools. It is primarily meant to be run inside existing applications. That said, \n    APScheduler does provide some building blocks for you to build a scheduler service or to run a \n    dedicated scheduler process.\n  doc_url: https://apscheduler.readthedocs.io\n  dev_url: https://github.com/viniciuschiele/flask-apscheduler\n\nextra:\n  recipe-maintainers:\n    - igortg\n    - lvoliveira\n    - edetec\n",
 "req":{
  "__set__":true,
  "elements":[
   "apscheduler",
   "flask",
   "pip",
   "python",
   "python-dateutil"
  ]
 },
 "requirements":{
  "build":{
   "__set__":true,
   "elements":[]
  },
  "host":{
   "__set__":true,
   "elements":[
    "pip",
    "python"
   ]
  },
  "run":{
   "__set__":true,
   "elements":[
    "apscheduler",
    "flask",
    "python",
    "python-dateutil"
   ]
  },
  "test":{
   "__set__":true,
   "elements":[]
  }
 },
 "smithy_version":"3.1.12",
 "strong_exports":false,
 "total_requirements":{
  "build":{
   "__set__":true,
   "elements":[]
  },
  "host":{
   "__set__":true,
   "elements":[
    "pip",
    "python"
   ]
  },
  "run":{
   "__set__":true,
   "elements":[
    "apscheduler",
    "apscheduler>=3.2.0",
    "flask>=0.10.1",
    "python",
    "python-dateutil>=2.4.2"
   ]
  },
  "test":{
   "__set__":true,
   "elements":[]
  }
 },
 "url":"https://pypi.io/packages/source/f/flask-apscheduler/Flask-APScheduler-1.11.0.tar.gz",
 "version":"1.11.0"
}