{
 "PRed":[
  {
   "PR":{
    "__lazy_json__":"pr_json/203966387.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"Compiler",
    "migrator_version":0
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/206752820.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"Version",
    "migrator_version":0,
    "version":"1.4.1"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/225467631.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"Version",
    "migrator_version":0,
    "version":"1.4.2"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/231337909.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"CompilerRebuild",
    "migrator_version":1,
    "name":"Python 3.7, GCC 7, R 3.5.1, openBLAS 0.3.2"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/258060315.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"Version",
    "migrator_version":0,
    "version":"1.4.3"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/258968433.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"Version",
    "migrator_version":0,
    "version":"1.4.3.1"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/259626480.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"Version",
    "migrator_version":0,
    "version":"1.4.3.2"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/263855423.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"Version",
    "migrator_version":0,
    "version":"1.5.0rel"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/276250425.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"Version",
    "migrator_version":0,
    "version":"1.5.1.2"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/286171331.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"Rebuild",
    "migrator_version":0,
    "name":"hdf5-1.10.5"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/328238923.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"MigrationYaml",
    "migrator_object_version":1,
    "migrator_version":0,
    "name":"libnetcdf-4"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/336101982.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"MigrationYaml",
    "migrator_object_version":1,
    "migrator_version":0,
    "name":"python38"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/353560795.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"MigrationYaml",
    "migrator_object_version":1,
    "migrator_version":0,
    "name":"libnetcdf473"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/395865983.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"MigrationYaml",
    "migrator_object_version":1,
    "migrator_version":0,
    "name":"libnetcdf474"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/404773893.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"MigrationYaml",
    "migrator_object_version":1,
    "migrator_version":0,
    "name":"hdf51106"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  }
 ],
 "bad":false,
 "conda-forge.yml":{
  "provider":{
   "win":"azure"
  }
 },
 "feedstock_name":"netcdf4",
 "hash_type":"sha256",
 "meta_yaml":{
  "about":{
   "dev_url":"https://github.com/Unidata/netcdf4-python",
   "doc_url":"https://unidata.github.io/netcdf4-python",
   "home":"http://github.com/Unidata/netcdf4-python",
   "license":"OSI Approved and MIT",
   "license_file":"COPYING",
   "summary":"Provides an object-oriented python interface to the netCDF version 4 library"
  },
  "build":{
   "entry_points":[
    "ncinfo = netCDF4.utils:ncinfo",
    "nc4tonc3 = netCDF4.utils:nc4tonc3",
    "nc3tonc4 = netCDF4.utils:nc3tonc4",
    "ncinfo = netCDF4.utils:ncinfo",
    "nc4tonc3 = netCDF4.utils:nc4tonc3",
    "nc3tonc4 = netCDF4.utils:nc3tonc4",
    "ncinfo = netCDF4.utils:ncinfo",
    "nc4tonc3 = netCDF4.utils:nc4tonc3",
    "nc3tonc4 = netCDF4.utils:nc3tonc4"
   ],
   "number":"106",
   "skip":true,
   "string":"nompi_pyh_106"
  },
  "extra":{
   "recipe-maintainers":[
    "ocefpaf",
    "pelson",
    "dopplershift",
    "xylar",
    "ocefpaf",
    "pelson",
    "dopplershift",
    "xylar",
    "ocefpaf",
    "pelson",
    "dopplershift",
    "xylar"
   ]
  },
  "package":{
   "name":"netcdf4",
   "version":"1.5.3"
  },
  "requirements":{
   "build":[
    "c_compiler_stub",
    "c_compiler_stub",
    "c_compiler_stub"
   ],
   "host":[
    "python",
    "pip",
    "numpy",
    "cython >=0.19",
    "cftime >=1.0.1",
    "hdf5",
    "hdf5 * nompi_*",
    "libnetcdf",
    "libnetcdf * nompi_*",
    "nompi",
    "mpi4py",
    "libssh2 1.8.*",
    "python",
    "pip",
    "numpy",
    "cython >=0.19",
    "cftime >=1.0.1",
    "hdf5",
    "hdf5 * nompi_*",
    "libnetcdf",
    "libnetcdf * nompi_*",
    "nompi",
    "mpi4py",
    "libssh2 1.8.*",
    "python",
    "pip",
    "numpy",
    "cython >=0.19",
    "cftime >=1.0.1",
    "hdf5",
    "hdf5 * nompi_*",
    "libnetcdf",
    "libnetcdf * nompi_*",
    "nompi",
    "mpi4py",
    "libssh2 1.8.*"
   ],
   "run":[
    "python",
    "setuptools",
    "numpy",
    "cftime",
    "hdf5 * nompi_*",
    "libnetcdf * nompi_*",
    "nompi",
    "mpi4py",
    "mkl 2020.0",
    "intel-openmp 2020.0",
    "libssh2 1.8.*",
    "python",
    "setuptools",
    "numpy",
    "cftime",
    "hdf5 * nompi_*",
    "libnetcdf * nompi_*",
    "nompi",
    "mpi4py",
    "libssh2 1.8.*",
    "python",
    "setuptools",
    "numpy",
    "cftime",
    "hdf5 * nompi_*",
    "libnetcdf * nompi_*",
    "nompi",
    "mpi4py",
    "libssh2 1.8.*"
   ]
  },
  "source":{
   "sha256":"2a3ca855848f4bbf07fac366da77a681fcead18c0a8813d91d46302f562dc3be",
   "url":"https://pypi.io/packages/source/n/netCDF4/netCDF4-1.5.3.tar.gz"
  },
  "test":{
   "commands":[
    "ncinfo -h",
    "nc4tonc3 -h",
    "nc3tonc4 -h",
    "ncinfo -h",
    "nc4tonc3 -h",
    "nc3tonc4 -h",
    "ncinfo -h",
    "nc4tonc3 -h",
    "nc3tonc4 -h"
   ],
   "files":[
    "parallel_test.py",
    "parallel_test.py",
    "parallel_test.py"
   ],
   "imports":[
    "netCDF4",
    "cftime",
    "netCDF4",
    "cftime",
    "netCDF4",
    "cftime"
   ]
  }
 },
 "name":"netcdf4",
 "new_version":"1.5.3rel",
 "pinning_version":"2020.04.16.16.23.46",
 "raw_meta_yaml":"{% set version = \"1.5.3\" %}\n{% set build = 6 %}\n\n# recipe-lint fails if mpi is undefined\n{% set mpi = mpi or 'nompi' %}\n{% if mpi == \"nompi\" %}\n# prioritize nompi via build number\n{% set build = build + 100 %}\n{% endif %}\n\npackage:\n  name: netcdf4\n  version: {{ version }}\n\nsource:\n  url: https://pypi.io/packages/source/n/netCDF4/netCDF4-{{ version }}.tar.gz\n  sha256: 2a3ca855848f4bbf07fac366da77a681fcead18c0a8813d91d46302f562dc3be\n\nbuild:\n  skip: True  # [(win and vc<14) or (win and mpi != 'nompi')]\n  number: {{ build }}\n\n  # add build string so packages can depend on\n  # mpi or nompi variants explicitly:\n  # `netcdf4 * mpi_mpich_*` for mpich\n  # `netcdf4 * mpi_*` for any mpi\n  # `netcdf4 * nompi_*` for no mpi\n\n  {% if mpi != 'nompi' %}\n  {% set mpi_prefix = \"mpi_\" + mpi %}\n  {% else %}\n  {% set mpi_prefix = \"nompi\" %}\n  {% endif %}\n  string: \"{{ mpi_prefix }}_py{{ CONDA_PY }}h{{ PKG_HASH }}_{{ build }}\"\n  entry_points:\n    - ncinfo = netCDF4.utils:ncinfo\n    - nc4tonc3 = netCDF4.utils:nc4tonc3\n    - nc3tonc4 = netCDF4.utils:nc3tonc4\n\nrequirements:\n  build:\n    - {{ compiler('c') }}\n  host:\n    - python\n    - pip\n    - numpy\n    - cython >=0.19\n    - cftime >=1.0.1\n    # need to list hdf5 and libnetcdf twice to get version pinning from conda_build_config\n    # and build pinning from {{ mpi_prefix }}\n    - hdf5\n    - hdf5 * {{ mpi_prefix }}_*\n    - libnetcdf\n    - libnetcdf * {{ mpi_prefix }}_*\n    - {{ mpi }}  # [mpi != 'nompi']\n    - mpi4py  # [mpi != 'nompi']\n    - libssh2 1.8.*\n  run:\n    - python\n    - setuptools\n    - {{ pin_compatible('numpy') }}\n    - cftime\n    # the 'nompi' build should work with both non-MPI and MPI variants of the\n    # following libs\n    - hdf5  # [mpi == 'nompi']\n    - libnetcdf  # [mpi == 'nompi']\n    - hdf5 * {{ mpi_prefix }}_*  # [mpi != 'nompi']\n    - libnetcdf * {{ mpi_prefix }}_*  # [mpi != 'nompi']\n    - {{ mpi }}  # [mpi != 'nompi']\n    - mpi4py  # [mpi != 'nompi']\n    - openssh  # [mpi == 'openmpi']\n    - mkl 2020.0  # [win]\n    - intel-openmp 2020.0  # [win]\n    - libssh2 1.8.*\n\ntest:\n  files:\n    - parallel_test.py  # [mpi != 'nompi']\n  imports:\n    - netCDF4\n    - cftime\n  commands:\n    - ncinfo -h\n    - nc4tonc3 -h\n    - nc3tonc4 -h\n    - mpirun -np 4 python parallel_test.py  # [mpi == 'mpich']\n    - mpirun --oversubscribe -np 4 python parallel_test.py  # [mpi == 'openmpi']\n\nabout:\n  home: http://github.com/Unidata/netcdf4-python\n  license: OSI Approved and MIT\n  license_file: COPYING\n  summary: 'Provides an object-oriented python interface to the netCDF version 4 library'\n  dev_url: https://github.com/Unidata/netcdf4-python\n  doc_url: https://unidata.github.io/netcdf4-python\n\nextra:\n  recipe-maintainers:\n    - ocefpaf\n    - pelson\n    - dopplershift\n    - xylar\n",
 "req":{
  "__set__":true,
  "elements":[
   "c_compiler_stub",
   "cftime",
   "cython",
   "hdf5",
   "intel-openmp",
   "libnetcdf",
   "libssh2",
   "mkl",
   "mpi4py",
   "nompi",
   "numpy",
   "pip",
   "python",
   "setuptools"
  ]
 },
 "requirements":{
  "build":{
   "__set__":true,
   "elements":[
    "c_compiler_stub"
   ]
  },
  "host":{
   "__set__":true,
   "elements":[
    "cftime",
    "cython",
    "hdf5",
    "libnetcdf",
    "libssh2",
    "mpi4py",
    "nompi",
    "numpy",
    "pip",
    "python"
   ]
  },
  "run":{
   "__set__":true,
   "elements":[
    "cftime",
    "hdf5",
    "intel-openmp",
    "libnetcdf",
    "libssh2",
    "mkl",
    "mpi4py",
    "nompi",
    "numpy",
    "python",
    "setuptools"
   ]
  },
  "test":{
   "__set__":true,
   "elements":[]
  }
 },
 "smithy_version":"No azure token. Create a token and\nput it in ~/.conda-smithy/azure.token\n3.6.16",
 "strong_exports":false,
 "time":1568135267.7063527,
 "total_requirements":{
  "build":{
   "__set__":true,
   "elements":[
    "c_compiler_stub"
   ]
  },
  "host":{
   "__set__":true,
   "elements":[
    "cftime >=1.0.1",
    "cython >=0.19",
    "hdf5",
    "hdf5 * nompi_*",
    "libnetcdf",
    "libnetcdf * nompi_*",
    "libssh2 1.8.*",
    "mpi4py",
    "nompi",
    "numpy",
    "pip",
    "python"
   ]
  },
  "run":{
   "__set__":true,
   "elements":[
    "cftime",
    "hdf5 * nompi_*",
    "intel-openmp 2020.0",
    "libnetcdf * nompi_*",
    "libssh2 1.8.*",
    "mkl 2020.0",
    "mpi4py",
    "nompi",
    "numpy",
    "python",
    "setuptools"
   ]
  },
  "test":{
   "__set__":true,
   "elements":[]
  }
 },
 "url":"https://github.com/Unidata/netcdf4-python/archive/v1.5.1.2rel.tar.gz",
 "version":"1.5.3"
}