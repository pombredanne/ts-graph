{
 "PRed":[
  {
   "PR":{
    "__lazy_json__":"pr_json/238937464.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"Version",
    "migrator_version":0,
    "version":"0.10.0"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/284226986.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"Version",
    "migrator_version":0,
    "version":"0.10.1"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/284299328.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"Version",
    "migrator_version":0,
    "version":"0.10.2"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/284865744.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"Version",
    "migrator_version":0,
    "version":"0.10.3"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/377320213.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"Version",
    "migrator_version":0,
    "version":"0.11"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/382540338.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"Version",
    "migrator_version":0,
    "version":"0.12"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/415774208.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"Version",
    "migrator_version":0,
    "version":"0.13"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  }
 ],
 "bad":false,
 "conda-forge.yml":{},
 "feedstock_name":"vipaccess",
 "hash_type":"sha256",
 "meta_yaml":{
  "about":{
   "description":"If you need to access a network which uses VIP Access for two-factor\nauthentication, but can't or don't want to use Symantec's proprietary\napplications\u2014which are only available for Windows, MacOS, Android, iOS \u2014\nthen this is for you.\n",
   "dev_url":"https://github.com/dlenski/python-vipaccess",
   "doc_url":"https://github.com/dlenski/python-vipaccess",
   "home":"https://github.com/dlenski/python-vipaccess",
   "license":"Apache-2.0",
   "license_family":"Apache",
   "license_file":"LICENSE.txt",
   "summary":"A free software implementation of Symantec's VIP Access application and protocol"
  },
  "build":{
   "entry_points":[
    "vipaccess = vipaccess.__main__:main",
    "vipaccess = vipaccess.__main__:main",
    "vipaccess = vipaccess.__main__:main"
   ],
   "noarch":"python",
   "number":"1",
   "script":"-m pip install . --no-deps -vv"
  },
  "extra":{
   "recipe-maintainers":[
    "kynan",
    "kynan",
    "kynan"
   ]
  },
  "package":{
   "name":"vipaccess",
   "version":"0.13"
  },
  "requirements":{
   "host":[
    "python",
    "pip",
    "python",
    "pip",
    "python",
    "pip"
   ],
   "run":[
    "python",
    "lxml ==4.2.5",
    "oath >=1.4.1",
    "pycryptodome ==3.6.6",
    "requests",
    "python",
    "lxml ==4.2.5",
    "oath >=1.4.1",
    "pycryptodome ==3.6.6",
    "requests",
    "python",
    "lxml ==4.2.5",
    "oath >=1.4.1",
    "pycryptodome ==3.6.6",
    "requests"
   ]
  },
  "source":{
   "sha256":"3d58de34bdd5e8130897975610f589057bc6ebf78e2eb17b3ba49d22e3cfd21f",
   "url":"https://github.com/dlenski/python-vipaccess/archive/v0.13.tar.gz"
  },
  "test":{
   "commands":[
    "vipaccess --help",
    "vipaccess --help",
    "vipaccess --help"
   ],
   "imports":[
    "vipaccess",
    "vipaccess",
    "vipaccess"
   ]
  }
 },
 "name":"vipaccess",
 "new_version":"0.13",
 "new_version_attempts":{
  "0.13":1
 },
 "new_version_errors":{},
 "pinning_version":"2020.05.10.05.52.45",
 "raw_meta_yaml":"{% set name = \"vipaccess\" %}\n{% set version = \"0.13\" %}\n\npackage:\n  name: {{ name|lower }}\n  version: {{ version }}\n\nsource:\n  url: https://github.com/dlenski/python-{{ name }}/archive/v{{ version }}.tar.gz\n  sha256: 3d58de34bdd5e8130897975610f589057bc6ebf78e2eb17b3ba49d22e3cfd21f\n\nbuild:\n  noarch: python\n  number: 1\n  script: {{ PYTHON }} -m pip install . --no-deps -vv\n  entry_points:\n    - vipaccess = vipaccess.__main__:main\n\nrequirements:\n  host:\n    - python\n    - pip\n  run:\n    - python\n    - lxml ==4.2.5\n    - oath >=1.4.1\n    - pycryptodome ==3.6.6\n    - requests\n\ntest:\n  imports:\n    - vipaccess\n  commands:\n    - vipaccess --help\n\nabout:\n  home: https://github.com/dlenski/python-vipaccess\n  license: Apache-2.0\n  license_family: Apache\n  license_file: LICENSE.txt\n  summary: A free software implementation of Symantec's VIP Access application and protocol\n  description: |\n    If you need to access a network which uses VIP Access for two-factor\n    authentication, but can't or don't want to use Symantec's proprietary\n    applications\u2014which are only available for Windows, MacOS, Android, iOS \u2014\n    then this is for you.\n  doc_url: https://github.com/dlenski/python-vipaccess\n  dev_url: https://github.com/dlenski/python-vipaccess\n\nextra:\n  recipe-maintainers:\n    - kynan\n",
 "req":{
  "__set__":true,
  "elements":[
   "lxml",
   "oath",
   "pip",
   "pycryptodome",
   "python",
   "requests"
  ]
 },
 "requirements":{
  "build":{
   "__set__":true,
   "elements":[]
  },
  "host":{
   "__set__":true,
   "elements":[
    "pip",
    "python"
   ]
  },
  "run":{
   "__set__":true,
   "elements":[
    "lxml",
    "oath",
    "pycryptodome",
    "python",
    "requests"
   ]
  },
  "test":{
   "__set__":true,
   "elements":[]
  }
 },
 "smithy_version":"No azure token. Create a token and\nput it in ~/.conda-smithy/azure.token\n3.7.0\n",
 "strong_exports":false,
 "total_requirements":{
  "build":{
   "__set__":true,
   "elements":[]
  },
  "host":{
   "__set__":true,
   "elements":[
    "pip",
    "python"
   ]
  },
  "run":{
   "__set__":true,
   "elements":[
    "lxml ==4.2.5",
    "oath >=1.4.1",
    "pycryptodome ==3.6.6",
    "python",
    "requests"
   ]
  },
  "test":{
   "__set__":true,
   "elements":[]
  }
 },
 "url":"https://github.com/dlenski/python-vipaccess/archive/v0.10.3.tar.gz",
 "version":"0.13"
}