{
 "PRed":[
  {
   "data":{
    "bot_rerun":false,
    "migrator_name":"Version",
    "migrator_version":0,
    "version":"0.2.3"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/204540829.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"Version",
    "migrator_version":0,
    "version":"0.3.0"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/205092096.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"Version",
    "migrator_version":0,
    "version":"0.3.1"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/207781519.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"Version",
    "migrator_version":0,
    "version":"0.3.2"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/209610474.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"Version",
    "migrator_version":0,
    "version":"0.4.0"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/222657022.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"Version",
    "migrator_version":0,
    "version":"0.5.0"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/224054532.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"Version",
    "migrator_version":0,
    "version":"0.5.1"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/248265888.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"CompilerRebuild",
    "migrator_version":1,
    "name":"Python 3.7, GCC 7, R 3.5.1, openBLAS 0.3.2"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/271976431.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"Version",
    "migrator_version":0,
    "version":"0.5.3"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/320715818.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"Version",
    "migrator_version":0,
    "version":"0.6.0"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/324938730.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"Version",
    "migrator_version":0,
    "version":"0.6.1"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/324976996.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"Version",
    "migrator_version":0,
    "version":"0.6.2"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/332717844.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"Version",
    "migrator_version":0,
    "version":"0.6.3"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/359300363.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"Version",
    "migrator_version":0,
    "version":"0.6.4"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/359327993.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"Version",
    "migrator_version":0,
    "version":"0.6.5"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/367037281.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"Version",
    "migrator_version":0,
    "version":"0.6.6"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/401891339.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"Version",
    "migrator_version":0,
    "version":"0.7.0"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  }
 ],
 "bad":false,
 "conda-forge.yml":{},
 "feedstock_name":"libcxxwrap-julia",
 "hash_type":"sha256",
 "meta_yaml":{
  "about":{
   "description":"Lightweight library that exposes C++ types in Julia and vice versa",
   "dev_url":"https://github.com/JuliaInterop/libcxxwrap-julia",
   "doc_url":"https://github.com/JuliaInterop/libcxxwrap-julia",
   "home":"https://github.com/JuliaInterop/CxxWrap.jl",
   "license":"MIT",
   "license_family":"MIT",
   "license_file":"LICENSE.md",
   "summary":"Seamless operability between C++11 and Julia"
  },
  "build":{
   "number":"0",
   "run_exports":[
    "libcxxwrap-julia",
    "libcxxwrap-julia",
    "libcxxwrap-julia"
   ],
   "skip":true
  },
  "extra":{
   "recipe-maintainers":[
    "SylvainCorlay",
    "JohanMabille",
    "barche",
    "SylvainCorlay",
    "JohanMabille",
    "barche",
    "SylvainCorlay",
    "JohanMabille",
    "barche"
   ]
  },
  "package":{
   "name":"libcxxwrap-julia",
   "version":"0.6.6"
  },
  "requirements":{
   "build":[
    "cmake",
    "cxx_compiler_stub",
    "cmake",
    "cxx_compiler_stub",
    "cmake",
    "cxx_compiler_stub"
   ],
   "host":[
    "julia >=1.0,<1.1",
    "julia >=1.0,<1.1",
    "julia >=1.0,<1.1"
   ],
   "run":[
    "julia >=1.0,<1.1",
    "julia >=1.0,<1.1",
    "julia >=1.0,<1.1"
   ]
  },
  "source":{
   "fn":"libcxxwrap-julia-0.6.6.tar.gz",
   "sha256":"55d589348bfd803ab0b898141a1b09fc1692ef30eb5b4ede58eff3661ece4f1b",
   "url":"https://github.com/JuliaInterop/libcxxwrap-julia/archive/v0.6.6.tar.gz"
  },
  "test":{
   "commands":[
    "if exist %LIBRARY_PREFIX%\\include\\JlCxx\\jlcxx.hpp (exit 0) else (exit 1)",
    "if exist %LIBRARY_PREFIX%\\lib\\cmake\\JlCxx\\JlCxxConfig.cmake (exit 0) else (exit 1)",
    "if exist %LIBRARY_PREFIX%\\lib\\cmake\\JlCxx\\JlCxxConfigVersion.cmake (exit 0) else (exit 1)",
    "test -d ${PREFIX}/include/jlcxx",
    "test -f ${PREFIX}/include/jlcxx/jlcxx.hpp",
    "test -f ${PREFIX}/lib/cmake/JlCxx/JlCxxConfig.cmake",
    "test -f ${PREFIX}/lib/cmake/JlCxx/JlCxxConfigVersion.cmake",
    "test -d ${PREFIX}/include/jlcxx",
    "test -f ${PREFIX}/include/jlcxx/jlcxx.hpp",
    "test -f ${PREFIX}/lib/cmake/JlCxx/JlCxxConfig.cmake",
    "test -f ${PREFIX}/lib/cmake/JlCxx/JlCxxConfigVersion.cmake"
   ]
  }
 },
 "name":"libcxxwrap-julia",
 "new_version":"0.7.0",
 "new_version_attempts":{
  "0.7.0":1
 },
 "new_version_errors":{},
 "pinning_version":"2020.04.10",
 "raw_meta_yaml":"{% set name = \"libcxxwrap-julia\" %}\n{% set version = \"0.6.6\" %}\n{% set sha256 = \"55d589348bfd803ab0b898141a1b09fc1692ef30eb5b4ede58eff3661ece4f1b\" %}\n\npackage:\n  name: {{ name|lower }}\n  version: {{ version }}\n\nsource:\n  fn: {{ name }}-{{ version }}.tar.gz\n  url: https://github.com/JuliaInterop/libcxxwrap-julia/archive/v{{ version }}.tar.gz\n  sha256: {{ sha256 }}\n\nbuild:\n  number: 0\n  # Julia has not been packaged for conda on Windows\n  skip: true  # [win]\n  run_exports:\n    - {{ pin_subpackage(name, max_pin='x.x') }}\n\nrequirements:\n  build:\n    - cmake\n    - {{ compiler('cxx') }}\n  host:\n    - julia >=1.0,<1.1\n  run:\n    - julia >=1.0,<1.1\n\ntest:\n  commands:\n    - test -d ${PREFIX}/include/jlcxx  # [unix]\n    - test -f ${PREFIX}/include/jlcxx/jlcxx.hpp  # [unix]\n    - test -f ${PREFIX}/lib/cmake/JlCxx/JlCxxConfig.cmake  # [unix]\n    - test -f ${PREFIX}/lib/cmake/JlCxx/JlCxxConfigVersion.cmake  # [unix]\n\n    - if exist %LIBRARY_PREFIX%\\include\\JlCxx\\jlcxx.hpp (exit 0) else (exit 1)  # [win]\n    - if exist %LIBRARY_PREFIX%\\lib\\cmake\\JlCxx\\JlCxxConfig.cmake (exit 0) else (exit 1)  # [win]\n    - if exist %LIBRARY_PREFIX%\\lib\\cmake\\JlCxx\\JlCxxConfigVersion.cmake (exit 0) else (exit 1)  # [win]\n\nabout:\n  home: https://github.com/JuliaInterop/CxxWrap.jl\n  license: MIT\n  license_family: MIT\n  license_file: LICENSE.md\n  summary: 'Seamless operability between C++11 and Julia'\n  description: 'Lightweight library that exposes C++ types in Julia and vice versa'\n  doc_url: https://github.com/JuliaInterop/libcxxwrap-julia\n  dev_url: https://github.com/JuliaInterop/libcxxwrap-julia\n\nextra:\n  recipe-maintainers:\n    - SylvainCorlay\n    - JohanMabille\n    - barche\n",
 "req":{
  "__set__":true,
  "elements":[
   "cmake",
   "cxx_compiler_stub",
   "julia"
  ]
 },
 "requirements":{
  "build":{
   "__set__":true,
   "elements":[
    "cmake",
    "cxx_compiler_stub"
   ]
  },
  "host":{
   "__set__":true,
   "elements":[
    "julia"
   ]
  },
  "run":{
   "__set__":true,
   "elements":[
    "julia"
   ]
  },
  "test":{
   "__set__":true,
   "elements":[]
  }
 },
 "smithy_version":"No azure token. Create a token and\nput it in ~/.conda-smithy/azure.token\n3.6.16",
 "strong_exports":false,
 "total_requirements":{
  "build":{
   "__set__":true,
   "elements":[
    "cmake",
    "cxx_compiler_stub"
   ]
  },
  "host":{
   "__set__":true,
   "elements":[
    "julia >=1.0,<1.1"
   ]
  },
  "run":{
   "__set__":true,
   "elements":[
    "julia >=1.0,<1.1"
   ]
  },
  "test":{
   "__set__":true,
   "elements":[]
  }
 },
 "url":"https://github.com/JuliaInterop/libcxxwrap-julia/archive/v0.5.3.tar.gz",
 "version":"0.6.6"
}