{
 "PRed":[
  {
   "data":{
    "bot_rerun":false,
    "migrator_name":"Version",
    "migrator_version":0,
    "version":"1.10.2"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/196927885.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"Compiler",
    "migrator_version":0
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/210252806.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"Version",
    "migrator_version":0,
    "version":"1.10.3"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/215130350.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"CompilerRebuild",
    "migrator_version":1,
    "name":"Python 3.7, GCC 7, R 3.5.1, openBLAS 0.3.2"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/221548585.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"Version",
    "migrator_version":0,
    "version":"1.10.4"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR":{
    "id":"e26ab312-ffb7-4be8-b7b7-bda1f0b01b29",
    "merged_at":"fix aarch missing prs",
    "state":"closed"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"ArchRebuild",
    "migrator_version":1,
    "name":"aarch64 and ppc64le addition"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/256471110.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"Version",
    "migrator_version":0,
    "version":"1.10.5"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/308176471.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"GFortranOSXRebuild",
    "migrator_version":0,
    "name":"fortran_compiler_stub-7"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/356493058.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"Version",
    "migrator_version":0,
    "version":"1.10.6"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  }
 ],
 "bad":false,
 "conda-forge.yml":{
  "compiler_stack":"comp7",
  "max_py_ver":"37",
  "max_r_ver":"35",
  "provider":{
   "linux_aarch64":"default",
   "linux_ppc64le":"default",
   "win":"azure"
  }
 },
 "feedstock_name":"hdf5",
 "hash_type":"sha256",
 "meta_yaml":{
  "about":{
   "home":"http://www.hdfgroup.org/HDF5/",
   "license":"HDF5",
   "license_family":"BSD",
   "license_file":"COPYING",
   "summary":"HDF5 is a data model, library, and file format for storing and managing data"
  },
  "build":{
   "number":"100",
   "skip":true,
   "string":"nompi_h_100"
  },
  "extra":{
   "recipe-maintainers":[
    "jakirkham",
    "gillins",
    "groutr",
    "ocefpaf",
    "astrofrog-conda-forge",
    "marqh",
    "marcelotrevisani",
    "scopatz",
    "beckermr",
    "davidbrochart",
    "SylvainCorlay",
    "jakirkham",
    "gillins",
    "groutr",
    "ocefpaf",
    "astrofrog-conda-forge",
    "marqh",
    "marcelotrevisani",
    "scopatz",
    "beckermr",
    "davidbrochart",
    "SylvainCorlay",
    "jakirkham",
    "gillins",
    "groutr",
    "ocefpaf",
    "astrofrog-conda-forge",
    "marqh",
    "marcelotrevisani",
    "scopatz",
    "beckermr",
    "davidbrochart",
    "SylvainCorlay"
   ]
  },
  "outputs":[
   {
    "build":{
     "run_exports":[
      "hdf5"
     ],
     "skip":true,
     "string":"nompi_h_100"
    },
    "name":"hdf5",
    "requirements":{
     "build":[
      "c_compiler_stub",
      "cxx_compiler_stub",
      "cmake >=3.2.2",
      "ninja"
     ],
     "host":[
      "nompi",
      "zlib"
     ],
     "run":[
      "nompi",
      "zlib"
     ]
    },
    "script":"install.bat",
    "test":{
     "commands":[
      "where gif2h5",
      "where h52gif",
      "where h5copy",
      "where h5debug",
      "where h5diff",
      "where h5dump",
      "where h5import",
      "where h5jam",
      "where h5ls",
      "where h5mkgrp",
      "where h5repack",
      "where h5repart",
      "where h5stat",
      "where h5unjam",
      "if not exist %PREFIX%\\\\Library\\\\lib\\\\hdf5.lib exit 1",
      "if not exist %PREFIX%\\\\Library\\\\bin\\\\hdf5.dll exit 1",
      "if not exist %PREFIX%\\\\Library\\\\lib\\\\hdf5_cpp.lib exit 1",
      "if not exist %PREFIX%\\\\Library\\\\bin\\\\hdf5_cpp.dll exit 1",
      "if not exist %PREFIX%\\\\Library\\\\lib\\\\hdf5_hl.lib exit 1",
      "if not exist %PREFIX%\\\\Library\\\\bin\\\\hdf5_hl.dll exit 1",
      "if not exist %PREFIX%\\\\Library\\\\lib\\\\hdf5_hl_cpp.lib exit 1",
      "if not exist %PREFIX%\\\\Library\\\\bin\\\\hdf5_hl_cpp.dll exit 1"
     ],
     "files":[
      "h5_cmprss.c",
      "h5tutr_cmprss.cpp",
      "h5_cmprss.f90",
      "compound_fortran2003.f90"
     ],
     "requires":[
      "c_compiler_stub",
      "cxx_compiler_stub"
     ]
    }
   },
   {
    "build":{
     "run_exports":[
      "hdf5"
     ],
     "string":"nompi_h_100"
    },
    "name":"hdf5",
    "requirements":{
     "build":[
      "c_compiler_stub",
      "cxx_compiler_stub",
      "fortran_compiler_stub",
      "libtool",
      "make"
     ],
     "host":[
      "nompi",
      "zlib"
     ],
     "run":[
      "nompi",
      "zlib"
     ]
    },
    "script":"install.sh",
    "test":{
     "commands":[
      "command -v h5c++",
      "command -v h5cc",
      "command -v h5fc",
      "command -v h5perf_serial",
      "command -v h5redeploy",
      "command -v gif2h5",
      "command -v h52gif",
      "command -v h5copy",
      "command -v h5debug",
      "command -v h5diff",
      "command -v h5dump",
      "command -v h5import",
      "command -v h5jam",
      "command -v h5ls",
      "command -v h5mkgrp",
      "command -v h5repack",
      "command -v h5repart",
      "command -v h5stat",
      "command -v h5unjam",
      "test -f $PREFIX/lib/libhdf5${SHLIB_EXT}",
      "test -f $PREFIX/lib/libhdf5_cpp${SHLIB_EXT}",
      "test -f $PREFIX/lib/libhdf5_hl${SHLIB_EXT}",
      "test -f $PREFIX/lib/libhdf5_hl_cpp${SHLIB_EXT}"
     ],
     "files":[
      "h5_cmprss.c",
      "h5tutr_cmprss.cpp",
      "h5_cmprss.f90",
      "compound_fortran2003.f90"
     ],
     "requires":[
      "c_compiler_stub",
      "cxx_compiler_stub",
      "fortran_compiler_stub",
      "pkg-config"
     ]
    }
   },
   {
    "build":{
     "string":"nompi_h_100"
    },
    "name":"hdf5-static",
    "requirements":{
     "build":[
      "c_compiler_stub",
      "cxx_compiler_stub",
      "fortran_compiler_stub"
     ],
     "run":[
      "hdf5"
     ]
    },
    "script":"install-static.sh",
    "test":{
     "commands":[
      "test -f $PREFIX/lib/libhdf5.a",
      "test -f $PREFIX/lib/libhdf5_cpp.a",
      "test -f $PREFIX/lib/libhdf5_hl.a",
      "test -f $PREFIX/lib/libhdf5_hl_cpp.a"
     ]
    }
   },
   {
    "build":{
     "run_exports":[
      "hdf5"
     ],
     "string":"nompi_h_100"
    },
    "name":"hdf5",
    "requirements":{
     "build":[
      "c_compiler_stub",
      "cxx_compiler_stub",
      "fortran_compiler_stub",
      "libtool",
      "make"
     ],
     "host":[
      "nompi",
      "zlib"
     ],
     "run":[
      "nompi",
      "zlib"
     ]
    },
    "script":"install.sh",
    "test":{
     "commands":[
      "command -v h5c++",
      "command -v h5cc",
      "command -v h5fc",
      "command -v h5perf_serial",
      "command -v h5redeploy",
      "command -v gif2h5",
      "command -v h52gif",
      "command -v h5copy",
      "command -v h5debug",
      "command -v h5diff",
      "command -v h5dump",
      "command -v h5import",
      "command -v h5jam",
      "command -v h5ls",
      "command -v h5mkgrp",
      "command -v h5repack",
      "command -v h5repart",
      "command -v h5stat",
      "command -v h5unjam",
      "test -f $PREFIX/lib/libhdf5${SHLIB_EXT}",
      "test -f $PREFIX/lib/libhdf5_cpp${SHLIB_EXT}",
      "test -f $PREFIX/lib/libhdf5_hl${SHLIB_EXT}",
      "test -f $PREFIX/lib/libhdf5_hl_cpp${SHLIB_EXT}"
     ],
     "files":[
      "h5_cmprss.c",
      "h5tutr_cmprss.cpp",
      "h5_cmprss.f90",
      "compound_fortran2003.f90"
     ],
     "requires":[
      "c_compiler_stub",
      "cxx_compiler_stub",
      "fortran_compiler_stub",
      "pkg-config"
     ]
    }
   },
   {
    "build":{
     "string":"nompi_h_100"
    },
    "name":"hdf5-static",
    "requirements":{
     "build":[
      "c_compiler_stub",
      "cxx_compiler_stub",
      "fortran_compiler_stub"
     ],
     "run":[
      "hdf5"
     ]
    },
    "script":"install-static.sh",
    "test":{
     "commands":[
      "test -f $PREFIX/lib/libhdf5.a",
      "test -f $PREFIX/lib/libhdf5_cpp.a",
      "test -f $PREFIX/lib/libhdf5_hl.a",
      "test -f $PREFIX/lib/libhdf5_hl_cpp.a"
     ]
    }
   }
  ],
  "package":{
   "name":"hdf5_split",
   "version":"1.10.6"
  },
  "requirements":{
   "build":[
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cmake >=3.2.2",
    "ninja",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "fortran_compiler_stub",
    "libtool",
    "make",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "fortran_compiler_stub",
    "libtool",
    "make"
   ],
   "host":[
    "nompi",
    "zlib",
    "nompi",
    "zlib",
    "nompi",
    "zlib"
   ],
   "run":[
    "nompi",
    "zlib",
    "nompi",
    "zlib",
    "nompi",
    "zlib"
   ]
  },
  "source":{
   "patches":[
    "patches/test_Makefile.in.patch",
    "patches/testpar_Makefile.in.patch",
    "patches/testh5diff.sh.in.patch",
    "patches/test_Makefile.in.patch",
    "patches/testpar_Makefile.in.patch",
    "patches/testh5diff.sh.in.patch",
    "patches/osx_configure.patch",
    "patches/test_Makefile.in.patch",
    "patches/testpar_Makefile.in.patch",
    "patches/testh5diff.sh.in.patch"
   ],
   "sha256":"5f9a3ee85db4ea1d3b1fa9159352aebc2af72732fc2f58c96a3f0768dba0e9aa",
   "url":"https://support.hdfgroup.org/ftp/HDF5/releases/hdf5-1.10/hdf5-1.10.6/src/hdf5-1.10.6.tar.gz"
  }
 },
 "name":"hdf5_split",
 "new_version":"1.10.6",
 "outputs_names":[
  "hdf5",
  "hdf5-static"
 ],
 "pinning_version":"2019.12.18",
 "raw_meta_yaml":"{% set version = \"1.10.6\" %}\n{% set maj_min_ver = \".\".join(version.split(\".\")[:2]) %}\n{% set build = 0 %}\n\n# recipe-lint fails if mpi is undefined\n{% set mpi = mpi or 'nompi' %}\n{% if mpi == \"nompi\" %}\n# prioritize nompi via build number\n{% set build = build + 100 %}\n{% endif %}\n\n{% if mpi != \"nompi\" %}\n{% set mpi_prefix = \"mpi_\" + mpi %}\n{% else %}\n{% set mpi_prefix = \"nompi\" %}\n{% endif %}\n# add build string so packages can depend on\n# mpi or nompi variants\n# dependencies:\n# `hdf5 * mpi_mpich_*` for mpich\n# `hdf5 * mpi_*` for any mpi\n# `hdf5 * nompi_*` for no mpi\n\n# mpi builds require the right mpi\n# non-mpi builds *do not* appear to require non-mpi builds\n# at least not always\n\n{% if mpi != 'nompi' %}\n{% set build_pin = mpi_prefix + '_*' %}\n{% else %}\n{% set build_pin = '' %}\n{% endif %}\n\npackage:\n  name: hdf5_split\n  version: {{ version }}\n\nsource:\n  url: https://support.hdfgroup.org/ftp/HDF5/releases/hdf5-{{ maj_min_ver }}/hdf5-{{ version }}/src/hdf5-{{ version }}.tar.gz\n  sha256: 5f9a3ee85db4ea1d3b1fa9159352aebc2af72732fc2f58c96a3f0768dba0e9aa\n  patches:\n    # Patches the test suite to skip the cache, cache_image, and fheap tests\n    # This test has been found to rather resource intensive.\n    # In particular, it caused Travis CI's Mac builds to hang.\n    # Given that we simply skip the test on all platforms.\n    - patches/test_Makefile.in.patch\n    # same thing, but for parallel tests:\n    - patches/testpar_Makefile.in.patch\n    # ref: http://hdf-forum.184993.n3.nabble.com/HDF5-1-8-14-15-16-with-OpenMPI-1-10-1-and-Intel-16-1-td4028533.html\n    - patches/testpar_pflush.sh.in.openmpi.patch  # [mpi == 'openmpi']\n    # h5diff help output test is flaky with mpi\n    - patches/testh5diff.sh.in.patch  # [mpi != 'nompi']\n    # Disable shared Fortran API building on OSX\n    - patches/osx_configure.patch  # [osx]\n\nbuild:\n  number: {{ build }}\n  skip: True  # [win and vc<14]\n  string: \"{{ mpi_prefix }}_h{{ PKG_HASH }}_{{ build }}\"\n\nrequirements:\n  build:\n    - {{ compiler('c') }}\n    - {{ compiler('cxx') }}\n    - {{ compiler('fortran') }}  # [not win]\n    - cmake >=3.2.2              # [win]\n    - libtool                    # [not win]\n    - make                       # [not win]\n    - ninja                      # [win]\n  host:\n    - {{ mpi }}  # [mpi != 'nompi']\n    - zlib\n  run:\n    - {{ mpi }}  # [mpi != 'nompi']\n    - zlib\n\noutputs:\n  - name: hdf5\n    build:\n      skip: True  # [win and vc<14]\n      run_exports:\n        - {{ pin_subpackage('hdf5', max_pin='x.x.x') }} {{ build_pin }}\n      string: \"{{ mpi_prefix }}_h{{ PKG_HASH }}_{{ build }}\"\n    script: install.sh  # [not win]\n    script: install.bat  # [win]\n\n    requirements:\n      build:\n        - {{ compiler('c') }}\n        - {{ compiler('cxx') }}\n        - {{ compiler('fortran') }}  # [not win]\n        - cmake >=3.2.2  # [win]\n        - libtool  # [not win]\n        - make                       # [not win]\n        - ninja  # [win]\n      host:\n        - {{ mpi }}  # [mpi != 'nompi']\n        - zlib\n      run:\n        - {{ mpi }}  # [mpi != 'nompi']\n        - zlib\n\n    test:\n      requires:\n        - {{ compiler('c') }}\n        - {{ compiler('cxx') }}\n        - {{ compiler('fortran') }}  # [not win]\n        - pkg-config  # [not win]\n      files:\n        - h5_cmprss.c\n        - h5tutr_cmprss.cpp\n        - h5_cmprss.f90\n        - compound_fortran2003.f90\n      commands:\n        # Verify UNIX CLI tools.\n        {% if mpi == 'nompi' %}\n        {% set h5_compilers = [\n            \"h5c++\",\n            \"h5cc\",\n            \"h5fc\",\n        ] %}\n        {% else %}\n        # no p on parallel h5c++!\n        {% set h5_compilers = [\n            \"h5c++\",\n            \"h5pcc\",\n            \"h5pfc\",\n        ] %}\n        {% endif %}\n        {% set hdf5_unix_cmds = h5_compilers + [\n            \"h5perf_serial\",\n            \"h5redeploy\",\n        ] %}\n        {% for each_hdf5_unix_cmd in hdf5_unix_cmds %}\n        - command -v {{ each_hdf5_unix_cmd }}   # [not win]\n        {% endfor %}\n        # Verify CLI tools.\n        {% set hdf5_cmds = [\n            \"gif2h5\",\n            \"h52gif\",\n            \"h5copy\",\n            \"h5debug\",\n            \"h5diff\",\n            \"h5dump\",\n            \"h5import\",\n            \"h5jam\",\n            \"h5ls\",\n            \"h5mkgrp\",\n            \"h5repack\",\n            \"h5repart\",\n            \"h5stat\",\n            \"h5unjam\"\n        ] %}\n        {% for each_hdf5_cmd in hdf5_cmds %}\n        - command -v {{ each_hdf5_cmd }}  # [not win]\n        - where {{ each_hdf5_cmd }}  # [win]\n        {% endfor %}\n        # Verify libraries.\n        {% set hdf5_libs = [\n            \"hdf5\",\n            \"hdf5_cpp\",\n            \"hdf5_hl\",\n            \"hdf5_hl_cpp\"\n        ] %}\n        {% for each_hdf5_lib in hdf5_libs %}\n        - test -f $PREFIX/lib/lib{{ each_hdf5_lib }}${SHLIB_EXT}  # [not win]\n        - if not exist %PREFIX%\\\\Library\\\\lib\\\\{{ each_hdf5_lib }}.lib exit 1  # [win]\n        - if not exist %PREFIX%\\\\Library\\\\bin\\\\{{ each_hdf5_lib }}.dll exit 1  # [win]\n        {% endfor %}\n\n  - name: hdf5-static                                   # [not win]\n    build:                                              # [not win]\n      string: \"{{ mpi_prefix }}_h{{ PKG_HASH }}_{{ build }}\"  # [not win]\n    requirements:                                       # [not win]\n      build:                                            # [not win]\n        - {{ compiler('c') }}                           # [not win]\n        - {{ compiler('cxx') }}                         # [not win]\n        - {{ compiler('fortran') }}                     # [not win]\n      run:                                              # [not win]\n        - {{ pin_subpackage('hdf5', exact=True) }}      # [not win]\n    script: install-static.sh                           # [not win]\n    test:                                               # [not win]\n      commands:                                         # [not win]\n        {% set hdf5_libs = [\"hdf5\", \"hdf5_cpp\", \"hdf5_hl\", \"hdf5_hl_cpp\"] %}  # [not win]\n        {% for each_hdf5_lib in hdf5_libs %}            # [not win]\n        - test -f $PREFIX/lib/lib{{ each_hdf5_lib }}.a  # [not win]\n        {% endfor %}                                    # [not win]\n\nabout:\n  home: http://www.hdfgroup.org/HDF5/\n  license: HDF5\n  license_family: BSD\n  license_file: COPYING\n  summary: HDF5 is a data model, library, and file format for storing and managing data\n\nextra:\n  recipe-maintainers:\n    - jakirkham\n    - gillins\n    - groutr\n    - ocefpaf\n    - astrofrog-conda-forge\n    - marqh\n    - marcelotrevisani\n    - scopatz\n    - beckermr\n    - davidbrochart\n    - SylvainCorlay\n",
 "req":{
  "__set__":true,
  "elements":[
   "c_compiler_stub",
   "cmake",
   "cxx_compiler_stub",
   "fortran_compiler_stub",
   "hdf5",
   "libtool",
   "make",
   "ninja",
   "nompi",
   "zlib"
  ]
 },
 "requirements":{
  "build":{
   "__set__":true,
   "elements":[
    "c_compiler_stub",
    "cmake",
    "cxx_compiler_stub",
    "fortran_compiler_stub",
    "libtool",
    "make",
    "ninja"
   ]
  },
  "host":{
   "__set__":true,
   "elements":[
    "nompi",
    "zlib"
   ]
  },
  "run":{
   "__set__":true,
   "elements":[
    "hdf5",
    "nompi",
    "zlib"
   ]
  },
  "test":{
   "__set__":true,
   "elements":[
    "c_compiler_stub",
    "cxx_compiler_stub",
    "fortran_compiler_stub",
    "pkg-config"
   ]
  }
 },
 "smithy_version":"3.6.5",
 "strong_exports":false,
 "total_requirements":{
  "build":{
   "__set__":true,
   "elements":[
    "c_compiler_stub",
    "cmake >=3.2.2",
    "cxx_compiler_stub",
    "fortran_compiler_stub",
    "libtool",
    "make",
    "ninja"
   ]
  },
  "host":{
   "__set__":true,
   "elements":[
    "nompi",
    "zlib"
   ]
  },
  "run":{
   "__set__":true,
   "elements":[
    "hdf5",
    "nompi",
    "zlib"
   ]
  },
  "test":{
   "__set__":true,
   "elements":[
    "c_compiler_stub",
    "cxx_compiler_stub",
    "fortran_compiler_stub",
    "pkg-config"
   ]
  }
 },
 "url":"https://support.hdfgroup.org/ftp/HDF5/releases/hdf5-1.10/hdf5-1.10.5/src/hdf5-1.10.5.tar.gz",
 "version":"1.10.6"
}