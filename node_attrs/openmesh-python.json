{
 "PRed":[
  {
   "PR":{
    "__lazy_json__":"pr_json/336095324.json"
   },
   "data":{
    "bot_rerun":1589309502.7604232,
    "migrator_name":"MigrationYaml",
    "migrator_object_version":1,
    "migrator_version":0,
    "name":"python38"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/393042258.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"MigrationYaml",
    "migrator_object_version":1,
    "migrator_version":0,
    "name":"pypy"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/416941085.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"MigrationYaml",
    "migrator_object_version":1,
    "migrator_version":0,
    "name":"python38"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  }
 ],
 "bad":false,
 "conda-forge.yml":{
  "provider":{
   "win":"azure"
  }
 },
 "feedstock_name":"openmesh-python",
 "hash_type":"sha256",
 "meta_yaml":{
  "about":{
   "description":"OpenMesh is a versatile halfedge-based data structure for representing\nand manipulating polygon meshes.\nThe OpenMesh Python bindings are are tightly integrated with numpy and\nare implemented using pybind11.\n",
   "dev_url":"https://www.graphics.rwth-aachen.de:9000/OpenMesh/openmesh-python",
   "doc_url":"https://openmesh-python.readthedocs.io/en/latest/",
   "home":"https://www.graphics.rwth-aachen.de:9000/OpenMesh/openmesh-python",
   "license":"BSD 3-Clause",
   "license_family":"BSD",
   "license_file":"LICENSE",
   "summary":"OpenMesh Python Bindings"
  },
  "build":{
   "number":"0",
   "script":" -m pip install . --no-deps -vv"
  },
  "extra":{
   "recipe-maintainers":[
    "mdraw",
    "mdraw",
    "mdraw"
   ]
  },
  "package":{
   "name":"openmesh-python",
   "version":"1.1.3"
  },
  "requirements":{
   "build":[
    "cxx_compiler_stub",
    "cmake",
    "cxx_compiler_stub",
    "cmake",
    "cxx_compiler_stub",
    "cmake"
   ],
   "host":[
    "python",
    "pip",
    "setuptools_scm",
    "numpy",
    "pybind11",
    "python",
    "pip",
    "setuptools_scm",
    "numpy",
    "pybind11",
    "python",
    "pip",
    "setuptools_scm",
    "numpy",
    "pybind11"
   ],
   "run":[
    "python",
    "numpy",
    "python",
    "numpy",
    "python",
    "numpy"
   ]
  },
  "source":{
   "sha256":"c1d24abc85b7b518fe619639f89750bf19ed3b8938fed4dd739a72f1e6f8b0f6",
   "url":"https://pypi.io/packages/source/o/openmesh/openmesh-1.1.3.tar.gz"
  },
  "test":{
   "commands":[
    "cd tests",
    "python -m unittest discover",
    "cd tests",
    "python -m unittest discover",
    "cd tests",
    "python -m unittest discover"
   ],
   "imports":[
    "openmesh",
    "openmesh",
    "openmesh"
   ],
   "source_files":[
    "tests",
    "tests",
    "tests"
   ]
  }
 },
 "name":"openmesh-python",
 "new_version":"1.1.3",
 "pinning_version":"2020.05.12.18.03.58",
 "raw_meta_yaml":"{% set name = \"openmesh-python\" %}\n{% set pypiname = \"openmesh\" %}\n{% set version = \"1.1.3\" %}\n\npackage:\n  name: {{ name|lower }}\n  version: {{ version }}\n\nsource:\n  url: https://pypi.io/packages/source/{{ pypiname[0] }}/{{ pypiname }}/{{ pypiname }}-{{ version }}.tar.gz\n  sha256: c1d24abc85b7b518fe619639f89750bf19ed3b8938fed4dd739a72f1e6f8b0f6\n\nbuild:\n  number: 0\n  script: \"{{ PYTHON }} -m pip install . --no-deps -vv\"\n\nrequirements:\n  build:\n    - {{ compiler('cxx') }}\n    - cmake\n  host:\n    - python\n    - pip\n    - setuptools_scm\n    - numpy\n    - pybind11\n  run:\n    - python\n    - {{ pin_compatible('numpy') }}\n\ntest:\n  imports:\n    - openmesh\n  source_files:\n    - tests\n  commands:\n    - cd tests\n    - python -m unittest discover\n\nabout:\n  home: https://www.graphics.rwth-aachen.de:9000/OpenMesh/openmesh-python\n  license: BSD 3-Clause\n  license_family: BSD\n  license_file: LICENSE\n  summary: 'OpenMesh Python Bindings'\n\n  description: |\n    OpenMesh is a versatile halfedge-based data structure for representing\n    and manipulating polygon meshes.\n    The OpenMesh Python bindings are are tightly integrated with numpy and\n    are implemented using pybind11.\n  doc_url: https://openmesh-python.readthedocs.io/en/latest/\n  dev_url: https://www.graphics.rwth-aachen.de:9000/OpenMesh/openmesh-python\n\nextra:\n  recipe-maintainers:\n    - mdraw\n",
 "req":{
  "__set__":true,
  "elements":[
   "cmake",
   "cxx_compiler_stub",
   "numpy",
   "pip",
   "pybind11",
   "python",
   "setuptools_scm"
  ]
 },
 "requirements":{
  "build":{
   "__set__":true,
   "elements":[
    "cmake",
    "cxx_compiler_stub"
   ]
  },
  "host":{
   "__set__":true,
   "elements":[
    "numpy",
    "pip",
    "pybind11",
    "python",
    "setuptools_scm"
   ]
  },
  "run":{
   "__set__":true,
   "elements":[
    "numpy",
    "python"
   ]
  },
  "test":{
   "__set__":true,
   "elements":[]
  }
 },
 "smithy_version":"No azure token. Create a token and\nput it in ~/.conda-smithy/azure.token\n3.7.0\n",
 "strong_exports":false,
 "total_requirements":{
  "build":{
   "__set__":true,
   "elements":[
    "cmake",
    "cxx_compiler_stub"
   ]
  },
  "host":{
   "__set__":true,
   "elements":[
    "numpy",
    "pip",
    "pybind11",
    "python",
    "setuptools_scm"
   ]
  },
  "run":{
   "__set__":true,
   "elements":[
    "numpy",
    "python"
   ]
  },
  "test":{
   "__set__":true,
   "elements":[]
  }
 },
 "url":"https://pypi.io/packages/source/o/openmesh/openmesh-1.1.3.tar.gz",
 "version":"1.1.3"
}