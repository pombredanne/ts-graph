{
 "PRed":[
  {
   "PR":{
    "__lazy_json__":"pr_json/198445525.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"Compiler",
    "migrator_version":0
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/230722232.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"CompilerRebuild",
    "migrator_version":1,
    "name":"Python 3.7, GCC 7, R 3.5.1, openBLAS 0.3.2"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/268741060.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"Version",
    "migrator_version":0,
    "version":"2.2.0"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/273552313.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"Version",
    "migrator_version":0,
    "version":"2.2.1"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/273704518.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"Rebuild",
    "migrator_version":0,
    "name":"qt-5.9.7"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/283603698.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"Rebuild",
    "migrator_object_version":3,
    "migrator_version":0,
    "name":"OpenSSL"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/305739051.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"Rebuild",
    "migrator_version":0,
    "name":"qt-5.12"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/375720517.json"
   },
   "data":{
    "bot_rerun":1581782824.591454,
    "migrator_name":"Version",
    "migrator_version":0,
    "version":"4.5"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/400015769.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"Version",
    "migrator_version":0,
    "version":"2.3.0"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  }
 ],
 "bad":false,
 "conda-forge.yml":{
  "compiler_stack":"comp7",
  "max_py_ver":"37",
  "max_r_ver":"35",
  "provider":{
   "win":"azure"
  }
 },
 "feedstock_name":"qca",
 "hash_type":"sha256",
 "meta_yaml":{
  "about":{
   "description":"Taking a hint from the similarly-named Java Cryptography Architecture, QCA\naims to provide a straightforward and cross-platform crypto API, using Qt\ndatatypes and conventions. QCA separates the API from the implementation,\nusing plugins known as Providers. The advantage of this model is to allow\napplications to avoid linking to or explicitly depending on any particular\ncryptographic library. This allows one to easily change or upgrade crypto\nimplementations without even needing to recompile the application! QCA\nshould work everywhere Qt does, including Windows/Unix/MacOSX.\n",
   "dev_url":"https://quickgit.kde.org/?p=qca.git",
   "doc_url":"http://delta.affinix.com/docs/qca/",
   "home":"http://delta.affinix.com/qca/",
   "license":"LGPL-2.1",
   "license_file":"COPYING",
   "summary":"Qt Cryptographic Architecture (QCA) provides a straightforward and cross-platform crypto API, using Qt datatypes and conventions."
  },
  "build":{
   "number":"3",
   "skip":true
  },
  "extra":{
   "recipe-maintainers":[
    "ceholden",
    "ceholden",
    "ceholden"
   ]
  },
  "package":{
   "name":"qca",
   "version":"2.2.1"
  },
  "requirements":{
   "build":[
    "cmake",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cmake",
    "pkg-config",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cmake",
    "pkg-config",
    "c_compiler_stub",
    "cxx_compiler_stub"
   ],
   "host":[
    "qt",
    "qt",
    "qt"
   ],
   "run":[
    "qt",
    "openssl",
    "qt",
    "openssl",
    "qt",
    "openssl"
   ]
  },
  "source":{
   "patches":[
    "enable_language.patch",
    "enable_language.patch",
    "enable_language.patch"
   ],
   "sha256":"c67fc0fa8ae6cb3d0ba0fbd8fca8ee8e4c5061b99f1fd685fd7d9800cef17f6b",
   "url":"https://github.com/KDE/qca/archive/v2.2.1.tar.gz"
  },
  "test":{
   "commands":[
    "if not exist %LIBRARY_BIN%\\\\qca-qt5.dll exit 1",
    "qcatool-qt5.exe  --noprompt --newpass= key make rsa 2048 test.key",
    "test -d ${PREFIX}/lib/qca-qt5.framework",
    "qcatool-qt5 --noprompt --newpass= key make rsa 2048 test.key",
    "test -f ${PREFIX}/lib/libqca-qt5.so",
    "qcatool-qt5 --noprompt --newpass= key make rsa 2048 test.key"
   ]
  }
 },
 "name":"qca",
 "new_version":"2.3.0",
 "new_version_attempts":{
  "2.3.0":1,
  "4.5":30
 },
 "pinning_version":"2020.04.07",
 "raw_meta_yaml":"{% set version = \"2.2.1\" %}\n\npackage:\n  name: qca\n  version: {{ version }}\n\nsource:\n  url: https://github.com/KDE/qca/archive/v{{ version }}.tar.gz\n  sha256: c67fc0fa8ae6cb3d0ba0fbd8fca8ee8e4c5061b99f1fd685fd7d9800cef17f6b\n  patches:\n    - enable_language.patch\n\nbuild:\n  number: 3\n  skip: True  # [win and vc<14]\n\nrequirements:\n  build:\n    - cmake\n    - pkg-config  # [unix]\n    - {{ compiler('c') }}\n    - {{ compiler('cxx') }}\n  host:\n    - qt\n  run:\n    - qt\n    - openssl\n\ntest:\n  commands:\n    - test -f ${PREFIX}/lib/libqca-qt5.so  # [linux]\n    - test -d ${PREFIX}/lib/qca-qt5.framework  # [osx]\n    - if not exist %LIBRARY_BIN%\\\\qca-qt5.dll exit 1  # [win]\n    - qcatool-qt5 --noprompt --newpass= key make rsa 2048 test.key  # [unix]\n    - qcatool-qt5.exe  --noprompt --newpass= key make rsa 2048 test.key  # [win]\n\nabout:\n  home: http://delta.affinix.com/qca/\n  license: LGPL-2.1\n  license_file: COPYING\n  summary: Qt Cryptographic Architecture (QCA) provides a straightforward and cross-platform crypto API, using Qt datatypes and conventions.\n  description: |\n    Taking a hint from the similarly-named Java Cryptography Architecture, QCA\n    aims to provide a straightforward and cross-platform crypto API, using Qt\n    datatypes and conventions. QCA separates the API from the implementation,\n    using plugins known as Providers. The advantage of this model is to allow\n    applications to avoid linking to or explicitly depending on any particular\n    cryptographic library. This allows one to easily change or upgrade crypto\n    implementations without even needing to recompile the application! QCA\n    should work everywhere Qt does, including Windows/Unix/MacOSX.\n  doc_url: http://delta.affinix.com/docs/qca/\n  dev_url: https://quickgit.kde.org/?p=qca.git\n\nextra:\n  recipe-maintainers:\n    - ceholden\n",
 "req":{
  "__set__":true,
  "elements":[
   "c_compiler_stub",
   "cmake",
   "cxx_compiler_stub",
   "openssl",
   "pkg-config",
   "qt"
  ]
 },
 "requirements":{
  "build":{
   "__set__":true,
   "elements":[
    "c_compiler_stub",
    "cmake",
    "cxx_compiler_stub",
    "pkg-config"
   ]
  },
  "host":{
   "__set__":true,
   "elements":[
    "qt"
   ]
  },
  "run":{
   "__set__":true,
   "elements":[
    "openssl",
    "qt"
   ]
  },
  "test":{
   "__set__":true,
   "elements":[]
  }
 },
 "smithy_version":"No azure token. Create a token and\nput it in ~/.conda-smithy/azure.token\n3.6.15",
 "strong_exports":false,
 "total_requirements":{
  "build":{
   "__set__":true,
   "elements":[
    "c_compiler_stub",
    "cmake",
    "cxx_compiler_stub",
    "pkg-config"
   ]
  },
  "host":{
   "__set__":true,
   "elements":[
    "qt"
   ]
  },
  "run":{
   "__set__":true,
   "elements":[
    "openssl",
    "qt"
   ]
  },
  "test":{
   "__set__":true,
   "elements":[]
  }
 },
 "url":"https://github.com/KDE/qca/archive/v2.2.1.tar.gz",
 "version":"2.2.1"
}