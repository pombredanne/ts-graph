{
 "bad":false,
 "conda-forge.yml":{},
 "feedstock_name":"intel_repack",
 "hash_type":"md5",
 "meta_yaml":{
  "about":{
   "home":"https://github.com/conda-forge/intel-repack-feedstock",
   "license":"LicenseRef-ProprietaryIntel",
   "summary":"repackaged intel libraries"
  },
  "build":{
   "binary_relocation":false,
   "detect_binary_files_with_prefix":false,
   "missing_dso_whitelist":[
    "/lib*/ld-linux.so.2",
    "/lib64/ld-linux-x86-64.so.2",
    "/lib*/libpthread.so.0",
    "/lib*/libdl.so.2",
    "/lib*/libgcc_s.so.1",
    "/lib*/libc.so.6",
    "/lib*/libm.so.6",
    "libiomp5.so",
    "libcoi_device.so.0",
    "C:\\Windows\\System32\\WINTRUST.dll",
    "libtbb.dylib",
    "$RPATH/libtbb.dylib",
    "libiomp5.dylib",
    "$RPATH/libiomp5.dylib",
    "/lib*/ld-linux.so.2",
    "/lib64/ld-linux-x86-64.so.2",
    "/lib*/libpthread.so.0",
    "/lib*/libdl.so.2",
    "/lib*/libgcc_s.so.1",
    "/lib*/libc.so.6",
    "/lib*/libm.so.6",
    "libiomp5.so",
    "libcoi_device.so.0",
    "/usr/lib/libc++.1.dylib",
    "C:\\Windows\\System32\\WINTRUST.dll",
    "/lib*/ld-linux.so.2",
    "/lib64/ld-linux-x86-64.so.2",
    "/lib*/libpthread.so.0",
    "/lib*/libdl.so.2",
    "/lib*/libgcc_s.so.1",
    "/lib*/libc.so.6",
    "/lib*/libm.so.6",
    "libiomp5.so",
    "libcoi_device.so.0",
    "/usr/lib/libstdc++.so.6",
    "/usr/lib64/libstdc++.so.6",
    "C:\\Windows\\System32\\WINTRUST.dll"
   ],
   "number":"218",
   "skip":true
  },
  "extra":{
   "recipe-maintainers":[
    "isuruf",
    "beckermr",
    "isuruf",
    "beckermr",
    "isuruf",
    "beckermr"
   ]
  },
  "outputs":[
   {
    "about":{
     "description":"Intel Math Kernel Library is a BLAS implementation tuned for high performance on Intel CPUs.\nThis package is a repackaged set of binaries obtained directly from Intel\\'s anaconda.org channel.\n",
     "doc_url":"https://software.intel.com/en-us/mkl/documentation",
     "home":"https://software.intel.com/en-us/mkl",
     "license":"LicenseRef-ProprietaryIntel",
     "license_family":"Proprietary",
     "license_file":"mkl/info/LICENSE.txt",
     "summary":"Math library for Intel and compatible processors"
    },
    "name":"mkl",
    "requirements":{
     "host":[
      "llvm-openmp"
     ],
     "run":[
      "llvm-openmp"
     ]
    },
    "script":"repack.bat",
    "test":{
     "commands":null
    }
   },
   {
    "about":{
     "description":"Intel Math Kernel Library is a BLAS implementation tuned for high performance on Intel CPUs.\nThis package is a repackaged set of binaries obtained directly from Intel\\'s anaconda.org channel.\n",
     "doc_url":"https://software.intel.com/en-us/mkl/documentation",
     "home":"https://software.intel.com/en-us/mkl",
     "license":"LicenseRef-ProprietaryIntel",
     "license_family":"Proprietary",
     "license_file":"mkl/info/LICENSE.txt",
     "summary":"MKL headers for developing software that uses MKL"
    },
    "name":"mkl-include",
    "script":"repack.bat",
    "test":{
     "commands":null
    }
   },
   {
    "about":{
     "home":"https://software.intel.com/en-us/mkl",
     "license":"LicenseRef-ProprietaryIntel",
     "license_family":"Proprietary",
     "license_file":"mkl/info/LICENSE.txt",
     "summary":"Metapackage of MKL headers and libraries for developing software that uses MKL"
    },
    "build":{
     "number":"219",
     "run_exports":[
      "mkl"
     ]
    },
    "name":"mkl-devel",
    "requirements":{
     "run":[
      "mkl",
      "mkl-include"
     ]
    },
    "script":"install-devel.bat",
    "test":{
     "commands":null
    }
   },
   {
    "about":{
     "home":"https://software.intel.com/en-us/daal",
     "license":"LicenseRef-ProprietaryIntel",
     "license_family":"Proprietary",
     "license_file":"mkl/info/LICENSE.txt",
     "summary":"DAAL runtime libraries"
    },
    "build":{
     "binary_relocation":false,
     "detect_binary_files_with_prefix":false,
     "missing_dso_whitelist":[
      "/lib*/ld-linux.so.2",
      "/lib64/ld-linux-x86-64.so.2",
      "/lib*/libpthread.so.0",
      "/lib*/libdl.so.2",
      "/lib*/libgcc_s.so.1",
      "/lib*/libc.so.6",
      "/lib*/libm.so.6",
      "lib/libgcc_s.so.1",
      "libiomp5.so",
      "libcoi_device.so.0",
      "C:\\Windows\\System32\\WINTRUST.dll"
     ],
     "number":"218"
    },
    "name":"daal",
    "requirements":{
     "host":[
      "tbb 2020.*"
     ],
     "run":[
      "tbb 2020.*"
     ]
    },
    "script":"repack.bat",
    "test":{
     "commands":null
    }
   },
   {
    "about":{
     "home":"https://software.intel.com/en-us/daal",
     "license":"LicenseRef-ProprietaryIntel",
     "license_family":"Proprietary",
     "license_file":"mkl/info/LICENSE.txt",
     "summary":"Headers for building against DAAL libraries"
    },
    "build":{
     "number":"218"
    },
    "name":"daal-include",
    "script":"repack.bat",
    "test":{
     "commands":null
    }
   },
   {
    "about":{
     "home":"https://software.intel.com/en-us/daal",
     "license":"LicenseRef-ProprietaryIntel",
     "license_family":"Proprietary",
     "license_file":"mkl/info/LICENSE.txt",
     "summary":"Static libraries for DAAL"
    },
    "build":{
     "number":"218"
    },
    "name":"daal-static",
    "requirements":{
     "run":[
      "daal-include",
      "tbb 2020.*"
     ]
    },
    "script":"repack.bat",
    "test":{
     "commands":null
    }
   },
   {
    "about":{
     "home":"https://software.intel.com/en-us/daal",
     "license":"LicenseRef-ProprietaryIntel",
     "license_family":"Proprietary",
     "license_file":"mkl/info/LICENSE.txt",
     "summary":"Devel package for building things linked against DAAL shared libraries"
    },
    "build":{
     "number":"218",
     "run_exports":[
      "daal"
     ]
    },
    "name":"daal-devel",
    "requirements":{
     "run":[
      "daal-include",
      "daal"
     ]
    },
    "script":"repack.bat",
    "test":{
     "commands":null
    }
   },
   {
    "about":{
     "description":"Intel Math Kernel Library is a BLAS implementation tuned for high performance on Intel CPUs.\nThis package is a repackaged set of binaries obtained directly from Intel\\'s anaconda.org channel.\n",
     "doc_url":"https://software.intel.com/en-us/mkl/documentation",
     "home":"https://software.intel.com/en-us/mkl",
     "license":"LicenseRef-ProprietaryIntel",
     "license_family":"Proprietary",
     "license_file":"mkl/info/LICENSE.txt",
     "summary":"Math library for Intel and compatible processors"
    },
    "name":"mkl",
    "requirements":{
     "host":[
      "llvm-openmp"
     ],
     "run":[
      "llvm-openmp"
     ]
    },
    "script":"repack.sh",
    "test":{
     "commands":[
      "ls -A $PREFIX/lib/*"
     ]
    }
   },
   {
    "about":{
     "description":"Intel Math Kernel Library is a BLAS implementation tuned for high performance on Intel CPUs.\nThis package is a repackaged set of binaries obtained directly from Intel\\'s anaconda.org channel.\n",
     "doc_url":"https://software.intel.com/en-us/mkl/documentation",
     "home":"https://software.intel.com/en-us/mkl",
     "license":"LicenseRef-ProprietaryIntel",
     "license_family":"Proprietary",
     "license_file":"mkl/info/LICENSE.txt",
     "summary":"MKL headers for developing software that uses MKL"
    },
    "name":"mkl-include",
    "script":"repack.sh",
    "test":{
     "commands":[
      "ls -A $PREFIX/include/*"
     ]
    }
   },
   {
    "about":{
     "home":"https://software.intel.com/en-us/mkl",
     "license":"LicenseRef-ProprietaryIntel",
     "license_family":"Proprietary",
     "license_file":"mkl/info/LICENSE.txt",
     "summary":"Metapackage of MKL headers and libraries for developing software that uses MKL"
    },
    "build":{
     "number":"219",
     "run_exports":[
      "mkl"
     ]
    },
    "name":"mkl-devel",
    "requirements":{
     "run":[
      "mkl",
      "mkl-include"
     ]
    },
    "script":"install-devel.sh",
    "test":{
     "commands":[
      "ls -A $PREFIX/lib/*",
      "ls -A $PREFIX/include/*"
     ]
    }
   },
   {
    "about":{
     "home":"https://software.intel.com/en-us/daal",
     "license":"LicenseRef-ProprietaryIntel",
     "license_family":"Proprietary",
     "license_file":"mkl/info/LICENSE.txt",
     "summary":"DAAL runtime libraries"
    },
    "build":{
     "binary_relocation":false,
     "detect_binary_files_with_prefix":false,
     "missing_dso_whitelist":[
      "libtbb.dylib",
      "$RPATH/libtbb.dylib",
      "libiomp5.dylib",
      "$RPATH/libiomp5.dylib",
      "/lib*/ld-linux.so.2",
      "/lib64/ld-linux-x86-64.so.2",
      "/lib*/libpthread.so.0",
      "/lib*/libdl.so.2",
      "/lib*/libgcc_s.so.1",
      "/lib*/libc.so.6",
      "/lib*/libm.so.6",
      "lib/libgcc_s.so.1",
      "libiomp5.so",
      "libcoi_device.so.0",
      "/usr/lib/libc++.1.dylib",
      "C:\\Windows\\System32\\WINTRUST.dll"
     ],
     "number":"218"
    },
    "name":"daal",
    "requirements":{
     "host":[
      "tbb 2020.*"
     ],
     "run":[
      "tbb 2020.*"
     ]
    },
    "script":"repack.sh",
    "test":{
     "commands":[
      "ls -A $PREFIX/lib/*"
     ]
    }
   },
   {
    "about":{
     "home":"https://software.intel.com/en-us/daal",
     "license":"LicenseRef-ProprietaryIntel",
     "license_family":"Proprietary",
     "license_file":"mkl/info/LICENSE.txt",
     "summary":"Headers for building against DAAL libraries"
    },
    "build":{
     "number":"218"
    },
    "name":"daal-include",
    "script":"repack.sh",
    "test":{
     "commands":[
      "ls -A $PREFIX/include/*"
     ]
    }
   },
   {
    "about":{
     "home":"https://software.intel.com/en-us/daal",
     "license":"LicenseRef-ProprietaryIntel",
     "license_family":"Proprietary",
     "license_file":"mkl/info/LICENSE.txt",
     "summary":"Static libraries for DAAL"
    },
    "build":{
     "number":"218"
    },
    "name":"daal-static",
    "requirements":{
     "run":[
      "daal-include",
      "tbb 2020.*"
     ]
    },
    "script":"repack.sh",
    "test":{
     "commands":[
      "ls -A $PREFIX/lib/*"
     ]
    }
   },
   {
    "about":{
     "home":"https://software.intel.com/en-us/daal",
     "license":"LicenseRef-ProprietaryIntel",
     "license_family":"Proprietary",
     "license_file":"mkl/info/LICENSE.txt",
     "summary":"Devel package for building things linked against DAAL shared libraries"
    },
    "build":{
     "number":"218",
     "run_exports":[
      "daal"
     ]
    },
    "name":"daal-devel",
    "requirements":{
     "run":[
      "daal-include",
      "daal"
     ]
    },
    "script":"repack.sh",
    "test":{
     "commands":[
      "ls -A $PREFIX/lib/*",
      "ls -A $PREFIX/include/*"
     ]
    }
   },
   {
    "about":{
     "description":"Intel Math Kernel Library is a BLAS implementation tuned for high performance on Intel CPUs.\nThis package is a repackaged set of binaries obtained directly from Intel\\'s anaconda.org channel.\n",
     "doc_url":"https://software.intel.com/en-us/mkl/documentation",
     "home":"https://software.intel.com/en-us/mkl",
     "license":"LicenseRef-ProprietaryIntel",
     "license_family":"Proprietary",
     "license_file":"mkl/info/LICENSE.txt",
     "summary":"Math library for Intel and compatible processors"
    },
    "name":"mkl",
    "requirements":{
     "host":[
      "llvm-openmp"
     ],
     "run":[
      "llvm-openmp"
     ]
    },
    "script":"repack.sh",
    "test":{
     "commands":[
      "ls -A $PREFIX/lib/*"
     ]
    }
   },
   {
    "about":{
     "description":"Intel Math Kernel Library is a BLAS implementation tuned for high performance on Intel CPUs.\nThis package is a repackaged set of binaries obtained directly from Intel\\'s anaconda.org channel.\n",
     "doc_url":"https://software.intel.com/en-us/mkl/documentation",
     "home":"https://software.intel.com/en-us/mkl",
     "license":"LicenseRef-ProprietaryIntel",
     "license_family":"Proprietary",
     "license_file":"mkl/info/LICENSE.txt",
     "summary":"MKL headers for developing software that uses MKL"
    },
    "name":"mkl-include",
    "script":"repack.sh",
    "test":{
     "commands":[
      "ls -A $PREFIX/include/*"
     ]
    }
   },
   {
    "about":{
     "home":"https://software.intel.com/en-us/mkl",
     "license":"LicenseRef-ProprietaryIntel",
     "license_family":"Proprietary",
     "license_file":"mkl/info/LICENSE.txt",
     "summary":"Metapackage of MKL headers and libraries for developing software that uses MKL"
    },
    "build":{
     "number":"219",
     "run_exports":[
      "mkl"
     ]
    },
    "name":"mkl-devel",
    "requirements":{
     "run":[
      "mkl",
      "mkl-include"
     ]
    },
    "script":"install-devel.sh",
    "test":{
     "commands":[
      "ls -A $PREFIX/lib/*",
      "ls -A $PREFIX/include/*"
     ]
    }
   },
   {
    "about":{
     "home":"https://software.intel.com/en-us/daal",
     "license":"LicenseRef-ProprietaryIntel",
     "license_family":"Proprietary",
     "license_file":"mkl/info/LICENSE.txt",
     "summary":"DAAL runtime libraries"
    },
    "build":{
     "binary_relocation":false,
     "detect_binary_files_with_prefix":false,
     "missing_dso_whitelist":[
      "/lib*/ld-linux.so.2",
      "/lib64/ld-linux-x86-64.so.2",
      "/lib*/libpthread.so.0",
      "/lib*/libdl.so.2",
      "/lib*/libgcc_s.so.1",
      "/lib*/libc.so.6",
      "/lib*/libm.so.6",
      "lib/libgcc_s.so.1",
      "libiomp5.so",
      "libcoi_device.so.0",
      "/usr/lib/libstdc++.so.6",
      "/usr/lib64/libstdc++.so.6",
      "C:\\Windows\\System32\\WINTRUST.dll"
     ],
     "number":"218"
    },
    "name":"daal",
    "requirements":{
     "host":[
      "tbb 2020.*"
     ],
     "run":[
      "tbb 2020.*"
     ]
    },
    "script":"repack.sh",
    "test":{
     "commands":[
      "ls -A $PREFIX/lib/*"
     ]
    }
   },
   {
    "about":{
     "home":"https://software.intel.com/en-us/daal",
     "license":"LicenseRef-ProprietaryIntel",
     "license_family":"Proprietary",
     "license_file":"mkl/info/LICENSE.txt",
     "summary":"Headers for building against DAAL libraries"
    },
    "build":{
     "number":"218"
    },
    "name":"daal-include",
    "script":"repack.sh",
    "test":{
     "commands":[
      "ls -A $PREFIX/include/*"
     ]
    }
   },
   {
    "about":{
     "home":"https://software.intel.com/en-us/daal",
     "license":"LicenseRef-ProprietaryIntel",
     "license_family":"Proprietary",
     "license_file":"mkl/info/LICENSE.txt",
     "summary":"Static libraries for DAAL"
    },
    "build":{
     "number":"218"
    },
    "name":"daal-static",
    "requirements":{
     "run":[
      "daal-include",
      "tbb 2020.*"
     ]
    },
    "script":"repack.sh",
    "test":{
     "commands":[
      "ls -A $PREFIX/lib/*"
     ]
    }
   },
   {
    "about":{
     "home":"https://software.intel.com/en-us/daal",
     "license":"LicenseRef-ProprietaryIntel",
     "license_family":"Proprietary",
     "license_file":"mkl/info/LICENSE.txt",
     "summary":"Devel package for building things linked against DAAL shared libraries"
    },
    "build":{
     "number":"218",
     "run_exports":[
      "daal"
     ]
    },
    "name":"daal-devel",
    "requirements":{
     "run":[
      "daal-include",
      "daal"
     ]
    },
    "script":"repack.sh",
    "test":{
     "commands":[
      "ls -A $PREFIX/lib/*",
      "ls -A $PREFIX/include/*"
     ]
    }
   }
  ],
  "package":{
   "name":"intel_repack",
   "version":"2020.1"
  },
  "source":[
   {
    "folder":"mkl",
    "url":"https://anaconda.org/intel/mkl/2020.1/download//mkl-2020.1-intel_216.tar.bz2"
   },
   {
    "folder":"mkl-devel",
    "url":"https://anaconda.org/intel/mkl-devel/2020.1/download//mkl-devel-2020.1-intel_216.tar.bz2"
   },
   {
    "folder":"mkl-include",
    "url":"https://anaconda.org/intel/mkl-include/2020.1/download//mkl-include-2020.1-intel_216.tar.bz2"
   },
   {
    "folder":"daal",
    "url":"https://anaconda.org/intel/daal/2020.1/download//daal-2020.1-intel_216.tar.bz2"
   },
   {
    "folder":"daal-include",
    "url":"https://anaconda.org/intel/daal-include/2020.1/download//daal-include-2020.1-intel_216.tar.bz2"
   },
   {
    "folder":"daal-static",
    "url":"https://anaconda.org/intel/daal-static/2020.1/download//daal-static-2020.1-intel_216.tar.bz2"
   },
   {
    "folder":"daal-devel",
    "url":"https://anaconda.org/intel/daal-devel/2020.1/download//daal-devel-2020.1-intel_216.tar.bz2"
   },
   {
    "folder":"mkl",
    "url":"https://anaconda.org/intel/mkl/2020.1/download//mkl-2020.1-intel_216.tar.bz2"
   },
   {
    "folder":"mkl-devel",
    "url":"https://anaconda.org/intel/mkl-devel/2020.1/download//mkl-devel-2020.1-intel_216.tar.bz2"
   },
   {
    "folder":"mkl-include",
    "url":"https://anaconda.org/intel/mkl-include/2020.1/download//mkl-include-2020.1-intel_216.tar.bz2"
   },
   {
    "folder":"daal",
    "url":"https://anaconda.org/intel/daal/2020.1/download//daal-2020.1-intel_216.tar.bz2"
   },
   {
    "folder":"daal-include",
    "url":"https://anaconda.org/intel/daal-include/2020.1/download//daal-include-2020.1-intel_216.tar.bz2"
   },
   {
    "folder":"daal-static",
    "url":"https://anaconda.org/intel/daal-static/2020.1/download//daal-static-2020.1-intel_216.tar.bz2"
   },
   {
    "folder":"daal-devel",
    "url":"https://anaconda.org/intel/daal-devel/2020.1/download//daal-devel-2020.1-intel_216.tar.bz2"
   },
   {
    "folder":"mkl",
    "url":"https://anaconda.org/intel/mkl/2020.1/download//mkl-2020.1-intel_216.tar.bz2"
   },
   {
    "folder":"mkl-devel",
    "url":"https://anaconda.org/intel/mkl-devel/2020.1/download//mkl-devel-2020.1-intel_216.tar.bz2"
   },
   {
    "folder":"mkl-include",
    "url":"https://anaconda.org/intel/mkl-include/2020.1/download//mkl-include-2020.1-intel_216.tar.bz2"
   },
   {
    "folder":"daal",
    "url":"https://anaconda.org/intel/daal/2020.1/download//daal-2020.1-intel_216.tar.bz2"
   },
   {
    "folder":"daal-include",
    "url":"https://anaconda.org/intel/daal-include/2020.1/download//daal-include-2020.1-intel_216.tar.bz2"
   },
   {
    "folder":"daal-static",
    "url":"https://anaconda.org/intel/daal-static/2020.1/download//daal-static-2020.1-intel_216.tar.bz2"
   },
   {
    "folder":"daal-devel",
    "url":"https://anaconda.org/intel/daal-devel/2020.1/download//daal-devel-2020.1-intel_216.tar.bz2"
   }
  ]
 },
 "name":"intel_repack",
 "new_version":false,
 "outputs_names":[
  "daal",
  "daal-devel",
  "daal-include",
  "daal-static",
  "mkl",
  "mkl-devel",
  "mkl-include"
 ],
 "raw_meta_yaml":"{% set version = \"2020.1\" %}\n{% set buildnum = \"217\" %}  # [linux]\n{% set buildnum = \"216\" %}  # [not linux]\n\n{% set my_channel_targets = channel_targets if channel_targets is defined else ['conda-forge', 'defaults'] %}\n\n# use this if our build script changes and we need to increment beyond intel's version\n{% set dstbuildnum = '2' %}\n{% set openmp_version = version %}\n# 117 was intel's base build number.  We're up 1 after making the license file not read-only\n{% set openmp_buildnum = buildnum|int + dstbuildnum|int %}\n\npackage:\n  name: intel_repack\n  version: {{ version }}\n\nsource:\n  - url: https://anaconda.org/intel/mkl/{{ version }}/download/{{ target_platform }}/mkl-{{ version }}-intel_{{ buildnum }}.tar.bz2\n    folder: mkl\n  - url: https://anaconda.org/intel/mkl-devel/{{ version }}/download/{{ target_platform }}/mkl-devel-{{ version }}-intel_{{ buildnum }}.tar.bz2\n    folder: mkl-devel\n  - url: https://anaconda.org/intel/mkl-include/{{ version }}/download/{{ target_platform }}/mkl-include-{{ version }}-intel_{{ buildnum }}.tar.bz2\n    folder: mkl-include\n  {% if 'conda-forge' not in my_channel_targets %}\n  - url: https://anaconda.org/intel/intel-openmp/{{ openmp_version }}/download/{{ target_platform }}/intel-openmp-{{ openmp_version }}-intel_{{ openmp_buildnum }}.tar.bz2\n    folder: intel-openmp\n  {% endif %}\n  {% if target_platform != 'osx-64' %}\n  - url: https://anaconda.org/intel/daal/{{ version }}/download/{{ target_platform }}/daal-{{ version }}-intel_{{ buildnum }}.tar.bz2\n    folder: daal\n  - url: https://anaconda.org/intel/daal-include/{{ version }}/download/{{ target_platform }}/daal-include-{{ version }}-intel_{{ buildnum }}.tar.bz2\n    folder: daal-include\n  - url: https://anaconda.org/intel/daal-static/{{ version }}/download/{{ target_platform }}/daal-static-{{ version }}-intel_{{ buildnum }}.tar.bz2\n    folder: daal-static\n  - url: https://anaconda.org/intel/daal-devel/{{ version }}/download/{{ target_platform }}/daal-devel-{{ version }}-intel_{{ buildnum }}.tar.bz2\n    folder: daal-devel\n  {% endif %}\n\nbuild:\n  # 117 was intel's base build number.  We're up 1 after making the license file not read-only\n  number: {{ buildnum|int + dstbuildnum|int }}\n  binary_relocation: false\n  detect_binary_files_with_prefix: false\n  skip: True                                  # [win or not x86]\n  missing_dso_whitelist:\n    # just ignore tbb on mac.  We could add it as a dep when we have it.\n    - libtbb.dylib                   # [osx]\n    - \"$RPATH/libtbb.dylib\"          # [osx]\n    # this one should be here, probably needs fixup of RUNPATH/RPATH\n    - libiomp5.dylib                   # [osx]\n    - \"$RPATH/libiomp5.dylib\"          # [osx]\n    # normal linux stuff that would go away if we had libgcc-ng in the run deps\n    - /lib*/ld-linux.so.2\n    - /lib64/ld-linux-x86-64.so.2\n    - /lib*/libpthread.so.0\n    - /lib*/libdl.so.2\n    - /lib*/libgcc_s.so.1\n    - /lib*/libc.so.6\n    - /lib*/libm.so.6\n    # these two really shouldn't be here.  See mkl_repack_and_patchelf.sh\n    - libiomp5.so\n    - libcoi_device.so.0\n    - /usr/lib/libstdc++.so.6       # [linux]\n    - /usr/lib64/libstdc++.so.6     # [linux]\n    - /usr/lib/libc++.1.dylib       # [osx]\n    # hooray, windows\n    - \"C:\\\\Windows\\\\System32\\\\WINTRUST.dll\"\n\noutputs:\n  - name: mkl\n    script: repack.sh   # [unix]\n    script: repack.bat  # [win]\n    requirements:\n      {% if 'conda-forge' not in my_channel_targets %}\n      host:\n        - intel-openmp\n      run:\n        - intel-openmp\n      {% else %}\n      host:\n        - llvm-openmp\n      run:\n        - llvm-openmp\n      {% endif %}\n    about:\n      home: https://software.intel.com/en-us/mkl\n      license: LicenseRef-ProprietaryIntel\n      license_family: Proprietary\n      license_file: mkl/info/LICENSE.txt\n      summary: Math library for Intel and compatible processors\n      description: |\n        Intel Math Kernel Library is a BLAS implementation tuned for high performance on Intel CPUs.\n        This package is a repackaged set of binaries obtained directly from Intel\\'s anaconda.org channel.\n      doc_url: https://software.intel.com/en-us/mkl/documentation\n    test:\n      commands:\n        - ls -A $PREFIX/lib/*  # [unix]\n\n  - name: mkl-include\n    script: repack.sh   # [unix]\n    script: repack.bat  # [win]\n    about:\n      home: https://software.intel.com/en-us/mkl\n      license: LicenseRef-ProprietaryIntel\n      license_family: Proprietary\n      license_file: mkl/info/LICENSE.txt\n      summary: MKL headers for developing software that uses MKL\n      description: |\n        Intel Math Kernel Library is a BLAS implementation tuned for high performance on Intel CPUs.\n        This package is a repackaged set of binaries obtained directly from Intel\\'s anaconda.org channel.\n      doc_url: https://software.intel.com/en-us/mkl/documentation\n    test:\n      commands:\n        - ls -A $PREFIX/include/*  # [unix]\n\n  {% if 'conda-forge' not in my_channel_targets %}\n  - name: intel-openmp\n    script: repack.sh   # [unix]\n    script: repack.bat  # [win]\n    number: {{ openmp_buildnum }}\n    version: {{ openmp_version }}\n    about:\n      home: https://software.intel.com/en-us/node/522690\n      license: LicenseRef-ProprietaryIntel\n      license_family: Proprietary\n      license_file: mkl/info/LICENSE.txt\n      summary: Math library for Intel and compatible processors\n      description: |\n        Intel openmp runtime implementation\n        This package is a repackaged set of binaries obtained directly from Intel\\'s anaconda.org channel.\n      doc_url: https://software.intel.com/en-us/node/522690\n    test:\n      commands:\n        - ls -A $PREFIX/lib/*  # [unix]\n\n  # mutex package to keep only one blas implementation in a given env\n  - name: blas\n    version: 1.0\n    build:\n      string: mkl\n    test:\n      commands:\n        - echo 'works!'\n    about:\n      home: https://github.com/conda-forge/intel-repack-feedstock\n      license: BSD-3-Clause\n      license_file: ANACONDA_LICENSE\n      summary: 'BLAS mutex for MKL'\n  {% endif %}\n\n  - name: mkl-devel\n    script: install-devel.sh   # [unix]\n    script: install-devel.bat  # [win]\n    build:\n      # we had to fix site.cfg in 2019.1.  We're off by one.\n      number: {{ buildnum|int + dstbuildnum|int + 1 }}\n      # when stuff is built with MKL, ensure that constraint makes mkl runtime libs as new or\n      #     newer than build version\n      run_exports:\n        - {{ pin_subpackage('mkl') }}\n        {% if 'conda-forge' not in my_channel_targets %}\n        - {{ pin_subpackage('blas', exact=True) }}\n        {% endif %}\n    requirements:\n      run:\n        - {{ pin_subpackage('mkl', exact=True) }}\n        - {{ pin_subpackage('mkl-include', exact=True) }}\n        {% if 'conda-forge' not in my_channel_targets %}\n        - blas * mkl\n        {% endif %}\n    about:\n      home: https://software.intel.com/en-us/mkl\n      summary: Metapackage of MKL headers and libraries for developing software that uses MKL\n      license: LicenseRef-ProprietaryIntel\n      license_family: Proprietary\n      license_file: mkl/info/LICENSE.txt\n    test:\n      commands:\n        - ls -A $PREFIX/lib/*  # [unix]\n        - ls -A $PREFIX/include/*  # [unix]\n\n  {% if target_platform != 'osx-64' %}\n  - name: daal\n    script: repack.sh   # [unix]\n    script: repack.bat  # [win]\n    build:\n      number: {{ buildnum|int + dstbuildnum|int }}\n      binary_relocation: false\n      detect_binary_files_with_prefix: false\n      missing_dso_whitelist:\n        # just ignore tbb on mac.  We could add it as a dep when we have it.\n        - libtbb.dylib                   # [osx]\n        - \"$RPATH/libtbb.dylib\"          # [osx]\n        # this one should be here, probably needs fixup of RUNPATH/RPATH\n        - libiomp5.dylib                   # [osx]\n        - \"$RPATH/libiomp5.dylib\"          # [osx]\n        # normal linux stuff that would go away if we had libgcc-ng in the run deps\n        - /lib*/ld-linux.so.2\n        - /lib64/ld-linux-x86-64.so.2\n        - /lib*/libpthread.so.0\n        - /lib*/libdl.so.2\n        - /lib*/libgcc_s.so.1\n        - /lib*/libc.so.6\n        - /lib*/libm.so.6\n        - lib/libgcc_s.so.1\n        # these two really shouldn't be here.  See mkl_repack_and_patchelf.sh\n        - libiomp5.so\n        - libcoi_device.so.0\n        - /usr/lib/libstdc++.so.6       # [linux]\n        - /usr/lib64/libstdc++.so.6     # [linux]\n        - /usr/lib/libc++.1.dylib       # [osx]\n        # hooray, windows\n        - \"C:\\\\Windows\\\\System32\\\\WINTRUST.dll\"\n    requirements:\n      host:\n        - tbb {{ version.split('.')[0] }}.*\n      run:\n        - tbb {{ version.split('.')[0] }}.*\n    about:\n      home: https://software.intel.com/en-us/daal\n      summary: DAAL runtime libraries\n      license: LicenseRef-ProprietaryIntel\n      license_family: Proprietary\n      license_file: mkl/info/LICENSE.txt\n    test:\n      commands:\n        - ls -A $PREFIX/lib/*  # [unix]\n\n  - name: daal-include\n    script: repack.sh   # [unix]\n    script: repack.bat  # [win]\n    build:\n      number: {{ buildnum|int + dstbuildnum|int }}\n    about:\n      home: https://software.intel.com/en-us/daal\n      summary: Headers for building against DAAL libraries\n      license: LicenseRef-ProprietaryIntel\n      license_family: Proprietary\n      license_file: mkl/info/LICENSE.txt\n    test:\n      commands:\n        - ls -A $PREFIX/include/*  # [unix]\n\n  - name: daal-static\n    script: repack.sh   # [unix]\n    script: repack.bat  # [win]\n    build:\n      number: {{ buildnum|int + dstbuildnum|int }}\n    requirements:\n      run:\n        - {{ pin_subpackage('daal-include', exact=True) }}\n        - tbb {{ version.split('.')[0] }}.*\n    about:\n      home: https://software.intel.com/en-us/daal\n      summary: Static libraries for DAAL\n      license: LicenseRef-ProprietaryIntel\n      license_family: Proprietary\n      license_file: mkl/info/LICENSE.txt\n    test:\n      commands:\n        - ls -A $PREFIX/lib/*  # [unix]\n\n  - name: daal-devel\n    script: repack.sh   # [unix]\n    script: repack.bat  # [win]\n    build:\n      number: {{ buildnum|int + dstbuildnum|int }}\n      run_exports:\n        - {{ pin_subpackage('daal') }}\n    requirements:\n      run:\n        - {{ pin_subpackage('daal-include', exact=True) }}\n        - {{ pin_subpackage('daal', exact=True) }}\n    about:\n      home: https://software.intel.com/en-us/daal\n      summary: Devel package for building things linked against DAAL shared libraries\n      license: LicenseRef-ProprietaryIntel\n      license_family: Proprietary\n      license_file: mkl/info/LICENSE.txt\n    test:\n      commands:\n        - ls -A $PREFIX/lib/*  # [unix]\n        - ls -A $PREFIX/include/*  # [unix]\n  {% endif %}\n\n# please the linter\nabout:\n  home: https://github.com/conda-forge/intel-repack-feedstock\n  license: LicenseRef-ProprietaryIntel\n  summary: 'repackaged intel libraries'\n\nextra:\n  recipe-maintainers:\n    - isuruf\n    - beckermr\n",
 "req":{
  "__set__":true,
  "elements":[
   "daal",
   "daal-include",
   "llvm-openmp",
   "mkl",
   "mkl-include",
   "tbb"
  ]
 },
 "requirements":{
  "build":{
   "__set__":true,
   "elements":[]
  },
  "host":{
   "__set__":true,
   "elements":[
    "llvm-openmp",
    "tbb"
   ]
  },
  "run":{
   "__set__":true,
   "elements":[
    "daal",
    "daal-include",
    "llvm-openmp",
    "mkl",
    "mkl-include",
    "tbb"
   ]
  },
  "test":{
   "__set__":true,
   "elements":[]
  }
 },
 "strong_exports":false,
 "total_requirements":{
  "build":{
   "__set__":true,
   "elements":[]
  },
  "host":{
   "__set__":true,
   "elements":[
    "llvm-openmp",
    "tbb 2020.*"
   ]
  },
  "run":{
   "__set__":true,
   "elements":[
    "daal",
    "daal-include",
    "llvm-openmp",
    "mkl",
    "mkl-include",
    "tbb 2020.*"
   ]
  },
  "test":{
   "__set__":true,
   "elements":[]
  }
 },
 "url":"https://anaconda.org/intel/mkl/2019.5/download//mkl-2019.5-intel_281.tar.bz2",
 "version":"2020.1"
}