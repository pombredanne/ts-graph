{
 "PRed":[
  {
   "PR":{
    "__lazy_json__":"pr_json/265762844.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"Version",
    "migrator_version":0,
    "version":"0.7.4"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/270867646.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"Version",
    "migrator_version":0,
    "version":"0.7.4.post"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/271714223.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"Version",
    "migrator_version":0,
    "version":"0.7.4.post1"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/311850694.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"Version",
    "migrator_version":0,
    "version":"0.7.6"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/329639679.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"Version",
    "migrator_version":0,
    "version":"0.7.7"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/339858662.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"Version",
    "migrator_version":0,
    "version":"0.7.8"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/344118910.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"Version",
    "migrator_version":0,
    "version":"0.7.9"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/353199324.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"Version",
    "migrator_version":0,
    "version":"0.7.10"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/365849789.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"Version",
    "migrator_version":0,
    "version":"0.7.11"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/406943639.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"Version",
    "migrator_version":0,
    "version":"0.7.12"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/408472268.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"Version",
    "migrator_version":0,
    "version":"0.7.13"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  }
 ],
 "bad":false,
 "conda-forge.yml":{
  "provider":{
   "win":"azure"
  }
 },
 "feedstock_name":"libsolv",
 "hash_type":"sha256",
 "meta_yaml":{
  "about":{
   "description":"libsolv, a free package dependency solver using a satisfiability algorithm.",
   "dev_url":"https://github.com/openSUSE/libsolv",
   "home":"https://github.com/openSUSE/libsolv",
   "license":"BSD-3-Clause",
   "license_family":"BSD",
   "license_file":"LICENSE.BSD",
   "summary":"Library for solving packages and reading repositories"
  },
  "build":{
   "number":"2",
   "run_exports":[
    "libsolv",
    "libsolv",
    "libsolv"
   ],
   "skip":true
  },
  "extra":{
   "recipe-maintainers":[
    "SylvainCorlay",
    "JohanMabille",
    "wolfv",
    "davidbrochart",
    "SylvainCorlay",
    "JohanMabille",
    "wolfv",
    "davidbrochart",
    "SylvainCorlay",
    "JohanMabille",
    "wolfv",
    "davidbrochart"
   ]
  },
  "package":{
   "name":"libsolv",
   "version":"0.7.13"
  },
  "requirements":{
   "build":[
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cmake",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cmake",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cmake"
   ],
   "host":[
    "zlib",
    "zlib",
    "zlib"
   ]
  },
  "source":{
   "fn":"libsolv-0.7.13.tar.gz",
   "patches":null,
   "sha256":"869985ff4c5a3d8a1544900c26277defec362eea0b85498be5b1d09c3c0e0e62",
   "url":"https://github.com/openSUSE/libsolv/archive/0.7.13.tar.gz"
  },
  "test":{
   "commands":[
    "if exist %LIBRARY_INC%\\\\solv\\\\repo.h (exit 0) else (exit 1)",
    "if exist %LIBRARY_INC%\\\\lib\\\\solv.lib (exit 0) else (exit 1)",
    "if exist %LIBRARY_INC%\\\\lib\\\\solvext.lib (exit 0) else (exit 1)",
    "if exist %LIBRARY_INC%\\\\bin\\\\solv.dll (exit 0) else (exit 1)",
    "dumpsolv.exe -h",
    "test -f $PREFIX/lib/libsolv${SHLIB_EXT}",
    "test -f $PREFIX/lib/libsolvext${SHLIB_EXT}",
    "test -f $PREFIX/include/solv/repo.h",
    "dumpsolv -h",
    "test -f $PREFIX/lib/libsolv${SHLIB_EXT}",
    "test -f $PREFIX/lib/libsolvext${SHLIB_EXT}",
    "test -f $PREFIX/lib/libsolv.so.1",
    "test -f $PREFIX/include/solv/repo.h",
    "dumpsolv -h"
   ]
  }
 },
 "name":"libsolv",
 "new_version":"0.7.13",
 "new_version_attempts":{
  "0.7.12":1,
  "0.7.13":1
 },
 "new_version_errors":{},
 "pinning_version":"2020.04.24.08.48.19",
 "raw_meta_yaml":"{% set name = \"libsolv\" %}\n{% set version = \"0.7.13\" %}\n{% set sha256 = \"869985ff4c5a3d8a1544900c26277defec362eea0b85498be5b1d09c3c0e0e62\" %}\n\npackage:\n  name: {{ name|lower }}\n  version: {{ version }}\n\nsource:\n  fn: {{ name }}-{{ version }}.tar.gz\n  url: https://github.com/openSUSE/libsolv/archive/{{ version }}.tar.gz\n  sha256: {{ sha256 }}\n  patches:\n    - export_solv_version_win.patch  # [win]\n\nbuild:\n  number: 2\n  skip: true  # [win and vc<14]\n  run_exports:\n    - {{ pin_subpackage(name, max_pin='x.x') }}\n\nrequirements:\n  build:\n    - {{ compiler('c') }}\n    - {{ compiler('cxx') }}\n    - cmake\n  host:\n    - zlib\n\ntest:\n  commands:\n    - test -f $PREFIX/lib/libsolv${SHLIB_EXT}  # [unix]\n    - test -f $PREFIX/lib/libsolvext${SHLIB_EXT}  # [unix]\n    - test -f $PREFIX/lib/libsolv.so.1  # [linux]\n    - test -f $PREFIX/include/solv/repo.h  # [unix]\n    - if exist %LIBRARY_INC%\\\\solv\\\\repo.h (exit 0) else (exit 1)  # [win]\n    - if exist %LIBRARY_INC%\\\\lib\\\\solv.lib (exit 0) else (exit 1)  # [win]\n    - if exist %LIBRARY_INC%\\\\lib\\\\solvext.lib (exit 0) else (exit 1)  # [win]\n    - if exist %LIBRARY_INC%\\\\bin\\\\solv.dll (exit 0) else (exit 1)  # [win]\n    - dumpsolv.exe -h  # [win]\n    - dumpsolv -h  # [unix]\n\nabout:\n  home: https://github.com/openSUSE/libsolv\n  license: BSD-3-Clause\n  license_family: BSD\n  license_file: LICENSE.BSD\n  summary: Library for solving packages and reading repositories\n  description: libsolv, a free package dependency solver using a satisfiability algorithm.\n  dev_url: https://github.com/openSUSE/libsolv\n\nextra:\n  recipe-maintainers:\n    - SylvainCorlay\n    - JohanMabille\n    - wolfv\n    - davidbrochart\n",
 "req":{
  "__set__":true,
  "elements":[
   "c_compiler_stub",
   "cmake",
   "cxx_compiler_stub",
   "zlib"
  ]
 },
 "requirements":{
  "build":{
   "__set__":true,
   "elements":[
    "c_compiler_stub",
    "cmake",
    "cxx_compiler_stub"
   ]
  },
  "host":{
   "__set__":true,
   "elements":[
    "zlib"
   ]
  },
  "run":{
   "__set__":true,
   "elements":[]
  },
  "test":{
   "__set__":true,
   "elements":[]
  }
 },
 "smithy_version":"No azure token. Create a token and\nput it in ~/.conda-smithy/azure.token\n3.6.17",
 "strong_exports":false,
 "total_requirements":{
  "build":{
   "__set__":true,
   "elements":[
    "c_compiler_stub",
    "cmake",
    "cxx_compiler_stub"
   ]
  },
  "host":{
   "__set__":true,
   "elements":[
    "zlib"
   ]
  },
  "run":{
   "__set__":true,
   "elements":[]
  },
  "test":{
   "__set__":true,
   "elements":[]
  }
 },
 "url":"https://github.com/openSUSE/libsolv/archive/0.7.5.tar.gz",
 "version":"0.7.13"
}