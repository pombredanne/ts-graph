{
 "PRed":[
  {
   "PR":{
    "__lazy_json__":"pr_json/206843577.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"Compiler",
    "migrator_version":0
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/214580509.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"Version",
    "migrator_version":0,
    "version":"2.2.4"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/217500547.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"CompilerRebuild",
    "migrator_version":1,
    "name":"Python 3.7, GCC 7, R 3.5.1, openBLAS 0.3.2"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/319465792.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"Version",
    "migrator_version":0,
    "version":"2.4.0"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/319630821.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"Version",
    "migrator_version":0,
    "version":"2.4.1"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/328021018.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"Version",
    "migrator_version":0,
    "version":"2.4.3"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/334032217.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"ArchRebuild",
    "migrator_version":1,
    "name":"aarch64 and ppc64le addition"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/335641205.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"MigrationYaml",
    "migrator_object_version":1,
    "migrator_version":0,
    "name":"python38"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/387286753.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"MigrationYaml",
    "migrator_object_version":1,
    "migrator_version":0,
    "name":"pypy"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/396270367.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"Version",
    "migrator_version":0,
    "version":"2.5.0"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  }
 ],
 "bad":false,
 "conda-forge.yml":{
  "provider":{
   "linux_aarch64":"default",
   "linux_ppc64le":"default",
   "win":"azure"
  }
 },
 "feedstock_name":"pybind11",
 "hash_type":"sha256",
 "meta_yaml":{
  "about":{
   "home":"https://github.com/pybind/pybind11/",
   "license":"BSD-3-Clause",
   "license_file":"LICENSE",
   "summary":"Seamless operability between C++11 and Python"
  },
  "build":{
   "number":"0"
  },
  "extra":{
   "recipe-maintainers":[
    "ax3l",
    "SylvainCorlay",
    "wjakob",
    "ax3l",
    "SylvainCorlay",
    "wjakob",
    "ax3l",
    "SylvainCorlay",
    "wjakob"
   ]
  },
  "package":{
   "name":"pybind11",
   "version":"2.5.0"
  },
  "requirements":{
   "build":[
    "cmake",
    "cxx_compiler_stub",
    "cmake",
    "make",
    "cxx_compiler_stub",
    "cmake",
    "make",
    "cxx_compiler_stub"
   ],
   "host":[
    "python",
    "setuptools",
    "python",
    "setuptools",
    "python",
    "setuptools"
   ],
   "run":[
    "python",
    "python",
    "python"
   ]
  },
  "source":{
   "fn":"pybind11-2.5.0.tar.gz",
   "patches":[
    "gh2146.patch",
    "gh2146.patch",
    "gh2146.patch"
   ],
   "sha256":"97504db65640570f32d3fdf701c25a340c8643037c3b69aec469c10c93dc8504",
   "url":"https://github.com/pybind/pybind11/archive/v2.5.0.tar.gz"
  },
  "test":{
   "commands":[
    "if exist %LIBRARY_PREFIX%\\share\\cmake\\pybind11\\pybind11Config.cmake (exit 0) else (exit 1)",
    "if exist %LIBRARY_INC%\\pybind11\\pybind11.h (exit 0) else (exit 1)",
    "if exist $(python -c \"import pybind11 as py; print(py.get_include())\")\\pybind11\\pybind11.h (exit 0) else (exit 1)",
    "test -f ${PREFIX}/share/cmake/pybind11/pybind11Config.cmake",
    "test -f ${PREFIX}/include/pybind11/pybind11.h",
    "test -f $(python -c \"import pybind11 as py; print(py.get_include())\")/pybind11/pybind11.h",
    "test -f ${PREFIX}/share/cmake/pybind11/pybind11Config.cmake",
    "test -f ${PREFIX}/include/pybind11/pybind11.h",
    "test -f $(python -c \"import pybind11 as py; print(py.get_include())\")/pybind11/pybind11.h"
   ],
   "imports":[
    "pybind11",
    "pybind11",
    "pybind11"
   ]
  }
 },
 "name":"pybind11",
 "new_version":"2.5.0",
 "pinning_version":"2020.03.30",
 "raw_meta_yaml":"{% set version = \"2.5.0\" %}\n{% set sha256 = \"97504db65640570f32d3fdf701c25a340c8643037c3b69aec469c10c93dc8504\" %}\n\npackage:\n  name: pybind11\n  version: {{ version }}\n\nsource:\n  fn: pybind11-{{ version }}.tar.gz\n  url: https://github.com/pybind/pybind11/archive/v{{ version }}.tar.gz\n  sha256: {{ sha256 }}\n  patches:\n    - gh2146.patch\n\nbuild:\n  number: 0\n\nrequirements:\n  build:\n    - cmake\n    - make      # [unix]\n    - {{ compiler('cxx') }}\n  host:\n    - python\n    - setuptools\n  run:\n    - python\n\ntest:\n  imports:\n    - pybind11\n  commands:\n    - test -f ${PREFIX}/share/cmake/pybind11/pybind11Config.cmake                                     # [unix]\n    - if exist %LIBRARY_PREFIX%\\share\\cmake\\pybind11\\pybind11Config.cmake (exit 0) else (exit 1)      # [win]\n    - test -f ${PREFIX}/include/pybind11/pybind11.h      # [unix]\n    - if exist %LIBRARY_INC%\\pybind11\\pybind11.h (exit 0) else (exit 1)      # [win]\n    - test -f $(python -c \"import pybind11 as py; print(py.get_include())\")/pybind11/pybind11.h      # [unix]\n    - if exist $(python -c \"import pybind11 as py; print(py.get_include())\")\\pybind11\\pybind11.h (exit 0) else (exit 1)      # [win]\n\nabout:\n  home: https://github.com/pybind/pybind11/\n  license: BSD-3-Clause\n  summary: Seamless operability between C++11 and Python\n  license_file: LICENSE\n\nextra:\n  recipe-maintainers:\n    - ax3l\n    - SylvainCorlay\n    - wjakob\n",
 "req":{
  "__set__":true,
  "elements":[
   "cmake",
   "cxx_compiler_stub",
   "make",
   "python",
   "setuptools"
  ]
 },
 "requirements":{
  "build":{
   "__set__":true,
   "elements":[
    "cmake",
    "cxx_compiler_stub",
    "make"
   ]
  },
  "host":{
   "__set__":true,
   "elements":[
    "python",
    "setuptools"
   ]
  },
  "run":{
   "__set__":true,
   "elements":[
    "python"
   ]
  },
  "test":{
   "__set__":true,
   "elements":[]
  }
 },
 "smithy_version":"No azure token. Create a token and\nput it in ~/.conda-smithy/azure.token\n3.6.15",
 "strong_exports":false,
 "total_requirements":{
  "build":{
   "__set__":true,
   "elements":[
    "cmake",
    "cxx_compiler_stub",
    "make"
   ]
  },
  "host":{
   "__set__":true,
   "elements":[
    "python",
    "setuptools"
   ]
  },
  "run":{
   "__set__":true,
   "elements":[
    "python"
   ]
  },
  "test":{
   "__set__":true,
   "elements":[]
  }
 },
 "url":"https://github.com/pybind/pybind11/archive/v2.3.0.tar.gz",
 "version":"2.5.0"
}