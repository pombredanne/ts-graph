{
 "PRed":[
  {
   "PR":{
    "__lazy_json__":"pr_json/336094641.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"MigrationYaml",
    "migrator_object_version":1,
    "migrator_version":0,
    "name":"python38"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  }
 ],
 "bad":false,
 "conda-forge.yml":{},
 "feedstock_name":"pyca",
 "hash_type":"sha256",
 "meta_yaml":{
  "about":{
   "description":"PyCA (Python Channel Access) is a module that offers lightweight\nbindings for Python applications to access EPICS PVs. It acts as\na channel access client, much like pyepics. The intention of the\nmodule is to provide better performance for embedded applications,\nrather than to provide an interactive interface. The most significant\ngains will be found when monitoring large waveforms that need to be\nprocessed before exposing them the Python layer.\n",
   "dev_url":"https://github.com/slaclab/pyca",
   "home":"https://github.com/slaclab/pyca",
   "license":"SLAC Open",
   "license_family":"OTHER",
   "license_file":"LICENSE.md",
   "summary":"PyCA - lightweight bindings for Python applications to access EPICS PVs."
  },
  "build":{
   "missing_dso_whitelist":[
    "*/libca.*",
    "*/libCom.*",
    "*/libca.*",
    "*/libCom.*",
    "*/libca.*",
    "*/libCom.*"
   ],
   "number":"0",
   "script":" -m pip install . -vv",
   "skip":true
  },
  "extra":{
   "recipe-maintainers":[
    "hhslepicka",
    "klauer",
    "hhslepicka",
    "klauer",
    "hhslepicka",
    "klauer"
   ]
  },
  "package":{
   "name":"pyca",
   "version":"3.1.1"
  },
  "requirements":{
   "build":[
    "c_compiler_stub",
    "cxx_compiler_stub",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "c_compiler_stub",
    "cxx_compiler_stub"
   ],
   "host":[
    "python",
    "epicscorelibs",
    "numpy",
    "pip",
    "setuptools",
    "setuptools_dso",
    "python",
    "epicscorelibs",
    "numpy",
    "pip",
    "setuptools",
    "setuptools_dso",
    "python",
    "epicscorelibs",
    "numpy",
    "pip",
    "setuptools",
    "setuptools_dso"
   ],
   "run":[
    "python",
    "epicscorelibs",
    "numpy",
    "python",
    "epicscorelibs",
    "numpy",
    "python",
    "epicscorelibs",
    "numpy"
   ]
  },
  "source":{
   "patches":[
    "0001-setup.patch",
    "0001-setup.patch",
    "0001-setup.patch"
   ],
   "sha256":"660fffbee018439af61e48b0e82da70a1143012219124e22f0d89a20c88b73e4",
   "url":"https://github.com/slaclab/pyca/archive/3.1.1.tar.gz"
  },
  "test":{
   "imports":[
    "pyca",
    "psp",
    "pyca",
    "psp",
    "pyca",
    "psp"
   ]
  }
 },
 "name":"pyca",
 "new_version":"3.1.1",
 "pinning_version":"2019.11.01",
 "raw_meta_yaml":"{% set name = \"pyca\" %}\n{% set version = \"3.1.1\" %}\n\npackage:\n  name: {{ name|lower }}\n  version: {{ version }}\n\nsource:\n  url: https://github.com/slaclab/{{ name }}/archive/{{ version }}.tar.gz\n  sha256: 660fffbee018439af61e48b0e82da70a1143012219124e22f0d89a20c88b73e4 \n  patches:\n    - 0001-setup.patch\n\nbuild:\n  number: 0\n  script: \"{{ PYTHON }} -m pip install . -vv\"\n  skip : true  # [win]\n  missing_dso_whitelist:\n      - '*/libca.*'\n      - '*/libCom.*'\n\nrequirements:\n  build:\n    - {{ compiler('c') }}\n    - {{ compiler('cxx') }}\n  host:\n    - python\n    - epicscorelibs\n    - numpy\n    - pip\n    - setuptools\n    - setuptools_dso\n  run:\n    - python\n    - epicscorelibs\n    - {{ pin_compatible('numpy') }}\n\ntest:\n  imports:\n    - pyca\n    - psp\n\nabout:\n  home: https://github.com/slaclab/pyca\n  license: SLAC Open\n  license_family: OTHER\n  license_file: LICENSE.md\n  summary: 'PyCA - lightweight bindings for Python applications to access EPICS PVs.'\n\n  description: |\n    PyCA (Python Channel Access) is a module that offers lightweight\n    bindings for Python applications to access EPICS PVs. It acts as\n    a channel access client, much like pyepics. The intention of the \n    module is to provide better performance for embedded applications,\n    rather than to provide an interactive interface. The most significant\n    gains will be found when monitoring large waveforms that need to be\n    processed before exposing them the Python layer.      \n  dev_url: https://github.com/slaclab/pyca\n\nextra:\n  recipe-maintainers:\n    - hhslepicka\n    - klauer\n",
 "req":{
  "__set__":true,
  "elements":[
   "c_compiler_stub",
   "cxx_compiler_stub",
   "epicscorelibs",
   "numpy",
   "pip",
   "python",
   "setuptools",
   "setuptools_dso"
  ]
 },
 "requirements":{
  "build":{
   "__set__":true,
   "elements":[
    "c_compiler_stub",
    "cxx_compiler_stub"
   ]
  },
  "host":{
   "__set__":true,
   "elements":[
    "epicscorelibs",
    "numpy",
    "pip",
    "python",
    "setuptools",
    "setuptools_dso"
   ]
  },
  "run":{
   "__set__":true,
   "elements":[
    "epicscorelibs",
    "numpy",
    "python"
   ]
  },
  "test":{
   "__set__":true,
   "elements":[]
  }
 },
 "smithy_version":"3.6.1",
 "strong_exports":false,
 "total_requirements":{
  "build":{
   "__set__":true,
   "elements":[
    "c_compiler_stub",
    "cxx_compiler_stub"
   ]
  },
  "host":{
   "__set__":true,
   "elements":[
    "epicscorelibs",
    "numpy",
    "pip",
    "python",
    "setuptools",
    "setuptools_dso"
   ]
  },
  "run":{
   "__set__":true,
   "elements":[
    "epicscorelibs",
    "numpy",
    "python"
   ]
  },
  "test":{
   "__set__":true,
   "elements":[]
  }
 },
 "url":"https://github.com/slaclab/pyca/archive/3.1.1.tar.gz",
 "version":"3.1.1"
}