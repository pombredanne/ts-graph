{
 "PRed":[
  {
   "PR":{
    "__lazy_json__":"pr_json/238501346.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"CompilerRebuild",
    "migrator_version":1,
    "name":"Python 3.7, GCC 7, R 3.5.1, openBLAS 0.3.2"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/283348411.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"Rebuild",
    "migrator_version":0,
    "name":"boost-1.70.0"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/285639804.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"Rebuild",
    "migrator_version":0,
    "name":"hdf5-1.10.5"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/334145943.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"Version",
    "migrator_version":0,
    "version":"2.1"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/378507449.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"MigrationYaml",
    "migrator_object_version":2,
    "migrator_version":0,
    "name":"boost172"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/393759584.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"Version",
    "migrator_version":0,
    "version":"2.2"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/404243005.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"MigrationYaml",
    "migrator_object_version":1,
    "migrator_version":0,
    "name":"hdf51106"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/410048216.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"Version",
    "migrator_version":0,
    "version":"2.2.1"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  }
 ],
 "bad":false,
 "conda-forge.yml":{},
 "feedstock_name":"highfive",
 "hash_type":"sha256",
 "meta_yaml":{
  "about":{
   "description":"HighFive is a modern C++/C++11 friendly interface for libhdf5.",
   "dev_url":"https://github.com/BlueBrain/HighFive",
   "home":"https://github.com/BlueBrain/HighFive",
   "license":"BSL-1.0",
   "license_file":"LICENSE",
   "summary":"Header-only C++ HDF5 interface"
  },
  "build":{
   "number":"2",
   "skip":true
  },
  "extra":{
   "recipe-maintainers":[
    "wolfv",
    "SylvainCorlay",
    "JohanMabille",
    "ferdonline",
    "tdegeus",
    "wolfv",
    "SylvainCorlay",
    "JohanMabille",
    "ferdonline",
    "tdegeus",
    "wolfv",
    "SylvainCorlay",
    "JohanMabille",
    "ferdonline",
    "tdegeus"
   ]
  },
  "package":{
   "name":"highfive",
   "version":"2.2.1"
  },
  "requirements":{
   "build":[
    "cxx_compiler_stub",
    "cmake",
    "hdf5",
    "cxx_compiler_stub",
    "cmake",
    "make",
    "hdf5",
    "cxx_compiler_stub",
    "cmake",
    "make",
    "hdf5"
   ],
   "run":[
    "hdf5",
    "hdf5",
    "hdf5"
   ]
  },
  "source":{
   "sha256":"964c722ba916259209083564405ef9ce073b15e9412955fef9281576ea9c5b85",
   "url":"https://github.com/BlueBrain/HighFive/archive/v2.2.1.tar.gz"
  },
  "test":{
   "commands":[
    "if exist %LIBRARY_PREFIX%\\include\\highfive\\H5Attribute.hpp (exit 0) else (exit 1)",
    "if exist %LIBRARY_PREFIX%\\include\\highfive\\bits\\H5File_misc.hpp (exit 0) else (exit 1)",
    "if exist %LIBRARY_PREFIX%\\include\\highfive\\H5Exception.hpp (exit 0) else (exit 1)",
    "if exist %LIBRARY_PREFIX%\\share\\HighFive\\CMake\\HighFiveConfig.cmake (exit 0) else (exit 1)",
    "if exist %LIBRARY_PREFIX%\\share\\HighFive\\CMake\\HighFiveTargets.cmake (exit 0) else (exit 1)",
    "test -d $PREFIX/include/highfive",
    "test -f $PREFIX/include/highfive/H5Attribute.hpp",
    "test -d $PREFIX/include/highfive/bits",
    "test -f $PREFIX/include/highfive/bits/H5File_misc.hpp",
    "test -f $PREFIX/include/highfive/H5Exception.hpp",
    "test -f $PREFIX/share/HighFive/CMake/HighFiveConfig.cmake",
    "test -f $PREFIX/share/HighFive/CMake/HighFiveTargets.cmake",
    "test -d $PREFIX/include/highfive",
    "test -f $PREFIX/include/highfive/H5Attribute.hpp",
    "test -d $PREFIX/include/highfive/bits",
    "test -f $PREFIX/include/highfive/bits/H5File_misc.hpp",
    "test -f $PREFIX/include/highfive/H5Exception.hpp",
    "test -f $PREFIX/share/HighFive/CMake/HighFiveConfig.cmake",
    "test -f $PREFIX/share/HighFive/CMake/HighFiveTargets.cmake"
   ]
  }
 },
 "name":"highfive",
 "new_version":"2.2.1",
 "new_version_attempts":{
  "2.2.1":1
 },
 "new_version_errors":{},
 "pinning_version":"2020.04.27.17.45.41",
 "raw_meta_yaml":"{% set name = \"HighFive\" %}\n{% set version = \"2.2.1\" %}\n{% set sha256 = \"964c722ba916259209083564405ef9ce073b15e9412955fef9281576ea9c5b85\" %}\n\npackage:\n  name: {{ name|lower }}\n  version: {{ version }}\n\nsource:\n  url: https://github.com/BlueBrain/HighFive/archive/v{{ version }}.tar.gz\n  sha256: {{ sha256 }}\n\nbuild:\n  number: 2\n  skip: true  # [win and vc<14]\n\nrequirements:\n  build:\n    - {{ compiler('cxx') }}\n    - cmake\n    - make  # [unix]\n    - hdf5\n  run:\n    - hdf5\n\ntest:\n  commands:\n    # Testing for installation of headers - non-exhaustive list.\n    - test -d $PREFIX/include/highfive  # [unix]\n    - test -f $PREFIX/include/highfive/H5Attribute.hpp  # [unix]\n    - test -d $PREFIX/include/highfive/bits  # [unix]\n    - test -f $PREFIX/include/highfive/bits/H5File_misc.hpp  # [unix]\n    - test -f $PREFIX/include/highfive/H5Exception.hpp  # [unix]\n    - test -f $PREFIX/share/HighFive/CMake/HighFiveConfig.cmake  # [unix]\n    - test -f $PREFIX/share/HighFive/CMake/HighFiveTargets.cmake  # [unix]\n    - if exist %LIBRARY_PREFIX%\\include\\highfive\\H5Attribute.hpp (exit 0) else (exit 1)  # [win]\n    - if exist %LIBRARY_PREFIX%\\include\\highfive\\bits\\H5File_misc.hpp (exit 0) else (exit 1)  # [win]\n    - if exist %LIBRARY_PREFIX%\\include\\highfive\\H5Exception.hpp (exit 0) else (exit 1)  # [win]\n    - if exist %LIBRARY_PREFIX%\\share\\HighFive\\CMake\\HighFiveConfig.cmake (exit 0) else (exit 1)  # [win]\n    - if exist %LIBRARY_PREFIX%\\share\\HighFive\\CMake\\HighFiveTargets.cmake (exit 0) else (exit 1)  # [win]\n\nabout:\n  home: https://github.com/BlueBrain/HighFive\n  license: BSL-1.0\n  license_file: LICENSE\n  summary: Header-only C++ HDF5 interface\n  description: HighFive is a modern C++/C++11 friendly interface for libhdf5.\n  dev_url: https://github.com/BlueBrain/HighFive\n\nextra:\n  recipe-maintainers:\n    - wolfv\n    - SylvainCorlay\n    - JohanMabille\n    - ferdonline\n    - tdegeus\n",
 "req":{
  "__set__":true,
  "elements":[
   "cmake",
   "cxx_compiler_stub",
   "hdf5",
   "make"
  ]
 },
 "requirements":{
  "build":{
   "__set__":true,
   "elements":[
    "cmake",
    "cxx_compiler_stub",
    "hdf5",
    "make"
   ]
  },
  "host":{
   "__set__":true,
   "elements":[]
  },
  "run":{
   "__set__":true,
   "elements":[
    "hdf5"
   ]
  },
  "test":{
   "__set__":true,
   "elements":[]
  }
 },
 "smithy_version":"No azure token. Create a token and\nput it in ~/.conda-smithy/azure.token\n3.7.0",
 "strong_exports":false,
 "total_requirements":{
  "build":{
   "__set__":true,
   "elements":[
    "cmake",
    "cxx_compiler_stub",
    "hdf5",
    "make"
   ]
  },
  "host":{
   "__set__":true,
   "elements":[]
  },
  "run":{
   "__set__":true,
   "elements":[
    "hdf5"
   ]
  },
  "test":{
   "__set__":true,
   "elements":[]
  }
 },
 "url":"https://github.com/BlueBrain/HighFive/archive/v2.0.tar.gz",
 "version":"2.2.1"
}