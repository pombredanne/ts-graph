{
 "PRed":[
  {
   "PR":{
    "__lazy_json__":"pr_json/400148818.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"Version",
    "migrator_version":0,
    "version":"1.14.1"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  }
 ],
 "bad":false,
 "conda-forge.yml":{},
 "feedstock_name":"asio",
 "hash_type":"sha256",
 "meta_yaml":{
  "about":{
   "home":"https://github.com/chriskohlhoff/asio",
   "license":"BSL-1.0",
   "license_file":"asio/COPYING",
   "summary":"Asio is a cross-platform C++ library for network and low-level I/O programming that\nprovides developers with a consistent asynchronous model using a modern C++ approach.\n"
  },
  "build":{
   "number":"0",
   "skip":true
  },
  "extra":{
   "recipe-maintainers":[
    "seanyen",
    "seanyen",
    "seanyen"
   ]
  },
  "package":{
   "name":"asio",
   "version":"1.14.1"
  },
  "requirements":{
   "build":[
    "c_compiler_stub",
    "cxx_compiler_stub",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "autoconf",
    "automake",
    "make",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "autoconf",
    "automake",
    "make"
   ]
  },
  "source":{
   "sha256":"5b12ce2cdb658025e67785f954f74b052709cfc9b5941b8fb889c049b0955e1d",
   "url":"https://github.com/chriskohlhoff/asio/archive/asio-1-14-1.tar.gz"
  },
  "test":{
   "commands":[
    "if exist %PREFIX%\\\\Library\\\\include\\\\asio.hpp (exit 0) else (exit 1)",
    "if exist %PREFIX%\\\\Library\\\\include\\\\asio\\\\error.hpp (exit 0) else (exit 1)",
    "test -f $PREFIX/include/asio.hpp",
    "test -f $PREFIX/include/asio/error.hpp",
    "test -f $PREFIX/include/asio.hpp",
    "test -f $PREFIX/include/asio/error.hpp"
   ]
  }
 },
 "name":"asio",
 "new_version":"1.14.1",
 "new_version_attempts":{
  "1.14.1":1
 },
 "pinning_version":"2020.04.07",
 "raw_meta_yaml":"{% set name = \"asio\" %}\n{% set version = \"1.14.1\" %}\n\npackage:\n  name: {{ name|lower }}\n  version: {{ version }}\n\nsource:\n  url: https://github.com/chriskohlhoff/{{ name }}/archive/{{ name }}-{{ version.replace('.','-') }}.tar.gz\n  sha256: 5b12ce2cdb658025e67785f954f74b052709cfc9b5941b8fb889c049b0955e1d\n\nbuild:\n  number: 0\n  skip: true  # [win and vc<14]\n\nrequirements:\n  build:\n    - {{ compiler('c') }}\n    - {{ compiler('cxx') }}\n    - autoconf  # [unix]\n    - automake  # [unix]\n    - make  # [unix]\n\ntest:\n  commands:\n    - test -f $PREFIX/include/asio.hpp  # [unix]\n    - test -f $PREFIX/include/asio/error.hpp  # [unix]\n    - if exist %PREFIX%\\\\Library\\\\include\\\\asio.hpp (exit 0) else (exit 1)  # [win]\n    - if exist %PREFIX%\\\\Library\\\\include\\\\asio\\\\error.hpp (exit 0) else (exit 1)  # [win]\n\nabout:\n  home: https://github.com/chriskohlhoff/asio\n  license: BSL-1.0\n  license_file: asio/COPYING\n  summary: |\n    Asio is a cross-platform C++ library for network and low-level I/O programming that\n    provides developers with a consistent asynchronous model using a modern C++ approach.\n\nextra:\n  recipe-maintainers:\n    - seanyen\n",
 "req":{
  "__set__":true,
  "elements":[
   "autoconf",
   "automake",
   "c_compiler_stub",
   "cxx_compiler_stub",
   "make"
  ]
 },
 "requirements":{
  "build":{
   "__set__":true,
   "elements":[
    "autoconf",
    "automake",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "make"
   ]
  },
  "host":{
   "__set__":true,
   "elements":[]
  },
  "run":{
   "__set__":true,
   "elements":[]
  },
  "test":{
   "__set__":true,
   "elements":[]
  }
 },
 "smithy_version":"No azure token. Create a token and\nput it in ~/.conda-smithy/azure.token\n3.6.15",
 "strong_exports":false,
 "total_requirements":{
  "build":{
   "__set__":true,
   "elements":[
    "autoconf",
    "automake",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "make"
   ]
  },
  "host":{
   "__set__":true,
   "elements":[]
  },
  "run":{
   "__set__":true,
   "elements":[]
  },
  "test":{
   "__set__":true,
   "elements":[]
  }
 },
 "url":"https://github.com/chriskohlhoff/asio/archive/asio-1-14-0.tar.gz",
 "version":"1.14.1"
}