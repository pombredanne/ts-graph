{
 "PRed":[
  {
   "PR":{
    "__lazy_json__":"pr_json/199890448.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"Compiler",
    "migrator_version":0
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/226732339.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"CompilerRebuild",
    "migrator_version":1,
    "name":"Python 3.7, GCC 7, R 3.5.1, openBLAS 0.3.2"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/348690179.json"
   },
   "data":{
    "bot_rerun":1589819712.151919,
    "migrator_name":"MigrationYaml",
    "migrator_object_version":1,
    "migrator_version":0,
    "name":"python38"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/374625508.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"MatplotlibBase",
    "migrator_version":0
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version"
   ]
  }
 ],
 "bad":false,
 "conda-forge.yml":{
  "compiler_stack":"comp7",
  "max_py_ver":"37",
  "max_r_ver":"35"
 },
 "feedstock_name":"pymvpa2",
 "hash_type":"sha256",
 "meta_yaml":{
  "about":{
   "description":"PyMVPA eases pattern classification analyses of large datasets, with an\naccent on neuroimaging. It provides high-level abstraction of typical\nprocessing steps (e.g., data preparation, classification, feature selection,\ngeneralization testing), a number of implementations of some popular\nalgorithms (e.g., kNN, Ridge Regressions, Sparse Multinomial Logistic\nRegression), and bindings to external machine learning libraries (libsvm,\nmdp, etc).\nWhile it is not limited to neuroimaging data (e.g. fMRI, or EEG) it\nis eminently suited for such datasets.\n",
   "dev_url":"https://github.com/PyMVPA/PyMVPA",
   "home":"http://pymvpa.org",
   "license":"MIT",
   "license_family":"MIT",
   "license_file":"COPYING",
   "summary":"Python multivariate pattern analysis framework"
  },
  "build":{
   "number":"1001",
   "script":"python setup.py install",
   "skip":true
  },
  "extra":{
   "recipe-maintainers":[
    "yarikoptic",
    "yarikoptic",
    "yarikoptic"
   ]
  },
  "package":{
   "name":"pymvpa2",
   "version":"2.6.5"
  },
  "requirements":{
   "build":[
    "c_compiler_stub",
    "cxx_compiler_stub",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "c_compiler_stub",
    "cxx_compiler_stub"
   ],
   "host":[
    "python",
    "pip",
    "swig",
    "numpy",
    "python",
    "pip",
    "swig",
    "numpy",
    "python",
    "pip",
    "swig",
    "numpy"
   ],
   "run":[
    "python",
    "h5py",
    "joblib",
    "matplotlib",
    "nibabel",
    "numpy",
    "scikit-learn",
    "scipy",
    "statsmodels",
    "python",
    "h5py",
    "joblib",
    "matplotlib",
    "nibabel",
    "numpy",
    "scikit-learn",
    "scipy",
    "statsmodels",
    "python",
    "h5py",
    "joblib",
    "matplotlib",
    "nibabel",
    "numpy",
    "scikit-learn",
    "scipy",
    "statsmodels"
   ]
  },
  "source":{
   "fn":"pymvpa2-2.6.5.tar.gz",
   "patches":[
    "0001-BF-Directive-moved-from-sphinx-to-docutils.patch",
    "0001-BF-explicit-import-of-h5py.highlevel.patch",
    "0002-BF-TEMP-workaround-do-not-add-Notes-for-sklearn-data.patch",
    "0003-BF-compatibility-with-matplotlib-2.2.0-axisbg-faceco.patch",
    "0004-BF-make-more-resilient-on-older-numpys-to-empty-mask.patch",
    "0001-BF-Directive-moved-from-sphinx-to-docutils.patch",
    "0001-BF-explicit-import-of-h5py.highlevel.patch",
    "0002-BF-TEMP-workaround-do-not-add-Notes-for-sklearn-data.patch",
    "0003-BF-compatibility-with-matplotlib-2.2.0-axisbg-faceco.patch",
    "0004-BF-make-more-resilient-on-older-numpys-to-empty-mask.patch",
    "0001-BF-Directive-moved-from-sphinx-to-docutils.patch",
    "0001-BF-explicit-import-of-h5py.highlevel.patch",
    "0002-BF-TEMP-workaround-do-not-add-Notes-for-sklearn-data.patch",
    "0003-BF-compatibility-with-matplotlib-2.2.0-axisbg-faceco.patch",
    "0004-BF-make-more-resilient-on-older-numpys-to-empty-mask.patch"
   ],
   "sha256":"f98b18e15d012aaa68c0ef6ccf420662df05657673843ab368e7f0adfdda0758",
   "url":"https://pypi.io/packages/source/p/pymvpa2/pymvpa2-2.6.5.tar.gz"
  },
  "test":{
   "imports":[
    "mvpa2",
    "mvpa2.tests",
    "mvpa2",
    "mvpa2.tests",
    "mvpa2",
    "mvpa2.tests"
   ],
   "requires":[
    "mock",
    "nose",
    "mock",
    "nose",
    "mock",
    "nose"
   ]
  }
 },
 "name":"pymvpa2",
 "new_version":"2.6.5",
 "pinning_version":"2020.02.12",
 "raw_meta_yaml":"{% set name = \"pymvpa2\" %}\n{% set version = \"2.6.5\" %}\n{% set sha256 = \"f98b18e15d012aaa68c0ef6ccf420662df05657673843ab368e7f0adfdda0758\" %}\n\npackage:\n  name: {{ name|lower }}\n  version: {{ version }}\n\nsource:\n  fn: {{ name }}-{{ version }}.tar.gz\n  url: https://pypi.io/packages/source/{{ name[0] }}/{{ name }}/{{ name }}-{{ version }}.tar.gz\n  sha256: {{ sha256 }}\n  patches:\n   - 0001-BF-Directive-moved-from-sphinx-to-docutils.patch\n   - 0001-BF-explicit-import-of-h5py.highlevel.patch\n   - 0002-BF-TEMP-workaround-do-not-add-Notes-for-sklearn-data.patch\n   - 0003-BF-compatibility-with-matplotlib-2.2.0-axisbg-faceco.patch\n   - 0004-BF-make-more-resilient-on-older-numpys-to-empty-mask.patch\n\nbuild:\n  number: 1001\n  skip: True  # [not py2k]\n  script: python setup.py install\n\nrequirements:\n  build:\n    - {{ compiler('c') }}\n    - {{ compiler('cxx') }}\n  host:\n    - python\n    - pip\n    - swig\n    - numpy\n  run:\n    - python\n    - h5py\n    - joblib\n    - matplotlib\n    - nibabel\n    - {{ pin_compatible('numpy') }}\n    - scikit-learn\n    - scipy\n    - statsmodels\n    # TODO: Later, yet to package\n    # - duecredit\n\ntest:\n  requires:\n    - mock\n    - nose\n  imports:\n    - mvpa2\n    - mvpa2.tests\n\nabout:\n  home: http://pymvpa.org\n  license: MIT\n  license_family: MIT\n  license_file: COPYING\n  summary: 'Python multivariate pattern analysis framework'\n\n  description: |\n    PyMVPA eases pattern classification analyses of large datasets, with an\n    accent on neuroimaging. It provides high-level abstraction of typical\n    processing steps (e.g., data preparation, classification, feature selection,\n    generalization testing), a number of implementations of some popular\n    algorithms (e.g., kNN, Ridge Regressions, Sparse Multinomial Logistic\n    Regression), and bindings to external machine learning libraries (libsvm,\n    mdp, etc).\n    While it is not limited to neuroimaging data (e.g. fMRI, or EEG) it\n    is eminently suited for such datasets.\n  dev_url: https://github.com/PyMVPA/PyMVPA\n\nextra:\n  recipe-maintainers:\n    - yarikoptic\n    # Later when it all works and SPAM is meaningful\n    # - mih\n",
 "req":{
  "__set__":true,
  "elements":[
   "c_compiler_stub",
   "cxx_compiler_stub",
   "h5py",
   "joblib",
   "matplotlib",
   "nibabel",
   "numpy",
   "pip",
   "python",
   "scikit-learn",
   "scipy",
   "statsmodels",
   "swig"
  ]
 },
 "requirements":{
  "build":{
   "__set__":true,
   "elements":[
    "c_compiler_stub",
    "cxx_compiler_stub"
   ]
  },
  "host":{
   "__set__":true,
   "elements":[
    "numpy",
    "pip",
    "python",
    "swig"
   ]
  },
  "run":{
   "__set__":true,
   "elements":[
    "h5py",
    "joblib",
    "matplotlib",
    "nibabel",
    "numpy",
    "python",
    "scikit-learn",
    "scipy",
    "statsmodels"
   ]
  },
  "test":{
   "__set__":true,
   "elements":[
    "mock",
    "nose"
   ]
  }
 },
 "smithy_version":"3.6.8",
 "strong_exports":false,
 "total_requirements":{
  "build":{
   "__set__":true,
   "elements":[
    "c_compiler_stub",
    "cxx_compiler_stub"
   ]
  },
  "host":{
   "__set__":true,
   "elements":[
    "numpy",
    "pip",
    "python",
    "swig"
   ]
  },
  "run":{
   "__set__":true,
   "elements":[
    "h5py",
    "joblib",
    "matplotlib",
    "nibabel",
    "numpy",
    "python",
    "scikit-learn",
    "scipy",
    "statsmodels"
   ]
  },
  "test":{
   "__set__":true,
   "elements":[
    "mock",
    "nose"
   ]
  }
 },
 "url":"https://pypi.io/packages/source/p/pymvpa2/pymvpa2-2.6.5.tar.gz",
 "version":"2.6.5"
}