{
 "PRed":[
  {
   "PR":{
    "__lazy_json__":"pr_json/323385063.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"Version",
    "migrator_version":0,
    "version":"2.9.0"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/325987789.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"Version",
    "migrator_version":0,
    "version":"2.9.1"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/380975613.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"Version",
    "migrator_version":0,
    "version":"2.10.0"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/383320816.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"Version",
    "migrator_version":0,
    "version":"2.10.1"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/384509097.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"Version",
    "migrator_version":0,
    "version":"3.0.0"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/412390187.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"Version",
    "migrator_version":0,
    "version":"3.1.0"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/412514550.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"MatplotlibBase",
    "migrator_version":0,
    "name":"matplotlib-to-matplotlib-base"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  }
 ],
 "bad":false,
 "conda-forge.yml":{
  "provider":{
   "linux":"azure",
   "osx":"azure",
   "win":"azure"
  }
 },
 "feedstock_name":"openmdao",
 "hash_type":"sha256",
 "meta_yaml":{
  "about":{
   "description":"OpenMDAO is an open-source high-performance computing platform\nfor systems analysis and multidisciplinary optimization, written in Python. It\nenables you to decompose your models, making them easier to build and maintain,\nwhile still solving them in a tightly coupled manner with efficient parallel\nnumerical methods.\n",
   "dev_url":"https://github.com/OpenMDAO/OpenMDAO",
   "doc_source_url":"https://github.com/OpenMDAO/OpenMDAO/tree/master/openmdao/docs",
   "doc_url":"https://openmdao.org/twodocs",
   "home":"https://openmdao.org",
   "license":"Apache-2.0",
   "license_family":"Apache",
   "license_file":"LICENSE.txt",
   "summary":"OpenMDAO framework infrastructure"
  },
  "build":{
   "entry_points":[
    "wingproj = openmdao.devtools.wingproj:run_wing",
    "webview = openmdao.utils.webview:webview_argv",
    "run_om_test = openmdao.devtools.run_test:run_test",
    "openmdao = openmdao.utils.om:openmdao_cmd",
    "wingproj = openmdao.devtools.wingproj:run_wing",
    "webview = openmdao.utils.webview:webview_argv",
    "run_om_test = openmdao.devtools.run_test:run_test",
    "openmdao = openmdao.utils.om:openmdao_cmd",
    "wingproj = openmdao.devtools.wingproj:run_wing",
    "webview = openmdao.utils.webview:webview_argv",
    "run_om_test = openmdao.devtools.run_test:run_test",
    "openmdao = openmdao.utils.om:openmdao_cmd"
   ],
   "noarch":"python",
   "number":"1",
   "script":"-m pip install . -vv"
  },
  "extra":{
   "recipe-maintainers":[
    "bollwyvl",
    "bollwyvl",
    "bollwyvl"
   ]
  },
  "package":{
   "name":"openmdao",
   "version":"3.1.0"
  },
  "requirements":{
   "host":[
    "python >=3.6",
    "pip",
    "python >=3.6",
    "pip",
    "python >=3.6",
    "pip"
   ],
   "run":[
    "networkx >=2.0",
    "numpy",
    "pydoe2",
    "pyparsing",
    "python >=3.6",
    "requests",
    "scipy",
    "networkx >=2.0",
    "numpy",
    "pydoe2",
    "pyparsing",
    "python >=3.6",
    "requests",
    "scipy",
    "networkx >=2.0",
    "numpy",
    "pydoe2",
    "pyparsing",
    "python >=3.6",
    "requests",
    "scipy"
   ]
  },
  "source":{
   "sha256":"efe3ebf2ecb6af7118faa1ac5c50fdd7ece866fbb9a39a052d0d1d504dfd361a",
   "url":"https://pypi.io/packages/source/o/openmdao/openmdao-3.1.0.tar.gz"
  },
  "test":{
   "commands":[
    "python -m pip check",
    "openmdao --help",
    "webview --help",
    "wingproj --help",
    "python -m pip check",
    "openmdao --help",
    "webview --help",
    "wingproj --help",
    "python -m pip check",
    "openmdao --help",
    "webview --help",
    "wingproj --help"
   ],
   "imports":[
    "openmdao",
    "openmdao",
    "openmdao"
   ],
   "requires":[
    "parameterized",
    "numpydoc >=0.9.1",
    "pycodestyle >=2.4.0",
    "pydocstyle ==2.0.0",
    "testflo >=1.3.6",
    "bokeh >=1.3.4",
    "colorama",
    "matplotlib-base",
    "pip",
    "parameterized",
    "numpydoc >=0.9.1",
    "pycodestyle >=2.4.0",
    "pydocstyle ==2.0.0",
    "testflo >=1.3.6",
    "bokeh >=1.3.4",
    "colorama",
    "matplotlib-base",
    "pip",
    "parameterized",
    "numpydoc >=0.9.1",
    "pycodestyle >=2.4.0",
    "pydocstyle ==2.0.0",
    "testflo >=1.3.6",
    "bokeh >=1.3.4",
    "colorama",
    "matplotlib-base",
    "pip"
   ]
  }
 },
 "name":"openmdao",
 "new_version":"3.1.0",
 "new_version_attempts":{
  "3.1.0":3
 },
 "new_version_errors":{},
 "pinning_version":"2020.05.02.14.58.15",
 "raw_meta_yaml":"{% set name = \"openmdao\" %}\n{% set version = \"3.1.0\" %}\n\npackage:\n  name: {{ name }}\n  version: {{ version }}\n\nsource:\n  url: https://pypi.io/packages/source/{{ name[0] }}/{{ name }}/{{ name }}-{{ version }}.tar.gz\n  sha256: efe3ebf2ecb6af7118faa1ac5c50fdd7ece866fbb9a39a052d0d1d504dfd361a\n\nbuild:\n  noarch: python\n  number: 1\n  script: {{ PYTHON }} -m pip install . -vv\n  entry_points:\n    - wingproj = openmdao.devtools.wingproj:run_wing\n    - webview = openmdao.utils.webview:webview_argv\n    - run_om_test = openmdao.devtools.run_test:run_test\n    - openmdao = openmdao.utils.om:openmdao_cmd\n\nrequirements:\n  host:\n    - python >=3.6\n    - pip\n  run:\n    - networkx >=2.0\n    - numpy\n    - pydoe2\n    - pyparsing\n    - python >=3.6\n    - requests\n    - scipy\n\ntest:\n  requires:\n    - parameterized\n    - numpydoc >=0.9.1\n    - pycodestyle >=2.4.0\n    - pydocstyle ==2.0.0\n    - testflo >=1.3.6\n    # not fully testing viz YET, but does fulfill undocumented tornado dep\n    - bokeh >=1.3.4\n    - colorama\n    - matplotlib-base\n    # for pip check\n    - pip\n  imports:\n    - openmdao\n  commands:\n    - python -m pip check\n    - openmdao --help\n    - webview --help\n    - wingproj --help\n\nabout:\n  home: https://openmdao.org\n  license: Apache-2.0\n  license_family: Apache\n  license_file: LICENSE.txt\n  summary: OpenMDAO framework infrastructure\n  description: |\n    OpenMDAO is an open-source high-performance computing platform\n    for systems analysis and multidisciplinary optimization, written in Python. It\n    enables you to decompose your models, making them easier to build and maintain,\n    while still solving them in a tightly coupled manner with efficient parallel\n    numerical methods.\n  doc_url: https://openmdao.org/twodocs\n  dev_url: https://github.com/OpenMDAO/OpenMDAO\n  doc_source_url: https://github.com/OpenMDAO/OpenMDAO/tree/master/openmdao/docs\n\nextra:\n  recipe-maintainers:\n    - bollwyvl\n",
 "req":{
  "__set__":true,
  "elements":[
   "networkx",
   "numpy",
   "pip",
   "pydoe2",
   "pyparsing",
   "python",
   "requests",
   "scipy"
  ]
 },
 "requirements":{
  "build":{
   "__set__":true,
   "elements":[]
  },
  "host":{
   "__set__":true,
   "elements":[
    "pip",
    "python"
   ]
  },
  "run":{
   "__set__":true,
   "elements":[
    "networkx",
    "numpy",
    "pydoe2",
    "pyparsing",
    "python",
    "requests",
    "scipy"
   ]
  },
  "test":{
   "__set__":true,
   "elements":[
    "bokeh",
    "colorama",
    "matplotlib-base",
    "numpydoc",
    "parameterized",
    "pip",
    "pycodestyle",
    "pydocstyle",
    "testflo"
   ]
  }
 },
 "smithy_version":"No azure token. Create a token and\nput it in ~/.conda-smithy/azure.token\n3.7.0\n",
 "strong_exports":false,
 "total_requirements":{
  "build":{
   "__set__":true,
   "elements":[]
  },
  "host":{
   "__set__":true,
   "elements":[
    "pip",
    "python >=3.6"
   ]
  },
  "run":{
   "__set__":true,
   "elements":[
    "networkx >=2.0",
    "numpy",
    "pydoe2",
    "pyparsing",
    "python >=3.6",
    "requests",
    "scipy"
   ]
  },
  "test":{
   "__set__":true,
   "elements":[
    "bokeh >=1.3.4",
    "colorama",
    "matplotlib-base",
    "numpydoc >=0.9.1",
    "parameterized",
    "pip",
    "pycodestyle >=2.4.0",
    "pydocstyle ==2.0.0",
    "testflo >=1.3.6"
   ]
  }
 },
 "url":"https://pypi.io/packages/source/o/openmdao/openmdao-2.8.0.tar.gz",
 "version":"3.1.0"
}