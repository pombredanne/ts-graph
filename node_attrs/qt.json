{
 "PRed":[
  {
   "PR":{
    "__lazy_json__":"pr_json/204010499.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"Pinning",
    "migrator_version":0
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/223743777.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"CompilerRebuild",
    "migrator_version":1,
    "name":"Python 3.7, GCC 7, R 3.5.1, openBLAS 0.3.2"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/255241054.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"Rebuild",
    "migrator_object_version":1,
    "migrator_version":0,
    "name":"OpenSSL"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/255260372.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"Rebuild",
    "migrator_object_version":2,
    "migrator_version":0,
    "name":"OpenSSL"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/256025318.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"Rebuild",
    "migrator_object_version":3,
    "migrator_version":0,
    "name":"OpenSSL"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/299494592.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"Rebuild",
    "migrator_version":0,
    "name":"icu-64.2"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/305374694.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"Version",
    "migrator_version":0,
    "version":"5.12.4"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/309217231.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"Version",
    "migrator_version":0,
    "version":"5.12.3"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/316353852.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"Version",
    "migrator_version":0,
    "version":"5.12.5"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/327853732.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"Version",
    "migrator_version":0,
    "version":"5.13.1"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/331157453.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"Version",
    "migrator_version":0,
    "version":"5.13.0"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/334715177.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"Version",
    "migrator_version":0,
    "version":"5.13.2"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/346939186.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"Version",
    "migrator_version":0,
    "version":"5.12.6"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/352497117.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"Version",
    "migrator_version":0,
    "version":"5.14.0"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/367344421.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"Version",
    "migrator_version":0,
    "version":"5.14.1"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/372178782.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"ArchRebuild",
    "migrator_version":1,
    "name":"aarch64 and ppc64le addition"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/416975870.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"MigrationYaml",
    "migrator_object_version":1,
    "migrator_version":0,
    "name":"icu67"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  }
 ],
 "bad":false,
 "conda-forge.yml":{
  "compiler_stack":"comp7",
  "max_py_ver":"37",
  "max_r_ver":"35",
  "provider":{
   "linux":"azure",
   "osx":"azure",
   "win":"azure"
  }
 },
 "feedstock_name":"qt",
 "hash_type":"sha256",
 "meta_yaml":{
  "about":{
   "description":"Qt helps you create connected devices, UIs & applications that run\nanywhere on any device, on any operating system at any time.\n",
   "dev_url":"https://github.com/qtproject",
   "doc_url":"http://doc.qt.io/",
   "home":"http://qt-project.org",
   "license":"LGPL-3.0",
   "license_file":"LICENSE.LGPLv3",
   "summary":"Qt is a cross-platform application and UI framework."
  },
  "build":{
   "detect_binary_files_with_prefix":true,
   "merge_build_host":true,
   "missing_dso_whitelist":[
    "/usr/lib/libbsm.0.dylib",
    "/usr/lib/libcups.2.dylib",
    "/usr/lib/libresolv.9.dylib",
    "/usr/lib/libsandbox.1.dylib",
    "/System/Library/Frameworks/CoreLocation.framework/**"
   ],
   "number":"3",
   "run_exports":[
    "qt",
    "qt",
    "qt"
   ],
   "skip":true
  },
  "extra":{
   "recipe-maintainers":[
    "ccordoba12",
    "gillins",
    "mingwandroid",
    "msarahan",
    "ocefpaf",
    "stuarteberg",
    "ccordoba12",
    "gillins",
    "mingwandroid",
    "msarahan",
    "ocefpaf",
    "stuarteberg",
    "ccordoba12",
    "gillins",
    "mingwandroid",
    "msarahan",
    "ocefpaf",
    "stuarteberg"
   ]
  },
  "package":{
   "name":"qt",
   "version":"5.12.5"
  },
  "requirements":{
   "build":[
    "vs2017_win-64",
    "python 2.7*",
    "ninja",
    "m2-gperf",
    "m2-bison",
    "m2-flex",
    "m2-patch",
    "jom",
    "perl 5.*",
    "cxx_compiler_stub",
    "c_compiler_stub",
    "make",
    "python 2.7*",
    "ninja",
    "perl 5.*",
    "cxx_compiler_stub",
    "c_compiler_stub",
    "cdt_stub",
    "cdt_stub",
    "cdt_stub",
    "cdt_stub",
    "cdt_stub",
    "cdt_stub",
    "cdt_stub",
    "cdt_stub",
    "cdt_stub",
    "cdt_stub",
    "cdt_stub",
    "cdt_stub",
    "cdt_stub",
    "cdt_stub",
    "cdt_stub",
    "cdt_stub",
    "cdt_stub",
    "cdt_stub",
    "cdt_stub",
    "cdt_stub",
    "cdt_stub",
    "cdt_stub",
    "cdt_stub",
    "cdt_stub",
    "cdt_stub",
    "cdt_stub",
    "cdt_stub",
    "pkg-config",
    "make",
    "python 2.7*",
    "ninja",
    "ruby >=2.5",
    "bison",
    "flex",
    "gperf",
    "perl 5.*",
    "readline"
   ],
   "host":[
    "icu",
    "jpeg",
    "libpng",
    "sqlite",
    "zlib",
    "openssl",
    "llvmdev",
    "clangdev",
    "libclang",
    "icu",
    "jpeg",
    "libpng",
    "nspr",
    "nss",
    "sqlite",
    "mysql",
    "postgresql",
    "zlib",
    "llvmdev",
    "clangdev",
    "libclang",
    "pthread-stubs",
    "dbus",
    "fontconfig",
    "freetype",
    "gst-plugins-base",
    "gstreamer",
    "glib",
    "libxml2",
    "libxkbcommon",
    "expat",
    "icu",
    "jpeg",
    "libpng",
    "nspr",
    "nss",
    "sqlite",
    "mysql",
    "postgresql",
    "zlib",
    "libxcb",
    "llvmdev",
    "clangdev",
    "libclang"
   ],
   "run":[
    "openssl",
    "libclang",
    "nss",
    "nspr",
    "libclang",
    "openssl",
    "libxcb",
    "nss",
    "nspr",
    "libclang"
   ],
   "run_constrained":[
    "__osx >=10.9"
   ]
  },
  "source":[
   {
    "md5":"d8c9ed842d39f1a5f31a7ab31e4e886c",
    "patches":[
     "patches/0001-qtbase-osx-xctest-check.patch",
     "patches/0002-qtbase-osx-allow-any-xcrun-in-PATH.patch",
     "patches/0003-qtbase-use-better-clang-optimize-size.patch",
     "patches/0004-qtbase-never-enable-new-dtags.patch",
     "patches/0005-qtbase-link-xcb-shm.patch",
     "patches/0006-qtbase-Do-not-set-PKG_CONFIG_SYSROOT_DIR-when-sysroo.patch",
     "patches/0007-qtbase-Disable-kTLSProtocol13-for-macOS-10.12.patch",
     "patches/0008-qtbase-Define-kIOSurfaceSuccess-if-it-is-not-defined.patch",
     "patches/0009-qtbase-fix-hardcoded-sysroot-path.patch",
     "patches/0001-shobjidl-Fix-compile-guard-around-SHARDAPPIDINFOLINK.patch",
     "patches/0001-qtwebengine-allow-any-xcblah-in-PATH.patch",
     "patches/0002-qtwebengine-find_sdk-respect-CONDA_BUILD_SYSROOT.patch",
     "patches/0004-qtwebengine-use-CONDA_PREFIX_include-for-system_libjpeg.patch",
     "patches/0005-qtwebengine-jpeg-codec-cannot-convert-bool-to-boolean.patch",
     "patches/0006-qtwebengine-run-gn-verbosely.patch",
     "patches/0008-qtwebengine-link-gn-to-librt.patch",
     "patches/0009-qtwebengine-Add-conda_prefix-to-features-gni-declare_args.patch",
     "patches/0010-qtwebengine-Use-conda_prefix-for-system-zlib.patch",
     "patches/0011-qtwebengine-Use-conda_prefix-for-ui-gl.patch",
     "patches/0012-qtwebengine-Ignore-glibc-2-17-min-version-check.patch",
     "patches/0013-qtwebengine-missing_EVIOCGPROP.diff",
     "patches/0014-qtwebengine-HAVE_SENDMMSG.diff",
     "patches/0001-qtscript-mark-cti_vm_throw-as-REFERENCED_FROM_ASM.patch"
    ],
    "url":"http://download.qt.io/official_releases/qt/5.12/5.12.5/single/qt-everywhere-src-5.12.5.tar.xz"
   },
   {
    "folder":"opengl32sw",
    "sha256":"2a0d2f92c60e0962ef5f6039d3793424c6f39e49ba27ac04a5b21ca4ae012e15",
    "url":"http://download.qt.io/development_releases/prebuilt/llvmpipe/windows/opengl32sw-64-mesa_12_0_rc2.7z"
   },
   {
    "md5":"d8c9ed842d39f1a5f31a7ab31e4e886c",
    "patches":[
     "patches/0001-qtbase-osx-xctest-check.patch",
     "patches/0002-qtbase-osx-allow-any-xcrun-in-PATH.patch",
     "patches/0003-qtbase-use-better-clang-optimize-size.patch",
     "patches/0004-qtbase-never-enable-new-dtags.patch",
     "patches/0005-qtbase-link-xcb-shm.patch",
     "patches/0006-qtbase-Do-not-set-PKG_CONFIG_SYSROOT_DIR-when-sysroo.patch",
     "patches/0007-qtbase-Disable-kTLSProtocol13-for-macOS-10.12.patch",
     "patches/0008-qtbase-Define-kIOSurfaceSuccess-if-it-is-not-defined.patch",
     "patches/0009-qtbase-fix-hardcoded-sysroot-path.patch",
     "patches/0001-shobjidl-Fix-compile-guard-around-SHARDAPPIDINFOLINK.patch",
     "patches/0001-qtwebengine-allow-any-xcblah-in-PATH.patch",
     "patches/0002-qtwebengine-find_sdk-respect-CONDA_BUILD_SYSROOT.patch",
     "patches/0004-qtwebengine-use-CONDA_PREFIX_include-for-system_libjpeg.patch",
     "patches/0005-qtwebengine-jpeg-codec-cannot-convert-bool-to-boolean.patch",
     "patches/0006-qtwebengine-run-gn-verbosely.patch",
     "patches/0008-qtwebengine-link-gn-to-librt.patch",
     "patches/0009-qtwebengine-Add-conda_prefix-to-features-gni-declare_args.patch",
     "patches/0010-qtwebengine-Use-conda_prefix-for-system-zlib.patch",
     "patches/0011-qtwebengine-Use-conda_prefix-for-ui-gl.patch",
     "patches/0012-qtwebengine-Ignore-glibc-2-17-min-version-check.patch",
     "patches/0013-qtwebengine-missing_EVIOCGPROP.diff",
     "patches/0014-qtwebengine-HAVE_SENDMMSG.diff",
     "patches/0001-qtscript-mark-cti_vm_throw-as-REFERENCED_FROM_ASM.patch"
    ],
    "url":"http://download.qt.io/official_releases/qt/5.12/5.12.5/single/qt-everywhere-src-5.12.5.tar.xz"
   },
   {
    "md5":"d8c9ed842d39f1a5f31a7ab31e4e886c",
    "patches":[
     "patches/0001-qtbase-osx-xctest-check.patch",
     "patches/0002-qtbase-osx-allow-any-xcrun-in-PATH.patch",
     "patches/0003-qtbase-use-better-clang-optimize-size.patch",
     "patches/0004-qtbase-never-enable-new-dtags.patch",
     "patches/0005-qtbase-link-xcb-shm.patch",
     "patches/0006-qtbase-Do-not-set-PKG_CONFIG_SYSROOT_DIR-when-sysroo.patch",
     "patches/0007-qtbase-Disable-kTLSProtocol13-for-macOS-10.12.patch",
     "patches/0008-qtbase-Define-kIOSurfaceSuccess-if-it-is-not-defined.patch",
     "patches/0009-qtbase-fix-hardcoded-sysroot-path.patch",
     "patches/0001-shobjidl-Fix-compile-guard-around-SHARDAPPIDINFOLINK.patch",
     "patches/0001-qtwebengine-allow-any-xcblah-in-PATH.patch",
     "patches/0002-qtwebengine-find_sdk-respect-CONDA_BUILD_SYSROOT.patch",
     "patches/0004-qtwebengine-use-CONDA_PREFIX_include-for-system_libjpeg.patch",
     "patches/0005-qtwebengine-jpeg-codec-cannot-convert-bool-to-boolean.patch",
     "patches/0006-qtwebengine-run-gn-verbosely.patch",
     "patches/0008-qtwebengine-link-gn-to-librt.patch",
     "patches/0009-qtwebengine-Add-conda_prefix-to-features-gni-declare_args.patch",
     "patches/0010-qtwebengine-Use-conda_prefix-for-system-zlib.patch",
     "patches/0011-qtwebengine-Use-conda_prefix-for-ui-gl.patch",
     "patches/0012-qtwebengine-Ignore-glibc-2-17-min-version-check.patch",
     "patches/0013-qtwebengine-missing_EVIOCGPROP.diff",
     "patches/0014-qtwebengine-HAVE_SENDMMSG.diff",
     "patches/0001-qtscript-mark-cti_vm_throw-as-REFERENCED_FROM_ASM.patch"
    ],
    "url":"http://download.qt.io/official_releases/qt/5.12/5.12.5/single/qt-everywhere-src-5.12.5.tar.xz"
   }
  ],
  "test":{
   "commands":[
    "if not exist %LIBRARY_BIN%\\\\Qt5WebEngine.dll exit 1",
    "if not exist %LIBRARY_PREFIX%\\plugins\\sqldrivers\\qsqlite.dll exit 1",
    "test -f $PREFIX/lib/libQt5WebEngine${SHLIB_EXT}",
    "test -f $PREFIX/plugins/sqldrivers/libqsqlite${SHLIB_EXT}",
    "test -f $PREFIX/lib/libQt5WebEngine${SHLIB_EXT}",
    "test -f $PREFIX/plugins/sqldrivers/libqsqlite${SHLIB_EXT}"
   ],
   "files":[
    "test/hello.pro",
    "test/main-qtwebengine.cpp",
    "test/main.cpp",
    "test/main.qml",
    "test/qml.qrc",
    "test/qrc_qml.cpp",
    "test/qtwebengine.pro",
    "xcodebuild",
    "xcrun",
    "test/hello.pro",
    "test/main-qtwebengine.cpp",
    "test/main.cpp",
    "test/main.qml",
    "test/qml.qrc",
    "test/qrc_qml.cpp",
    "test/qtwebengine.pro",
    "xcodebuild",
    "xcrun",
    "test/hello.pro",
    "test/main-qtwebengine.cpp",
    "test/main.cpp",
    "test/main.qml",
    "test/qml.qrc",
    "test/qrc_qml.cpp",
    "test/qtwebengine.pro",
    "xcodebuild",
    "xcrun"
   ],
   "requires":[
    "cxx_compiler_stub",
    "cxx_compiler_stub",
    "cxx_compiler_stub",
    "cdt_stub",
    "cdt_stub",
    "cdt_stub",
    "cdt_stub",
    "cdt_stub",
    "cdt_stub",
    "cdt_stub",
    "cdt_stub",
    "cdt_stub",
    "cdt_stub",
    "cdt_stub",
    "cdt_stub",
    "cdt_stub",
    "cdt_stub",
    "cdt_stub",
    "cdt_stub",
    "cdt_stub",
    "cdt_stub",
    "cdt_stub",
    "cdt_stub",
    "cdt_stub",
    "cdt_stub",
    "cdt_stub",
    "cdt_stub",
    "cdt_stub"
   ]
  }
 },
 "name":"qt",
 "new_version":"5.14.2",
 "new_version_attempts":{
  "5.12.7":2,
  "5.12.8":4,
  "5.14.2":676
 },
 "new_version_errors":{
  "5.12.7":"The recipe did not change in the version migration, a URL did not hash, or there is jinja2 syntax the bot cannot handle!\n\nPlease check the URLs in your recipe with version '5.12.7' to make sure they exist!\n\nWe also found the following errors:\n\n - recipe did not appear to change even though the bot said it should have\n",
  "5.12.8":"The recipe did not change in the version migration, a URL did not hash, or there is jinja2 syntax the bot cannot handle!\n\nPlease check the URLs in your recipe with version '5.12.8' to make sure they exist!\n\nWe also found the following errors:\n\n - recipe did not appear to change even though the bot said it should have\n",
  "5.14.2":"The recipe did not change in the version migration, a URL did not hash, or there is jinja2 syntax the bot cannot handle!\n\nPlease check the URLs in your recipe with version '5.14.2' to make sure they exist!\n\nWe also found the following errors:\n\n - recipe did not appear to change even though the bot said it should have\n"
 },
 "pinning_version":"2020.05.12.18.03.58",
 "raw_meta_yaml":"# Note, you cannot build this with macOS SDK < 10.12, despite there being a few patches\n# to add back support. QtWebengine scuppers us with:\n#   error: unknown type name 'SecKeyAlgorithm'\n# .. these 10.11 support patches should be removed anyway as they could break some things.\n# .. such as pop-up Window mouse-events.\n{% set version = \"5.12.5\" %}\n\npackage:\n  name: qt\n  version: {{ version }}\n\nsource:\n  - url: http://download.qt.io/official_releases/qt/{{ version.rpartition('.')[0] }}/{{ version }}/single/qt-everywhere-src-{{ version }}.tar.xz\n    md5: d8c9ed842d39f1a5f31a7ab31e4e886c\n    patches:\n\n      # qtbase\n      - patches/0001-qtbase-osx-xctest-check.patch\n      - patches/0002-qtbase-osx-allow-any-xcrun-in-PATH.patch\n      - patches/0003-qtbase-use-better-clang-optimize-size.patch\n      - patches/0004-qtbase-never-enable-new-dtags.patch\n      - patches/0005-qtbase-link-xcb-shm.patch\n      - patches/0006-qtbase-Do-not-set-PKG_CONFIG_SYSROOT_DIR-when-sysroo.patch\n      - patches/0007-qtbase-Disable-kTLSProtocol13-for-macOS-10.12.patch\n      - patches/0008-qtbase-Define-kIOSurfaceSuccess-if-it-is-not-defined.patch\n      - patches/0009-qtbase-fix-hardcoded-sysroot-path.patch\n      # - patches/9999-qtbase-use-better-gcc-optimize-size.patch\n\n      # qtwinextras\n      - patches/0001-shobjidl-Fix-compile-guard-around-SHARDAPPIDINFOLINK.patch\n\n      # qtwebengine\n      - patches/0001-qtwebengine-allow-any-xcblah-in-PATH.patch\n      - patches/0002-qtwebengine-find_sdk-respect-CONDA_BUILD_SYSROOT.patch\n      - patches/0004-qtwebengine-use-CONDA_PREFIX_include-for-system_libjpeg.patch\n      - patches/0005-qtwebengine-jpeg-codec-cannot-convert-bool-to-boolean.patch\n      - patches/0006-qtwebengine-run-gn-verbosely.patch\n      # - patches/0007-qtwebengine-macOS-10.11-support-Define-NSEventTypeScrollWheel-as.patch\n      - patches/0008-qtwebengine-link-gn-to-librt.patch\n      - patches/0009-qtwebengine-Add-conda_prefix-to-features-gni-declare_args.patch\n      - patches/0010-qtwebengine-Use-conda_prefix-for-system-zlib.patch\n      - patches/0011-qtwebengine-Use-conda_prefix-for-ui-gl.patch\n      - patches/0012-qtwebengine-Ignore-glibc-2-17-min-version-check.patch\n      - patches/0013-qtwebengine-missing_EVIOCGPROP.diff\n      - patches/0014-qtwebengine-HAVE_SENDMMSG.diff\n\n      # qtscript\n      - patches/0001-qtscript-mark-cti_vm_throw-as-REFERENCED_FROM_ASM.patch\n\n  - url: http://download.qt.io/community_releases/5.9/5.9.0-final/qtwebkit-opensource-src-5.9.0.tar.xz            # [qtwebkit == 'true']\n    sha256: 8dad193b740055a998312e04a040f2e32a923c0823b2d239b24eab08276a4e04                                      # [qtwebkit == 'true']\n    folder: qtwebkit                                                                                              # [qtwebkit == 'true']\n    patches:                                                                                                      # [qtwebkit == 'true']\n      - patches/0001-qtwebkit-old-ld-compat.patch                                                                         # [qtwebkit == 'true']\n      - patches/0002-qtwebkit-ruby-1.8.patch                                                                              # [qtwebkit == 'true']\n      - patches/0004-qtwebkit-CentOS5-Fix-fucomip-compat-with-gas-2.17.50.patch                                           # [qtwebkit == 'true']\n      - patches/0006-qtwebkit-WTF--StringImpl--copyChars-segfaults-when-built-with-GCC-7.patch                            # [qtwebkit == 'true']\n\n  - url: http://download.qt.io/development_releases/prebuilt/llvmpipe/windows/opengl32sw-32-mesa_12_0_rc2.7z      # [win32]\n    sha256: 656015ab03a6686854b920a0a0bf77b4e46525ee8d5396bf04a49ef80a53427d                                      # [win32]\n    folder: opengl32sw                                                                                            # [win32]\n\n  - url: http://download.qt.io/development_releases/prebuilt/llvmpipe/windows/opengl32sw-64-mesa_12_0_rc2.7z      # [win64]\n    sha256: 2a0d2f92c60e0962ef5f6039d3793424c6f39e49ba27ac04a5b21ca4ae012e15                                      # [win64]\n    folder: opengl32sw                                                                                            # [win64]\n\nbuild:\n  number: 3\n  skip: True  # [win and vc != 14]\n  detect_binary_files_with_prefix: true\n  # QtWebEngine fails on Linux unless we merge\n  merge_build_host: true  # [linux]\n  run_exports:\n    - {{ pin_subpackage('qt', max_pin='x.x') }}\n  missing_dso_whitelist:  # [osx]\n    - /usr/lib/libbsm.0.dylib  # [osx]\n    - /usr/lib/libcups.2.dylib  # [osx]\n    - /usr/lib/libresolv.9.dylib  # [osx]\n    - /usr/lib/libsandbox.1.dylib  # [osx]\n    - '/System/Library/Frameworks/CoreLocation.framework/**'  # [osx]\n\nrequirements:\n  build:\n    - {{ compiler('cxx') }}              # [not win]\n    - {{ compiler('c') }}                # [not win]\n    - vs2017_win-64                      # [win64]\n    - vs2017_win-32                      # [win32]\n    - {{ cdt('xorg-x11-proto-devel') }}  # [linux]\n    - {{ cdt('libx11-devel') }}          # [linux]\n    - {{ cdt('libxext-devel') }}         # [linux]\n    - {{ cdt('libxrender-devel') }}      # [linux]\n    - {{ cdt('mesa-libgl-devel') }}      # [linux]\n    - {{ cdt('mesa-libegl-devel') }}     # [linux]\n    - {{ cdt('mesa-dri-drivers') }}      # [linux]\n    - {{ cdt('libxau-devel') }}          # [linux]\n    - {{ cdt('alsa-lib-devel') }}        # [linux]\n    - {{ cdt('gtk2-devel') }}            # [linux]\n    - {{ cdt('gtkmm24-devel') }}         # [linux]\n    - {{ cdt('libdrm-devel') }}          # [linux]\n    - {{ cdt('libxcomposite-devel') }}   # [linux]\n    - {{ cdt('libxcursor-devel') }}      # [linux]\n    - {{ cdt('libxi-devel') }}           # [linux]\n    - {{ cdt('libxrandr-devel') }}       # [linux]\n    - {{ cdt('pciutils-devel') }}        # [linux]\n    - {{ cdt('libxscrnsaver-devel') }}   # [linux]\n    - {{ cdt('libxtst-devel') }}         # [linux]\n    - {{ cdt('libselinux-devel') }}      # [linux]\n    - {{ cdt('libxdamage') }}            # [linux]\n    - {{ cdt('libxdamage-devel') }}      # [linux]\n    - {{ cdt('libxfixes') }}             # [linux]\n    - {{ cdt('libxfixes-devel') }}       # [linux]\n    - {{ cdt('libxxf86vm') }}            # [linux]\n    - {{ cdt('libxxf86vm-devel') }}      # [linux]\n    - {{ cdt('cups-devel') }}            # [linux]\n\n    # For fontconfig + freetype\n    - pkg-config                         # [linux]\n    - make                               # [unix]\n    # Probably only needed for WebEngine\n    - python 2.7*\n    - ninja\n    - ruby >=2.5                         # [linux]\n    - bison                              # [linux]\n    - flex                               # [linux]\n    - gperf                              # [linux]\n    - m2-gperf                           # [win]\n    - m2-bison                           # [win]\n    - m2-flex                            # [win]\n    - m2-patch                           # [win]\n    - jom                                # [win]\n    - perl 5.*\n    # Add readline here, so that newest readline is used.\n    # Otherwise build and host might end up with two different versions\n    # If they do, merge_build_host will fail.\n    - readline                           # [linux]\n  host:\n    # For pkg-config gl, fontconfig + freetype\n    - pthread-stubs                      # [linux]\n    - dbus                               # [linux]\n    - fontconfig                         # [linux]\n    - freetype                           # [linux]\n    - gst-plugins-base                   # [linux]\n    - gstreamer                          # [linux]\n    - glib                               # [linux]\n    - libxml2                            # [linux]\n    - libxkbcommon                       # [linux]\n    # For WebEngine, but for compatiblity we want to restrict\n    # usage of our own libraries. It seems Chromium prefers\n    # expat to libxml2 and we will try to froce it to use the\n    # bundled one.\n    # Other than that (and esp. for Google developed libs) we\n    # avoid our own packagess. FFMPEG was not detected anyway,\n    # and neither was libvpx (AFAICT).\n    # - libxml2                            # [unix]\n    # - libxslt                            # [unix]\n    # - libopus                            # [unix]\n    # - libvpx                             # [unix]\n    # - ffmpeg                             # [unix]\n    - expat                              # [linux]\n    - icu\n    - jpeg\n    - libpng\n    - nspr                               # [unix]\n    - nss                                # [unix]\n    - sqlite\n    - mysql                              # [not win]\n    - postgresql                         # [not win]\n    - zlib\n    - libxcb                             # [linux]\n    # We cannot install OpenSSL into the prefix when building qtwebengine\n    # on linux as BoringSSL and OpenSSL then conflict with each other.\n    - openssl                            # [win]\n    # For QDoc\n    # http://doc.qt.io/Qt-5/qdoc-guide-clang.html\n    # Only libclang is needed, but needs the full package for detection.\n    - llvmdev\n    - clangdev\n    - libclang\n  run:\n    - openssl                            # [not osx]\n    - libxcb                             # [linux]\n    - {{ pin_compatible(\"nss\") }}        # [unix]\n    - {{ pin_compatible(\"nspr\") }}       # [unix]\n    - {{ pin_compatible(\"libclang\") }}\n  run_constrained:                                            # [osx]\n    - __osx >={{ MACOSX_DEPLOYMENT_TARGET|default(\"10.9\") }}  # [osx]\n\ntest:\n  requires:\n    - {{ compiler('cxx') }}\n    - {{ cdt('xorg-x11-proto-devel') }}  # [linux]\n    - {{ cdt('libx11-devel') }}          # [linux]\n    - {{ cdt('libxext-devel') }}         # [linux]\n    - {{ cdt('libxrender-devel') }}      # [linux]\n    - {{ cdt('mesa-libgl-devel') }}      # [linux]\n    - {{ cdt('mesa-libegl-devel') }}     # [linux]\n    - {{ cdt('mesa-dri-drivers') }}      # [linux]\n    - {{ cdt('libxau-devel') }}          # [linux]\n    - {{ cdt('alsa-lib-devel') }}        # [linux]\n    - {{ cdt('gtk2-devel') }}            # [linux]\n    - {{ cdt('gtkmm24-devel') }}         # [linux]\n    - {{ cdt('libdrm-devel') }}          # [linux]\n    - {{ cdt('libxcomposite-devel') }}   # [linux]\n    - {{ cdt('libxcursor-devel') }}      # [linux]\n    - {{ cdt('libxi-devel') }}           # [linux]\n    - {{ cdt('libxrandr-devel') }}       # [linux]\n    - {{ cdt('pciutils-devel') }}        # [linux]\n    - {{ cdt('libxscrnsaver-devel') }}   # [linux]\n    - {{ cdt('libxtst-devel') }}         # [linux]\n    - {{ cdt('libselinux-devel') }}      # [linux]\n    - {{ cdt('libxdamage') }}            # [linux]\n    - {{ cdt('libxdamage-devel') }}      # [linux]\n    - {{ cdt('libxfixes') }}             # [linux]\n    - {{ cdt('libxfixes-devel') }}       # [linux]\n    - {{ cdt('libxxf86vm') }}            # [linux]\n  files:\n    - test/hello.pro\n    - test/main-qtwebengine.cpp\n    - test/main.cpp\n    - test/main.qml\n    - test/qml.qrc\n    - test/qrc_qml.cpp\n    - test/qtwebengine.pro\n    - xcodebuild\n    - xcrun\n  commands:\n    - if not exist %LIBRARY_BIN%\\\\Qt5WebEngine.dll exit 1                  # [win]\n    - test -f $PREFIX/lib/libQt5WebEngine${SHLIB_EXT}                      # [unix]\n    # sql plugin\n    - test -f $PREFIX/plugins/sqldrivers/libqsqlite${SHLIB_EXT}            # [unix]\n    - if not exist %LIBRARY_PREFIX%\\plugins\\sqldrivers\\qsqlite.dll exit 1  # [win]\n\nabout:\n  home: http://qt-project.org\n  license: LGPL-3.0\n  license_file: LICENSE.LGPLv3\n  summary: 'Qt is a cross-platform application and UI framework.'\n  description: |\n    Qt helps you create connected devices, UIs & applications that run\n    anywhere on any device, on any operating system at any time.\n  doc_url: http://doc.qt.io/\n  dev_url: https://github.com/qtproject\n\nextra:\n  recipe-maintainers:\n    - ccordoba12\n    - gillins\n    - mingwandroid\n    - msarahan\n    - ocefpaf\n    - stuarteberg\n",
 "req":{
  "__set__":true,
  "elements":[
   "bison",
   "c_compiler_stub",
   "cdt_stub",
   "clangdev",
   "cxx_compiler_stub",
   "dbus",
   "expat",
   "flex",
   "fontconfig",
   "freetype",
   "glib",
   "gperf",
   "gst-plugins-base",
   "gstreamer",
   "icu",
   "jom",
   "jpeg",
   "libclang",
   "libpng",
   "libxcb",
   "libxkbcommon",
   "libxml2",
   "llvmdev",
   "m2-bison",
   "m2-flex",
   "m2-gperf",
   "m2-patch",
   "make",
   "mysql",
   "ninja",
   "nspr",
   "nss",
   "openssl",
   "perl",
   "pkg-config",
   "postgresql",
   "pthread-stubs",
   "python",
   "readline",
   "ruby",
   "sqlite",
   "vs2017_win-64",
   "zlib"
  ]
 },
 "requirements":{
  "build":{
   "__set__":true,
   "elements":[
    "bison",
    "c_compiler_stub",
    "cdt_stub",
    "cxx_compiler_stub",
    "flex",
    "gperf",
    "jom",
    "m2-bison",
    "m2-flex",
    "m2-gperf",
    "m2-patch",
    "make",
    "ninja",
    "perl",
    "pkg-config",
    "python",
    "readline",
    "ruby",
    "vs2017_win-64"
   ]
  },
  "host":{
   "__set__":true,
   "elements":[
    "clangdev",
    "dbus",
    "expat",
    "fontconfig",
    "freetype",
    "glib",
    "gst-plugins-base",
    "gstreamer",
    "icu",
    "jpeg",
    "libclang",
    "libpng",
    "libxcb",
    "libxkbcommon",
    "libxml2",
    "llvmdev",
    "mysql",
    "nspr",
    "nss",
    "openssl",
    "postgresql",
    "pthread-stubs",
    "sqlite",
    "zlib"
   ]
  },
  "run":{
   "__set__":true,
   "elements":[
    "libclang",
    "libxcb",
    "nspr",
    "nss",
    "openssl"
   ]
  },
  "test":{
   "__set__":true,
   "elements":[
    "cdt_stub",
    "cxx_compiler_stub"
   ]
  }
 },
 "smithy_version":"No azure token. Create a token and\nput it in ~/.conda-smithy/azure.token\n3.7.0\n",
 "strong_exports":false,
 "time":1568135274.8015213,
 "total_requirements":{
  "build":{
   "__set__":true,
   "elements":[
    "bison",
    "c_compiler_stub",
    "cdt_stub",
    "cxx_compiler_stub",
    "flex",
    "gperf",
    "jom",
    "m2-bison",
    "m2-flex",
    "m2-gperf",
    "m2-patch",
    "make",
    "ninja",
    "perl 5.*",
    "pkg-config",
    "python 2.7*",
    "readline",
    "ruby >=2.5",
    "vs2017_win-64"
   ]
  },
  "host":{
   "__set__":true,
   "elements":[
    "clangdev",
    "dbus",
    "expat",
    "fontconfig",
    "freetype",
    "glib",
    "gst-plugins-base",
    "gstreamer",
    "icu",
    "jpeg",
    "libclang",
    "libpng",
    "libxcb",
    "libxkbcommon",
    "libxml2",
    "llvmdev",
    "mysql",
    "nspr",
    "nss",
    "openssl",
    "postgresql",
    "pthread-stubs",
    "sqlite",
    "zlib"
   ]
  },
  "run":{
   "__set__":true,
   "elements":[
    "libclang",
    "libxcb",
    "nspr",
    "nss",
    "openssl"
   ]
  },
  "test":{
   "__set__":true,
   "elements":[
    "cdt_stub",
    "cxx_compiler_stub"
   ]
  }
 },
 "url":"http://download.qt.io/official_releases/qt/5.12/5.12.1/single/qt-everywhere-src-5.12.1.zip",
 "version":"5.12.5"
}