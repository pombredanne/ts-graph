{
 "PRed":[
  {
   "data":{
    "bot_rerun":false,
    "migrator_name":"CompilerRebuild",
    "migrator_version":1,
    "name":"Python 3.7, GCC 7, R 3.5.1, openBLAS 0.3.2"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/308257153.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"GFortranOSXRebuild",
    "migrator_version":0,
    "name":"fortran_compiler_stub-7"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/311981980.json"
   },
   "data":{
    "bot_rerun":1579272528.664583,
    "migrator_name":"ArchRebuild",
    "migrator_version":1,
    "name":"aarch64 and ppc64le addition"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/321011613.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"ArchRebuild",
    "migrator_version":1,
    "name":"aarch64 and ppc64le addition"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  }
 ],
 "bad":"Upstream: Error getting upstream version",
 "conda-forge.yml":{
  "provider":{
   "linux_aarch64":"default",
   "linux_ppc64le":"default",
   "win":"azure"
  }
 },
 "feedstock_name":"compilers",
 "meta_yaml":{
  "about":{
   "description":"This package is a generic way to obtain the compilers for your system\nthat conda-forge used to compile its ecosystem. These compilers are,\ntherefore, guaranteed to be ABI compatible with the conda packages\nyou have installed.\n\nThese compiler metapackages are a convenience ONLY for users.\nDo NOT use these packages as a build or host dependencies in other\nrecipes.  Use the compiler Jinja template function instead.\nFor C++ for example, use compiler('cxx') as usual.\n",
   "home":"https://conda-forge.org",
   "license":"BSD-3-Clause",
   "license_family":"BSD",
   "license_file":"LICENSE.txt",
   "summary":"A metapackage to obtain compilers"
  },
  "build":{
   "number":"0"
  },
  "extra":{
   "recipe-maintainers":[
    "duncanmmacleod",
    "scopatz",
    "chrisburr",
    "duncanmmacleod",
    "scopatz",
    "chrisburr",
    "duncanmmacleod",
    "scopatz",
    "chrisburr"
   ]
  },
  "outputs":[
   {
    "about":{
     "description":"This package is a generic way to obtain binutils for your system\nthat conda-forge used to compile its ecosystem.  This compiler is,\ntherefore, guaranteed to be ABI compatible with the conda packages\nyou have installed.\n\nThis compiler metapackage is a convenience ONLY for users.\nDo NOT use this package as a build or host dependency in other\nrecipes.\n",
     "home":"https://conda-forge.org",
     "license":"BSD",
     "summary":"A metapackage to obtain binutils"
    },
    "build":{
     "skip":true
    },
    "name":"binutils-meta",
    "requirements":{
     "host":null,
     "run":null
    },
    "test":{
     "commands":null
    }
   },
   {
    "about":{
     "description":"This package is a generic way to obtain the C compiler for your system\nthat conda-forge used to compile its ecosystem.  This compiler is,\ntherefore, guaranteed to be ABI compatible with the conda packages\nyou have installed.\n\nThis compiler metapackage is a convenience ONLY for users.\nDo NOT use this package as a build or host dependency in other\nrecipes.  Use the Jinja template function compiler('c') instead.\n",
     "home":"https://conda-forge.org",
     "license":"BSD",
     "summary":"A metapackage to obtain a C compiler"
    },
    "name":"c-compiler",
    "requirements":{
     "host":[
      "c_compiler_stub"
     ],
     "run":[
      "c_compiler_stub"
     ]
    },
    "test":{
     "commands":null
    }
   },
   {
    "about":{
     "description":"This package is a generic way to obtain the C++ compiler for your system\nthat conda-forge used to compile its ecosystem.  This compiler is,\ntherefore, guaranteed to be ABI compatible with the conda packages\nyou have installed.\n\nThis compiler metapackage is a convenience ONLY for users.\nDo NOT use this package as a build or host dependency in other\nrecipes.  Use the Jinja template function compiler('cxx') instead.\n",
     "home":"https://conda-forge.org",
     "license":"BSD",
     "summary":"A metapackage to obtain a C++ compiler"
    },
    "name":"cxx-compiler",
    "requirements":{
     "host":[
      "cxx_compiler_stub"
     ],
     "run":[
      "cxx_compiler_stub"
     ]
    },
    "test":{
     "commands":null
    }
   },
   {
    "about":{
     "description":"This package is a generic way to obtain the Fortran compiler for your\nsystem that conda-forge used to compile its ecosystem.  This compiler\nis, therefore, guaranteed to be ABI compatible with the conda packages\nyou have installed.\n\nThis compiler metapackage is a convenience ONLY for users.\nDo NOT use this package as a build or host dependency in other\nrecipes.  Use the Jinja template function compiler('fortran') instead.\n",
     "home":"https://conda-forge.org",
     "license":"BSD",
     "summary":"A metapackage to obtain a Fortran compiler"
    },
    "name":"fortran-compiler",
    "requirements":{
     "host":[
      "fortran_compiler_stub"
     ],
     "run":[
      "fortran_compiler_stub"
     ]
    },
    "test":{
     "commands":null
    }
   },
   {
    "name":"compilers",
    "requirements":{
     "run":[
      "c-compiler",
      "cxx-compiler",
      "fortran-compiler"
     ]
    },
    "test":{
     "commands":null
    }
   },
   {
    "about":{
     "description":"This package is a generic way to obtain binutils for your system\nthat conda-forge used to compile its ecosystem.  This compiler is,\ntherefore, guaranteed to be ABI compatible with the conda packages\nyou have installed.\n\nThis compiler metapackage is a convenience ONLY for users.\nDo NOT use this package as a build or host dependency in other\nrecipes.\n",
     "home":"https://conda-forge.org",
     "license":"BSD",
     "summary":"A metapackage to obtain binutils"
    },
    "build":null,
    "name":"binutils-meta",
    "requirements":{
     "host":[
      "cctools",
      "ld64"
     ],
     "run":[
      "cctools",
      "ld64"
     ]
    },
    "script":"build-symlinks.sh",
    "test":{
     "commands":[
      "$LD --help",
      "echo \"Checking ar resolves to a path containing ${BUILD}\"",
      "readlink $(which ar) | grep -q \"${BUILD}\"",
      "echo \"Checking as resolves to a path containing ${BUILD}\"",
      "readlink $(which as) | grep -q \"${BUILD}\"",
      "echo \"Checking ld resolves to a path containing ${BUILD}\"",
      "readlink $(which ld) | grep -q \"${BUILD}\"",
      "echo \"Checking nm resolves to a path containing ${BUILD}\"",
      "readlink $(which nm) | grep -q \"${BUILD}\"",
      "echo \"Checking size resolves to a path containing ${BUILD}\"",
      "readlink $(which size) | grep -q \"${BUILD}\"",
      "echo \"Checking strings resolves to a path containing ${BUILD}\"",
      "readlink $(which strings) | grep -q \"${BUILD}\"",
      "echo \"Checking strip resolves to a path containing ${BUILD}\"",
      "readlink $(which strip) | grep -q \"${BUILD}\"",
      "echo \"Checking checksyms resolves to a path containing ${BUILD}\"",
      "readlink $(which checksyms) | grep -q \"${BUILD}\"",
      "echo \"Checking codesign_allocate resolves to a path containing ${BUILD}\"",
      "readlink $(which codesign_allocate) | grep -q \"${BUILD}\"",
      "echo \"Checking indr resolves to a path containing ${BUILD}\"",
      "readlink $(which indr) | grep -q \"${BUILD}\"",
      "echo \"Checking install_name_tool resolves to a path containing ${BUILD}\"",
      "readlink $(which install_name_tool) | grep -q \"${BUILD}\"",
      "echo \"Checking libtool resolves to a path containing ${BUILD}\"",
      "readlink $(which libtool) | grep -q \"${BUILD}\"",
      "echo \"Checking lipo resolves to a path containing ${BUILD}\"",
      "readlink $(which lipo) | grep -q \"${BUILD}\"",
      "echo \"Checking nmedit resolves to a path containing ${BUILD}\"",
      "readlink $(which nmedit) | grep -q \"${BUILD}\"",
      "echo \"Checking otool resolves to a path containing ${BUILD}\"",
      "readlink $(which otool) | grep -q \"${BUILD}\"",
      "echo \"Checking pagestuff resolves to a path containing ${BUILD}\"",
      "readlink $(which pagestuff) | grep -q \"${BUILD}\"",
      "echo \"Checking ranlib resolves to a path containing ${BUILD}\"",
      "readlink $(which ranlib) | grep -q \"${BUILD}\"",
      "echo \"Checking redo_prebinding resolves to a path containing ${BUILD}\"",
      "readlink $(which redo_prebinding) | grep -q \"${BUILD}\"",
      "echo \"Checking seg_addr_table resolves to a path containing ${BUILD}\"",
      "readlink $(which seg_addr_table) | grep -q \"${BUILD}\"",
      "echo \"Checking seg_hack resolves to a path containing ${BUILD}\"",
      "readlink $(which seg_hack) | grep -q \"${BUILD}\"",
      "echo \"Checking segedit resolves to a path containing ${BUILD}\"",
      "readlink $(which segedit) | grep -q \"${BUILD}\"",
      "echo \"Checking ar resolves to a path containing ${BUILD}\"",
      "readlink $(which ar) | grep -q \"${BUILD}\"",
      "echo \"Checking as resolves to a path containing ${BUILD}\"",
      "readlink $(which as) | grep -q \"${BUILD}\"",
      "echo \"Checking ld resolves to a path containing ${BUILD}\"",
      "readlink $(which ld) | grep -q \"${BUILD}\"",
      "echo \"Checking nm resolves to a path containing ${BUILD}\"",
      "readlink $(which nm) | grep -q \"${BUILD}\"",
      "echo \"Checking size resolves to a path containing ${BUILD}\"",
      "readlink $(which size) | grep -q \"${BUILD}\"",
      "echo \"Checking strings resolves to a path containing ${BUILD}\"",
      "readlink $(which strings) | grep -q \"${BUILD}\"",
      "echo \"Checking strip resolves to a path containing ${BUILD}\"",
      "readlink $(which strip) | grep -q \"${BUILD}\"",
      "echo \"Checking checksyms resolves to a path containing ${BUILD}\"",
      "readlink $(which checksyms) | grep -q \"${BUILD}\"",
      "echo \"Checking codesign_allocate resolves to a path containing ${BUILD}\"",
      "readlink $(which codesign_allocate) | grep -q \"${BUILD}\"",
      "echo \"Checking indr resolves to a path containing ${BUILD}\"",
      "readlink $(which indr) | grep -q \"${BUILD}\"",
      "echo \"Checking install_name_tool resolves to a path containing ${BUILD}\"",
      "readlink $(which install_name_tool) | grep -q \"${BUILD}\"",
      "echo \"Checking libtool resolves to a path containing ${BUILD}\"",
      "readlink $(which libtool) | grep -q \"${BUILD}\"",
      "echo \"Checking lipo resolves to a path containing ${BUILD}\"",
      "readlink $(which lipo) | grep -q \"${BUILD}\"",
      "echo \"Checking nmedit resolves to a path containing ${BUILD}\"",
      "readlink $(which nmedit) | grep -q \"${BUILD}\"",
      "echo \"Checking otool resolves to a path containing ${BUILD}\"",
      "readlink $(which otool) | grep -q \"${BUILD}\"",
      "echo \"Checking pagestuff resolves to a path containing ${BUILD}\"",
      "readlink $(which pagestuff) | grep -q \"${BUILD}\"",
      "echo \"Checking ranlib resolves to a path containing ${BUILD}\"",
      "readlink $(which ranlib) | grep -q \"${BUILD}\"",
      "echo \"Checking redo_prebinding resolves to a path containing ${BUILD}\"",
      "readlink $(which redo_prebinding) | grep -q \"${BUILD}\"",
      "echo \"Checking seg_addr_table resolves to a path containing ${BUILD}\"",
      "readlink $(which seg_addr_table) | grep -q \"${BUILD}\"",
      "echo \"Checking seg_hack resolves to a path containing ${BUILD}\"",
      "readlink $(which seg_hack) | grep -q \"${BUILD}\"",
      "echo \"Checking segedit resolves to a path containing ${BUILD}\"",
      "readlink $(which segedit) | grep -q \"${BUILD}\"",
      "echo \"Checking ar resolves to a path containing ${BUILD}\"",
      "readlink $(which ar) | grep -q \"${BUILD}\"",
      "echo \"Checking as resolves to a path containing ${BUILD}\"",
      "readlink $(which as) | grep -q \"${BUILD}\"",
      "echo \"Checking ld resolves to a path containing ${BUILD}\"",
      "readlink $(which ld) | grep -q \"${BUILD}\"",
      "echo \"Checking nm resolves to a path containing ${BUILD}\"",
      "readlink $(which nm) | grep -q \"${BUILD}\"",
      "echo \"Checking size resolves to a path containing ${BUILD}\"",
      "readlink $(which size) | grep -q \"${BUILD}\"",
      "echo \"Checking strings resolves to a path containing ${BUILD}\"",
      "readlink $(which strings) | grep -q \"${BUILD}\"",
      "echo \"Checking strip resolves to a path containing ${BUILD}\"",
      "readlink $(which strip) | grep -q \"${BUILD}\"",
      "echo \"Checking checksyms resolves to a path containing ${BUILD}\"",
      "readlink $(which checksyms) | grep -q \"${BUILD}\"",
      "echo \"Checking codesign_allocate resolves to a path containing ${BUILD}\"",
      "readlink $(which codesign_allocate) | grep -q \"${BUILD}\"",
      "echo \"Checking indr resolves to a path containing ${BUILD}\"",
      "readlink $(which indr) | grep -q \"${BUILD}\"",
      "echo \"Checking install_name_tool resolves to a path containing ${BUILD}\"",
      "readlink $(which install_name_tool) | grep -q \"${BUILD}\"",
      "echo \"Checking libtool resolves to a path containing ${BUILD}\"",
      "readlink $(which libtool) | grep -q \"${BUILD}\"",
      "echo \"Checking lipo resolves to a path containing ${BUILD}\"",
      "readlink $(which lipo) | grep -q \"${BUILD}\"",
      "echo \"Checking nmedit resolves to a path containing ${BUILD}\"",
      "readlink $(which nmedit) | grep -q \"${BUILD}\"",
      "echo \"Checking otool resolves to a path containing ${BUILD}\"",
      "readlink $(which otool) | grep -q \"${BUILD}\"",
      "echo \"Checking pagestuff resolves to a path containing ${BUILD}\"",
      "readlink $(which pagestuff) | grep -q \"${BUILD}\"",
      "echo \"Checking ranlib resolves to a path containing ${BUILD}\"",
      "readlink $(which ranlib) | grep -q \"${BUILD}\"",
      "echo \"Checking redo_prebinding resolves to a path containing ${BUILD}\"",
      "readlink $(which redo_prebinding) | grep -q \"${BUILD}\"",
      "echo \"Checking seg_addr_table resolves to a path containing ${BUILD}\"",
      "readlink $(which seg_addr_table) | grep -q \"${BUILD}\"",
      "echo \"Checking seg_hack resolves to a path containing ${BUILD}\"",
      "readlink $(which seg_hack) | grep -q \"${BUILD}\"",
      "echo \"Checking segedit resolves to a path containing ${BUILD}\"",
      "readlink $(which segedit) | grep -q \"${BUILD}\"",
      "echo \"Checking ar resolves to a path containing ${BUILD}\"",
      "readlink $(which ar) | grep -q \"${BUILD}\"",
      "echo \"Checking as resolves to a path containing ${BUILD}\"",
      "readlink $(which as) | grep -q \"${BUILD}\"",
      "echo \"Checking ld resolves to a path containing ${BUILD}\"",
      "readlink $(which ld) | grep -q \"${BUILD}\"",
      "echo \"Checking nm resolves to a path containing ${BUILD}\"",
      "readlink $(which nm) | grep -q \"${BUILD}\"",
      "echo \"Checking size resolves to a path containing ${BUILD}\"",
      "readlink $(which size) | grep -q \"${BUILD}\"",
      "echo \"Checking strings resolves to a path containing ${BUILD}\"",
      "readlink $(which strings) | grep -q \"${BUILD}\"",
      "echo \"Checking strip resolves to a path containing ${BUILD}\"",
      "readlink $(which strip) | grep -q \"${BUILD}\"",
      "echo \"Checking checksyms resolves to a path containing ${BUILD}\"",
      "readlink $(which checksyms) | grep -q \"${BUILD}\"",
      "echo \"Checking codesign_allocate resolves to a path containing ${BUILD}\"",
      "readlink $(which codesign_allocate) | grep -q \"${BUILD}\"",
      "echo \"Checking indr resolves to a path containing ${BUILD}\"",
      "readlink $(which indr) | grep -q \"${BUILD}\"",
      "echo \"Checking install_name_tool resolves to a path containing ${BUILD}\"",
      "readlink $(which install_name_tool) | grep -q \"${BUILD}\"",
      "echo \"Checking libtool resolves to a path containing ${BUILD}\"",
      "readlink $(which libtool) | grep -q \"${BUILD}\"",
      "echo \"Checking lipo resolves to a path containing ${BUILD}\"",
      "readlink $(which lipo) | grep -q \"${BUILD}\"",
      "echo \"Checking nmedit resolves to a path containing ${BUILD}\"",
      "readlink $(which nmedit) | grep -q \"${BUILD}\"",
      "echo \"Checking otool resolves to a path containing ${BUILD}\"",
      "readlink $(which otool) | grep -q \"${BUILD}\"",
      "echo \"Checking pagestuff resolves to a path containing ${BUILD}\"",
      "readlink $(which pagestuff) | grep -q \"${BUILD}\"",
      "echo \"Checking ranlib resolves to a path containing ${BUILD}\"",
      "readlink $(which ranlib) | grep -q \"${BUILD}\"",
      "echo \"Checking redo_prebinding resolves to a path containing ${BUILD}\"",
      "readlink $(which redo_prebinding) | grep -q \"${BUILD}\"",
      "echo \"Checking seg_addr_table resolves to a path containing ${BUILD}\"",
      "readlink $(which seg_addr_table) | grep -q \"${BUILD}\"",
      "echo \"Checking seg_hack resolves to a path containing ${BUILD}\"",
      "readlink $(which seg_hack) | grep -q \"${BUILD}\"",
      "echo \"Checking segedit resolves to a path containing ${BUILD}\"",
      "readlink $(which segedit) | grep -q \"${BUILD}\"",
      "echo \"Checking ar resolves to a path containing ${BUILD}\"",
      "readlink $(which ar) | grep -q \"${BUILD}\"",
      "echo \"Checking as resolves to a path containing ${BUILD}\"",
      "readlink $(which as) | grep -q \"${BUILD}\"",
      "echo \"Checking ld resolves to a path containing ${BUILD}\"",
      "readlink $(which ld) | grep -q \"${BUILD}\"",
      "echo \"Checking nm resolves to a path containing ${BUILD}\"",
      "readlink $(which nm) | grep -q \"${BUILD}\"",
      "echo \"Checking size resolves to a path containing ${BUILD}\"",
      "readlink $(which size) | grep -q \"${BUILD}\"",
      "echo \"Checking strings resolves to a path containing ${BUILD}\"",
      "readlink $(which strings) | grep -q \"${BUILD}\"",
      "echo \"Checking strip resolves to a path containing ${BUILD}\"",
      "readlink $(which strip) | grep -q \"${BUILD}\"",
      "echo \"Checking checksyms resolves to a path containing ${BUILD}\"",
      "readlink $(which checksyms) | grep -q \"${BUILD}\"",
      "echo \"Checking codesign_allocate resolves to a path containing ${BUILD}\"",
      "readlink $(which codesign_allocate) | grep -q \"${BUILD}\"",
      "echo \"Checking indr resolves to a path containing ${BUILD}\"",
      "readlink $(which indr) | grep -q \"${BUILD}\"",
      "echo \"Checking install_name_tool resolves to a path containing ${BUILD}\"",
      "readlink $(which install_name_tool) | grep -q \"${BUILD}\"",
      "echo \"Checking libtool resolves to a path containing ${BUILD}\"",
      "readlink $(which libtool) | grep -q \"${BUILD}\"",
      "echo \"Checking lipo resolves to a path containing ${BUILD}\"",
      "readlink $(which lipo) | grep -q \"${BUILD}\"",
      "echo \"Checking nmedit resolves to a path containing ${BUILD}\"",
      "readlink $(which nmedit) | grep -q \"${BUILD}\"",
      "echo \"Checking otool resolves to a path containing ${BUILD}\"",
      "readlink $(which otool) | grep -q \"${BUILD}\"",
      "echo \"Checking pagestuff resolves to a path containing ${BUILD}\"",
      "readlink $(which pagestuff) | grep -q \"${BUILD}\"",
      "echo \"Checking ranlib resolves to a path containing ${BUILD}\"",
      "readlink $(which ranlib) | grep -q \"${BUILD}\"",
      "echo \"Checking redo_prebinding resolves to a path containing ${BUILD}\"",
      "readlink $(which redo_prebinding) | grep -q \"${BUILD}\"",
      "echo \"Checking seg_addr_table resolves to a path containing ${BUILD}\"",
      "readlink $(which seg_addr_table) | grep -q \"${BUILD}\"",
      "echo \"Checking seg_hack resolves to a path containing ${BUILD}\"",
      "readlink $(which seg_hack) | grep -q \"${BUILD}\"",
      "echo \"Checking segedit resolves to a path containing ${BUILD}\"",
      "readlink $(which segedit) | grep -q \"${BUILD}\"",
      "echo \"Checking ar resolves to a path containing ${BUILD}\"",
      "readlink $(which ar) | grep -q \"${BUILD}\"",
      "echo \"Checking as resolves to a path containing ${BUILD}\"",
      "readlink $(which as) | grep -q \"${BUILD}\"",
      "echo \"Checking ld resolves to a path containing ${BUILD}\"",
      "readlink $(which ld) | grep -q \"${BUILD}\"",
      "echo \"Checking nm resolves to a path containing ${BUILD}\"",
      "readlink $(which nm) | grep -q \"${BUILD}\"",
      "echo \"Checking size resolves to a path containing ${BUILD}\"",
      "readlink $(which size) | grep -q \"${BUILD}\"",
      "echo \"Checking strings resolves to a path containing ${BUILD}\"",
      "readlink $(which strings) | grep -q \"${BUILD}\"",
      "echo \"Checking strip resolves to a path containing ${BUILD}\"",
      "readlink $(which strip) | grep -q \"${BUILD}\"",
      "echo \"Checking checksyms resolves to a path containing ${BUILD}\"",
      "readlink $(which checksyms) | grep -q \"${BUILD}\"",
      "echo \"Checking codesign_allocate resolves to a path containing ${BUILD}\"",
      "readlink $(which codesign_allocate) | grep -q \"${BUILD}\"",
      "echo \"Checking indr resolves to a path containing ${BUILD}\"",
      "readlink $(which indr) | grep -q \"${BUILD}\"",
      "echo \"Checking install_name_tool resolves to a path containing ${BUILD}\"",
      "readlink $(which install_name_tool) | grep -q \"${BUILD}\"",
      "echo \"Checking libtool resolves to a path containing ${BUILD}\"",
      "readlink $(which libtool) | grep -q \"${BUILD}\"",
      "echo \"Checking lipo resolves to a path containing ${BUILD}\"",
      "readlink $(which lipo) | grep -q \"${BUILD}\"",
      "echo \"Checking nmedit resolves to a path containing ${BUILD}\"",
      "readlink $(which nmedit) | grep -q \"${BUILD}\"",
      "echo \"Checking otool resolves to a path containing ${BUILD}\"",
      "readlink $(which otool) | grep -q \"${BUILD}\"",
      "echo \"Checking pagestuff resolves to a path containing ${BUILD}\"",
      "readlink $(which pagestuff) | grep -q \"${BUILD}\"",
      "echo \"Checking ranlib resolves to a path containing ${BUILD}\"",
      "readlink $(which ranlib) | grep -q \"${BUILD}\"",
      "echo \"Checking redo_prebinding resolves to a path containing ${BUILD}\"",
      "readlink $(which redo_prebinding) | grep -q \"${BUILD}\"",
      "echo \"Checking seg_addr_table resolves to a path containing ${BUILD}\"",
      "readlink $(which seg_addr_table) | grep -q \"${BUILD}\"",
      "echo \"Checking seg_hack resolves to a path containing ${BUILD}\"",
      "readlink $(which seg_hack) | grep -q \"${BUILD}\"",
      "echo \"Checking segedit resolves to a path containing ${BUILD}\"",
      "readlink $(which segedit) | grep -q \"${BUILD}\"",
      "echo \"Checking ar resolves to a path containing ${BUILD}\"",
      "readlink $(which ar) | grep -q \"${BUILD}\"",
      "echo \"Checking as resolves to a path containing ${BUILD}\"",
      "readlink $(which as) | grep -q \"${BUILD}\"",
      "echo \"Checking ld resolves to a path containing ${BUILD}\"",
      "readlink $(which ld) | grep -q \"${BUILD}\"",
      "echo \"Checking nm resolves to a path containing ${BUILD}\"",
      "readlink $(which nm) | grep -q \"${BUILD}\"",
      "echo \"Checking size resolves to a path containing ${BUILD}\"",
      "readlink $(which size) | grep -q \"${BUILD}\"",
      "echo \"Checking strings resolves to a path containing ${BUILD}\"",
      "readlink $(which strings) | grep -q \"${BUILD}\"",
      "echo \"Checking strip resolves to a path containing ${BUILD}\"",
      "readlink $(which strip) | grep -q \"${BUILD}\"",
      "echo \"Checking checksyms resolves to a path containing ${BUILD}\"",
      "readlink $(which checksyms) | grep -q \"${BUILD}\"",
      "echo \"Checking codesign_allocate resolves to a path containing ${BUILD}\"",
      "readlink $(which codesign_allocate) | grep -q \"${BUILD}\"",
      "echo \"Checking indr resolves to a path containing ${BUILD}\"",
      "readlink $(which indr) | grep -q \"${BUILD}\"",
      "echo \"Checking install_name_tool resolves to a path containing ${BUILD}\"",
      "readlink $(which install_name_tool) | grep -q \"${BUILD}\"",
      "echo \"Checking libtool resolves to a path containing ${BUILD}\"",
      "readlink $(which libtool) | grep -q \"${BUILD}\"",
      "echo \"Checking lipo resolves to a path containing ${BUILD}\"",
      "readlink $(which lipo) | grep -q \"${BUILD}\"",
      "echo \"Checking nmedit resolves to a path containing ${BUILD}\"",
      "readlink $(which nmedit) | grep -q \"${BUILD}\"",
      "echo \"Checking otool resolves to a path containing ${BUILD}\"",
      "readlink $(which otool) | grep -q \"${BUILD}\"",
      "echo \"Checking pagestuff resolves to a path containing ${BUILD}\"",
      "readlink $(which pagestuff) | grep -q \"${BUILD}\"",
      "echo \"Checking ranlib resolves to a path containing ${BUILD}\"",
      "readlink $(which ranlib) | grep -q \"${BUILD}\"",
      "echo \"Checking redo_prebinding resolves to a path containing ${BUILD}\"",
      "readlink $(which redo_prebinding) | grep -q \"${BUILD}\"",
      "echo \"Checking seg_addr_table resolves to a path containing ${BUILD}\"",
      "readlink $(which seg_addr_table) | grep -q \"${BUILD}\"",
      "echo \"Checking seg_hack resolves to a path containing ${BUILD}\"",
      "readlink $(which seg_hack) | grep -q \"${BUILD}\"",
      "echo \"Checking segedit resolves to a path containing ${BUILD}\"",
      "readlink $(which segedit) | grep -q \"${BUILD}\"",
      "echo \"Checking ar resolves to a path containing ${BUILD}\"",
      "readlink $(which ar) | grep -q \"${BUILD}\"",
      "echo \"Checking as resolves to a path containing ${BUILD}\"",
      "readlink $(which as) | grep -q \"${BUILD}\"",
      "echo \"Checking ld resolves to a path containing ${BUILD}\"",
      "readlink $(which ld) | grep -q \"${BUILD}\"",
      "echo \"Checking nm resolves to a path containing ${BUILD}\"",
      "readlink $(which nm) | grep -q \"${BUILD}\"",
      "echo \"Checking size resolves to a path containing ${BUILD}\"",
      "readlink $(which size) | grep -q \"${BUILD}\"",
      "echo \"Checking strings resolves to a path containing ${BUILD}\"",
      "readlink $(which strings) | grep -q \"${BUILD}\"",
      "echo \"Checking strip resolves to a path containing ${BUILD}\"",
      "readlink $(which strip) | grep -q \"${BUILD}\"",
      "echo \"Checking checksyms resolves to a path containing ${BUILD}\"",
      "readlink $(which checksyms) | grep -q \"${BUILD}\"",
      "echo \"Checking codesign_allocate resolves to a path containing ${BUILD}\"",
      "readlink $(which codesign_allocate) | grep -q \"${BUILD}\"",
      "echo \"Checking indr resolves to a path containing ${BUILD}\"",
      "readlink $(which indr) | grep -q \"${BUILD}\"",
      "echo \"Checking install_name_tool resolves to a path containing ${BUILD}\"",
      "readlink $(which install_name_tool) | grep -q \"${BUILD}\"",
      "echo \"Checking libtool resolves to a path containing ${BUILD}\"",
      "readlink $(which libtool) | grep -q \"${BUILD}\"",
      "echo \"Checking lipo resolves to a path containing ${BUILD}\"",
      "readlink $(which lipo) | grep -q \"${BUILD}\"",
      "echo \"Checking nmedit resolves to a path containing ${BUILD}\"",
      "readlink $(which nmedit) | grep -q \"${BUILD}\"",
      "echo \"Checking otool resolves to a path containing ${BUILD}\"",
      "readlink $(which otool) | grep -q \"${BUILD}\"",
      "echo \"Checking pagestuff resolves to a path containing ${BUILD}\"",
      "readlink $(which pagestuff) | grep -q \"${BUILD}\"",
      "echo \"Checking ranlib resolves to a path containing ${BUILD}\"",
      "readlink $(which ranlib) | grep -q \"${BUILD}\"",
      "echo \"Checking redo_prebinding resolves to a path containing ${BUILD}\"",
      "readlink $(which redo_prebinding) | grep -q \"${BUILD}\"",
      "echo \"Checking seg_addr_table resolves to a path containing ${BUILD}\"",
      "readlink $(which seg_addr_table) | grep -q \"${BUILD}\"",
      "echo \"Checking seg_hack resolves to a path containing ${BUILD}\"",
      "readlink $(which seg_hack) | grep -q \"${BUILD}\"",
      "echo \"Checking segedit resolves to a path containing ${BUILD}\"",
      "readlink $(which segedit) | grep -q \"${BUILD}\"",
      "echo \"Checking ar resolves to a path containing ${BUILD}\"",
      "readlink $(which ar) | grep -q \"${BUILD}\"",
      "echo \"Checking as resolves to a path containing ${BUILD}\"",
      "readlink $(which as) | grep -q \"${BUILD}\"",
      "echo \"Checking ld resolves to a path containing ${BUILD}\"",
      "readlink $(which ld) | grep -q \"${BUILD}\"",
      "echo \"Checking nm resolves to a path containing ${BUILD}\"",
      "readlink $(which nm) | grep -q \"${BUILD}\"",
      "echo \"Checking size resolves to a path containing ${BUILD}\"",
      "readlink $(which size) | grep -q \"${BUILD}\"",
      "echo \"Checking strings resolves to a path containing ${BUILD}\"",
      "readlink $(which strings) | grep -q \"${BUILD}\"",
      "echo \"Checking strip resolves to a path containing ${BUILD}\"",
      "readlink $(which strip) | grep -q \"${BUILD}\"",
      "echo \"Checking checksyms resolves to a path containing ${BUILD}\"",
      "readlink $(which checksyms) | grep -q \"${BUILD}\"",
      "echo \"Checking codesign_allocate resolves to a path containing ${BUILD}\"",
      "readlink $(which codesign_allocate) | grep -q \"${BUILD}\"",
      "echo \"Checking indr resolves to a path containing ${BUILD}\"",
      "readlink $(which indr) | grep -q \"${BUILD}\"",
      "echo \"Checking install_name_tool resolves to a path containing ${BUILD}\"",
      "readlink $(which install_name_tool) | grep -q \"${BUILD}\"",
      "echo \"Checking libtool resolves to a path containing ${BUILD}\"",
      "readlink $(which libtool) | grep -q \"${BUILD}\"",
      "echo \"Checking lipo resolves to a path containing ${BUILD}\"",
      "readlink $(which lipo) | grep -q \"${BUILD}\"",
      "echo \"Checking nmedit resolves to a path containing ${BUILD}\"",
      "readlink $(which nmedit) | grep -q \"${BUILD}\"",
      "echo \"Checking otool resolves to a path containing ${BUILD}\"",
      "readlink $(which otool) | grep -q \"${BUILD}\"",
      "echo \"Checking pagestuff resolves to a path containing ${BUILD}\"",
      "readlink $(which pagestuff) | grep -q \"${BUILD}\"",
      "echo \"Checking ranlib resolves to a path containing ${BUILD}\"",
      "readlink $(which ranlib) | grep -q \"${BUILD}\"",
      "echo \"Checking redo_prebinding resolves to a path containing ${BUILD}\"",
      "readlink $(which redo_prebinding) | grep -q \"${BUILD}\"",
      "echo \"Checking seg_addr_table resolves to a path containing ${BUILD}\"",
      "readlink $(which seg_addr_table) | grep -q \"${BUILD}\"",
      "echo \"Checking seg_hack resolves to a path containing ${BUILD}\"",
      "readlink $(which seg_hack) | grep -q \"${BUILD}\"",
      "echo \"Checking segedit resolves to a path containing ${BUILD}\"",
      "readlink $(which segedit) | grep -q \"${BUILD}\"",
      "echo \"Checking ar resolves to a path containing ${BUILD}\"",
      "readlink $(which ar) | grep -q \"${BUILD}\"",
      "echo \"Checking as resolves to a path containing ${BUILD}\"",
      "readlink $(which as) | grep -q \"${BUILD}\"",
      "echo \"Checking ld resolves to a path containing ${BUILD}\"",
      "readlink $(which ld) | grep -q \"${BUILD}\"",
      "echo \"Checking nm resolves to a path containing ${BUILD}\"",
      "readlink $(which nm) | grep -q \"${BUILD}\"",
      "echo \"Checking size resolves to a path containing ${BUILD}\"",
      "readlink $(which size) | grep -q \"${BUILD}\"",
      "echo \"Checking strings resolves to a path containing ${BUILD}\"",
      "readlink $(which strings) | grep -q \"${BUILD}\"",
      "echo \"Checking strip resolves to a path containing ${BUILD}\"",
      "readlink $(which strip) | grep -q \"${BUILD}\"",
      "echo \"Checking checksyms resolves to a path containing ${BUILD}\"",
      "readlink $(which checksyms) | grep -q \"${BUILD}\"",
      "echo \"Checking codesign_allocate resolves to a path containing ${BUILD}\"",
      "readlink $(which codesign_allocate) | grep -q \"${BUILD}\"",
      "echo \"Checking indr resolves to a path containing ${BUILD}\"",
      "readlink $(which indr) | grep -q \"${BUILD}\"",
      "echo \"Checking install_name_tool resolves to a path containing ${BUILD}\"",
      "readlink $(which install_name_tool) | grep -q \"${BUILD}\"",
      "echo \"Checking libtool resolves to a path containing ${BUILD}\"",
      "readlink $(which libtool) | grep -q \"${BUILD}\"",
      "echo \"Checking lipo resolves to a path containing ${BUILD}\"",
      "readlink $(which lipo) | grep -q \"${BUILD}\"",
      "echo \"Checking nmedit resolves to a path containing ${BUILD}\"",
      "readlink $(which nmedit) | grep -q \"${BUILD}\"",
      "echo \"Checking otool resolves to a path containing ${BUILD}\"",
      "readlink $(which otool) | grep -q \"${BUILD}\"",
      "echo \"Checking pagestuff resolves to a path containing ${BUILD}\"",
      "readlink $(which pagestuff) | grep -q \"${BUILD}\"",
      "echo \"Checking ranlib resolves to a path containing ${BUILD}\"",
      "readlink $(which ranlib) | grep -q \"${BUILD}\"",
      "echo \"Checking redo_prebinding resolves to a path containing ${BUILD}\"",
      "readlink $(which redo_prebinding) | grep -q \"${BUILD}\"",
      "echo \"Checking seg_addr_table resolves to a path containing ${BUILD}\"",
      "readlink $(which seg_addr_table) | grep -q \"${BUILD}\"",
      "echo \"Checking seg_hack resolves to a path containing ${BUILD}\"",
      "readlink $(which seg_hack) | grep -q \"${BUILD}\"",
      "echo \"Checking segedit resolves to a path containing ${BUILD}\"",
      "readlink $(which segedit) | grep -q \"${BUILD}\"",
      "echo \"Checking ar resolves to a path containing ${BUILD}\"",
      "readlink $(which ar) | grep -q \"${BUILD}\"",
      "echo \"Checking as resolves to a path containing ${BUILD}\"",
      "readlink $(which as) | grep -q \"${BUILD}\"",
      "echo \"Checking ld resolves to a path containing ${BUILD}\"",
      "readlink $(which ld) | grep -q \"${BUILD}\"",
      "echo \"Checking nm resolves to a path containing ${BUILD}\"",
      "readlink $(which nm) | grep -q \"${BUILD}\"",
      "echo \"Checking size resolves to a path containing ${BUILD}\"",
      "readlink $(which size) | grep -q \"${BUILD}\"",
      "echo \"Checking strings resolves to a path containing ${BUILD}\"",
      "readlink $(which strings) | grep -q \"${BUILD}\"",
      "echo \"Checking strip resolves to a path containing ${BUILD}\"",
      "readlink $(which strip) | grep -q \"${BUILD}\"",
      "echo \"Checking checksyms resolves to a path containing ${BUILD}\"",
      "readlink $(which checksyms) | grep -q \"${BUILD}\"",
      "echo \"Checking codesign_allocate resolves to a path containing ${BUILD}\"",
      "readlink $(which codesign_allocate) | grep -q \"${BUILD}\"",
      "echo \"Checking indr resolves to a path containing ${BUILD}\"",
      "readlink $(which indr) | grep -q \"${BUILD}\"",
      "echo \"Checking install_name_tool resolves to a path containing ${BUILD}\"",
      "readlink $(which install_name_tool) | grep -q \"${BUILD}\"",
      "echo \"Checking libtool resolves to a path containing ${BUILD}\"",
      "readlink $(which libtool) | grep -q \"${BUILD}\"",
      "echo \"Checking lipo resolves to a path containing ${BUILD}\"",
      "readlink $(which lipo) | grep -q \"${BUILD}\"",
      "echo \"Checking nmedit resolves to a path containing ${BUILD}\"",
      "readlink $(which nmedit) | grep -q \"${BUILD}\"",
      "echo \"Checking otool resolves to a path containing ${BUILD}\"",
      "readlink $(which otool) | grep -q \"${BUILD}\"",
      "echo \"Checking pagestuff resolves to a path containing ${BUILD}\"",
      "readlink $(which pagestuff) | grep -q \"${BUILD}\"",
      "echo \"Checking ranlib resolves to a path containing ${BUILD}\"",
      "readlink $(which ranlib) | grep -q \"${BUILD}\"",
      "echo \"Checking redo_prebinding resolves to a path containing ${BUILD}\"",
      "readlink $(which redo_prebinding) | grep -q \"${BUILD}\"",
      "echo \"Checking seg_addr_table resolves to a path containing ${BUILD}\"",
      "readlink $(which seg_addr_table) | grep -q \"${BUILD}\"",
      "echo \"Checking seg_hack resolves to a path containing ${BUILD}\"",
      "readlink $(which seg_hack) | grep -q \"${BUILD}\"",
      "echo \"Checking segedit resolves to a path containing ${BUILD}\"",
      "readlink $(which segedit) | grep -q \"${BUILD}\"",
      "echo \"Checking ar resolves to a path containing ${BUILD}\"",
      "readlink $(which ar) | grep -q \"${BUILD}\"",
      "echo \"Checking as resolves to a path containing ${BUILD}\"",
      "readlink $(which as) | grep -q \"${BUILD}\"",
      "echo \"Checking ld resolves to a path containing ${BUILD}\"",
      "readlink $(which ld) | grep -q \"${BUILD}\"",
      "echo \"Checking nm resolves to a path containing ${BUILD}\"",
      "readlink $(which nm) | grep -q \"${BUILD}\"",
      "echo \"Checking size resolves to a path containing ${BUILD}\"",
      "readlink $(which size) | grep -q \"${BUILD}\"",
      "echo \"Checking strings resolves to a path containing ${BUILD}\"",
      "readlink $(which strings) | grep -q \"${BUILD}\"",
      "echo \"Checking strip resolves to a path containing ${BUILD}\"",
      "readlink $(which strip) | grep -q \"${BUILD}\"",
      "echo \"Checking checksyms resolves to a path containing ${BUILD}\"",
      "readlink $(which checksyms) | grep -q \"${BUILD}\"",
      "echo \"Checking codesign_allocate resolves to a path containing ${BUILD}\"",
      "readlink $(which codesign_allocate) | grep -q \"${BUILD}\"",
      "echo \"Checking indr resolves to a path containing ${BUILD}\"",
      "readlink $(which indr) | grep -q \"${BUILD}\"",
      "echo \"Checking install_name_tool resolves to a path containing ${BUILD}\"",
      "readlink $(which install_name_tool) | grep -q \"${BUILD}\"",
      "echo \"Checking libtool resolves to a path containing ${BUILD}\"",
      "readlink $(which libtool) | grep -q \"${BUILD}\"",
      "echo \"Checking lipo resolves to a path containing ${BUILD}\"",
      "readlink $(which lipo) | grep -q \"${BUILD}\"",
      "echo \"Checking nmedit resolves to a path containing ${BUILD}\"",
      "readlink $(which nmedit) | grep -q \"${BUILD}\"",
      "echo \"Checking otool resolves to a path containing ${BUILD}\"",
      "readlink $(which otool) | grep -q \"${BUILD}\"",
      "echo \"Checking pagestuff resolves to a path containing ${BUILD}\"",
      "readlink $(which pagestuff) | grep -q \"${BUILD}\"",
      "echo \"Checking ranlib resolves to a path containing ${BUILD}\"",
      "readlink $(which ranlib) | grep -q \"${BUILD}\"",
      "echo \"Checking redo_prebinding resolves to a path containing ${BUILD}\"",
      "readlink $(which redo_prebinding) | grep -q \"${BUILD}\"",
      "echo \"Checking seg_addr_table resolves to a path containing ${BUILD}\"",
      "readlink $(which seg_addr_table) | grep -q \"${BUILD}\"",
      "echo \"Checking seg_hack resolves to a path containing ${BUILD}\"",
      "readlink $(which seg_hack) | grep -q \"${BUILD}\"",
      "echo \"Checking segedit resolves to a path containing ${BUILD}\"",
      "readlink $(which segedit) | grep -q \"${BUILD}\"",
      "echo \"Checking ar resolves to a path containing ${BUILD}\"",
      "readlink $(which ar) | grep -q \"${BUILD}\"",
      "echo \"Checking as resolves to a path containing ${BUILD}\"",
      "readlink $(which as) | grep -q \"${BUILD}\"",
      "echo \"Checking ld resolves to a path containing ${BUILD}\"",
      "readlink $(which ld) | grep -q \"${BUILD}\"",
      "echo \"Checking nm resolves to a path containing ${BUILD}\"",
      "readlink $(which nm) | grep -q \"${BUILD}\"",
      "echo \"Checking size resolves to a path containing ${BUILD}\"",
      "readlink $(which size) | grep -q \"${BUILD}\"",
      "echo \"Checking strings resolves to a path containing ${BUILD}\"",
      "readlink $(which strings) | grep -q \"${BUILD}\"",
      "echo \"Checking strip resolves to a path containing ${BUILD}\"",
      "readlink $(which strip) | grep -q \"${BUILD}\"",
      "echo \"Checking checksyms resolves to a path containing ${BUILD}\"",
      "readlink $(which checksyms) | grep -q \"${BUILD}\"",
      "echo \"Checking codesign_allocate resolves to a path containing ${BUILD}\"",
      "readlink $(which codesign_allocate) | grep -q \"${BUILD}\"",
      "echo \"Checking indr resolves to a path containing ${BUILD}\"",
      "readlink $(which indr) | grep -q \"${BUILD}\"",
      "echo \"Checking install_name_tool resolves to a path containing ${BUILD}\"",
      "readlink $(which install_name_tool) | grep -q \"${BUILD}\"",
      "echo \"Checking libtool resolves to a path containing ${BUILD}\"",
      "readlink $(which libtool) | grep -q \"${BUILD}\"",
      "echo \"Checking lipo resolves to a path containing ${BUILD}\"",
      "readlink $(which lipo) | grep -q \"${BUILD}\"",
      "echo \"Checking nmedit resolves to a path containing ${BUILD}\"",
      "readlink $(which nmedit) | grep -q \"${BUILD}\"",
      "echo \"Checking otool resolves to a path containing ${BUILD}\"",
      "readlink $(which otool) | grep -q \"${BUILD}\"",
      "echo \"Checking pagestuff resolves to a path containing ${BUILD}\"",
      "readlink $(which pagestuff) | grep -q \"${BUILD}\"",
      "echo \"Checking ranlib resolves to a path containing ${BUILD}\"",
      "readlink $(which ranlib) | grep -q \"${BUILD}\"",
      "echo \"Checking redo_prebinding resolves to a path containing ${BUILD}\"",
      "readlink $(which redo_prebinding) | grep -q \"${BUILD}\"",
      "echo \"Checking seg_addr_table resolves to a path containing ${BUILD}\"",
      "readlink $(which seg_addr_table) | grep -q \"${BUILD}\"",
      "echo \"Checking seg_hack resolves to a path containing ${BUILD}\"",
      "readlink $(which seg_hack) | grep -q \"${BUILD}\"",
      "echo \"Checking segedit resolves to a path containing ${BUILD}\"",
      "readlink $(which segedit) | grep -q \"${BUILD}\"",
      "echo \"Checking ar resolves to a path containing ${BUILD}\"",
      "readlink $(which ar) | grep -q \"${BUILD}\"",
      "echo \"Checking as resolves to a path containing ${BUILD}\"",
      "readlink $(which as) | grep -q \"${BUILD}\"",
      "echo \"Checking ld resolves to a path containing ${BUILD}\"",
      "readlink $(which ld) | grep -q \"${BUILD}\"",
      "echo \"Checking nm resolves to a path containing ${BUILD}\"",
      "readlink $(which nm) | grep -q \"${BUILD}\"",
      "echo \"Checking size resolves to a path containing ${BUILD}\"",
      "readlink $(which size) | grep -q \"${BUILD}\"",
      "echo \"Checking strings resolves to a path containing ${BUILD}\"",
      "readlink $(which strings) | grep -q \"${BUILD}\"",
      "echo \"Checking strip resolves to a path containing ${BUILD}\"",
      "readlink $(which strip) | grep -q \"${BUILD}\"",
      "echo \"Checking checksyms resolves to a path containing ${BUILD}\"",
      "readlink $(which checksyms) | grep -q \"${BUILD}\"",
      "echo \"Checking codesign_allocate resolves to a path containing ${BUILD}\"",
      "readlink $(which codesign_allocate) | grep -q \"${BUILD}\"",
      "echo \"Checking indr resolves to a path containing ${BUILD}\"",
      "readlink $(which indr) | grep -q \"${BUILD}\"",
      "echo \"Checking install_name_tool resolves to a path containing ${BUILD}\"",
      "readlink $(which install_name_tool) | grep -q \"${BUILD}\"",
      "echo \"Checking libtool resolves to a path containing ${BUILD}\"",
      "readlink $(which libtool) | grep -q \"${BUILD}\"",
      "echo \"Checking lipo resolves to a path containing ${BUILD}\"",
      "readlink $(which lipo) | grep -q \"${BUILD}\"",
      "echo \"Checking nmedit resolves to a path containing ${BUILD}\"",
      "readlink $(which nmedit) | grep -q \"${BUILD}\"",
      "echo \"Checking otool resolves to a path containing ${BUILD}\"",
      "readlink $(which otool) | grep -q \"${BUILD}\"",
      "echo \"Checking pagestuff resolves to a path containing ${BUILD}\"",
      "readlink $(which pagestuff) | grep -q \"${BUILD}\"",
      "echo \"Checking ranlib resolves to a path containing ${BUILD}\"",
      "readlink $(which ranlib) | grep -q \"${BUILD}\"",
      "echo \"Checking redo_prebinding resolves to a path containing ${BUILD}\"",
      "readlink $(which redo_prebinding) | grep -q \"${BUILD}\"",
      "echo \"Checking seg_addr_table resolves to a path containing ${BUILD}\"",
      "readlink $(which seg_addr_table) | grep -q \"${BUILD}\"",
      "echo \"Checking seg_hack resolves to a path containing ${BUILD}\"",
      "readlink $(which seg_hack) | grep -q \"${BUILD}\"",
      "echo \"Checking segedit resolves to a path containing ${BUILD}\"",
      "readlink $(which segedit) | grep -q \"${BUILD}\"",
      "echo \"Checking ar resolves to a path containing ${BUILD}\"",
      "readlink $(which ar) | grep -q \"${BUILD}\"",
      "echo \"Checking as resolves to a path containing ${BUILD}\"",
      "readlink $(which as) | grep -q \"${BUILD}\"",
      "echo \"Checking ld resolves to a path containing ${BUILD}\"",
      "readlink $(which ld) | grep -q \"${BUILD}\"",
      "echo \"Checking nm resolves to a path containing ${BUILD}\"",
      "readlink $(which nm) | grep -q \"${BUILD}\"",
      "echo \"Checking size resolves to a path containing ${BUILD}\"",
      "readlink $(which size) | grep -q \"${BUILD}\"",
      "echo \"Checking strings resolves to a path containing ${BUILD}\"",
      "readlink $(which strings) | grep -q \"${BUILD}\"",
      "echo \"Checking strip resolves to a path containing ${BUILD}\"",
      "readlink $(which strip) | grep -q \"${BUILD}\"",
      "echo \"Checking checksyms resolves to a path containing ${BUILD}\"",
      "readlink $(which checksyms) | grep -q \"${BUILD}\"",
      "echo \"Checking codesign_allocate resolves to a path containing ${BUILD}\"",
      "readlink $(which codesign_allocate) | grep -q \"${BUILD}\"",
      "echo \"Checking indr resolves to a path containing ${BUILD}\"",
      "readlink $(which indr) | grep -q \"${BUILD}\"",
      "echo \"Checking install_name_tool resolves to a path containing ${BUILD}\"",
      "readlink $(which install_name_tool) | grep -q \"${BUILD}\"",
      "echo \"Checking libtool resolves to a path containing ${BUILD}\"",
      "readlink $(which libtool) | grep -q \"${BUILD}\"",
      "echo \"Checking lipo resolves to a path containing ${BUILD}\"",
      "readlink $(which lipo) | grep -q \"${BUILD}\"",
      "echo \"Checking nmedit resolves to a path containing ${BUILD}\"",
      "readlink $(which nmedit) | grep -q \"${BUILD}\"",
      "echo \"Checking otool resolves to a path containing ${BUILD}\"",
      "readlink $(which otool) | grep -q \"${BUILD}\"",
      "echo \"Checking pagestuff resolves to a path containing ${BUILD}\"",
      "readlink $(which pagestuff) | grep -q \"${BUILD}\"",
      "echo \"Checking ranlib resolves to a path containing ${BUILD}\"",
      "readlink $(which ranlib) | grep -q \"${BUILD}\"",
      "echo \"Checking redo_prebinding resolves to a path containing ${BUILD}\"",
      "readlink $(which redo_prebinding) | grep -q \"${BUILD}\"",
      "echo \"Checking seg_addr_table resolves to a path containing ${BUILD}\"",
      "readlink $(which seg_addr_table) | grep -q \"${BUILD}\"",
      "echo \"Checking seg_hack resolves to a path containing ${BUILD}\"",
      "readlink $(which seg_hack) | grep -q \"${BUILD}\"",
      "echo \"Checking segedit resolves to a path containing ${BUILD}\"",
      "readlink $(which segedit) | grep -q \"${BUILD}\"",
      "echo \"Checking ar resolves to a path containing ${BUILD}\"",
      "readlink $(which ar) | grep -q \"${BUILD}\"",
      "echo \"Checking as resolves to a path containing ${BUILD}\"",
      "readlink $(which as) | grep -q \"${BUILD}\"",
      "echo \"Checking ld resolves to a path containing ${BUILD}\"",
      "readlink $(which ld) | grep -q \"${BUILD}\"",
      "echo \"Checking nm resolves to a path containing ${BUILD}\"",
      "readlink $(which nm) | grep -q \"${BUILD}\"",
      "echo \"Checking size resolves to a path containing ${BUILD}\"",
      "readlink $(which size) | grep -q \"${BUILD}\"",
      "echo \"Checking strings resolves to a path containing ${BUILD}\"",
      "readlink $(which strings) | grep -q \"${BUILD}\"",
      "echo \"Checking strip resolves to a path containing ${BUILD}\"",
      "readlink $(which strip) | grep -q \"${BUILD}\"",
      "echo \"Checking checksyms resolves to a path containing ${BUILD}\"",
      "readlink $(which checksyms) | grep -q \"${BUILD}\"",
      "echo \"Checking codesign_allocate resolves to a path containing ${BUILD}\"",
      "readlink $(which codesign_allocate) | grep -q \"${BUILD}\"",
      "echo \"Checking indr resolves to a path containing ${BUILD}\"",
      "readlink $(which indr) | grep -q \"${BUILD}\"",
      "echo \"Checking install_name_tool resolves to a path containing ${BUILD}\"",
      "readlink $(which install_name_tool) | grep -q \"${BUILD}\"",
      "echo \"Checking libtool resolves to a path containing ${BUILD}\"",
      "readlink $(which libtool) | grep -q \"${BUILD}\"",
      "echo \"Checking lipo resolves to a path containing ${BUILD}\"",
      "readlink $(which lipo) | grep -q \"${BUILD}\"",
      "echo \"Checking nmedit resolves to a path containing ${BUILD}\"",
      "readlink $(which nmedit) | grep -q \"${BUILD}\"",
      "echo \"Checking otool resolves to a path containing ${BUILD}\"",
      "readlink $(which otool) | grep -q \"${BUILD}\"",
      "echo \"Checking pagestuff resolves to a path containing ${BUILD}\"",
      "readlink $(which pagestuff) | grep -q \"${BUILD}\"",
      "echo \"Checking ranlib resolves to a path containing ${BUILD}\"",
      "readlink $(which ranlib) | grep -q \"${BUILD}\"",
      "echo \"Checking redo_prebinding resolves to a path containing ${BUILD}\"",
      "readlink $(which redo_prebinding) | grep -q \"${BUILD}\"",
      "echo \"Checking seg_addr_table resolves to a path containing ${BUILD}\"",
      "readlink $(which seg_addr_table) | grep -q \"${BUILD}\"",
      "echo \"Checking seg_hack resolves to a path containing ${BUILD}\"",
      "readlink $(which seg_hack) | grep -q \"${BUILD}\"",
      "echo \"Checking segedit resolves to a path containing ${BUILD}\"",
      "readlink $(which segedit) | grep -q \"${BUILD}\"",
      "echo \"Checking ar resolves to a path containing ${BUILD}\"",
      "readlink $(which ar) | grep -q \"${BUILD}\"",
      "echo \"Checking as resolves to a path containing ${BUILD}\"",
      "readlink $(which as) | grep -q \"${BUILD}\"",
      "echo \"Checking ld resolves to a path containing ${BUILD}\"",
      "readlink $(which ld) | grep -q \"${BUILD}\"",
      "echo \"Checking nm resolves to a path containing ${BUILD}\"",
      "readlink $(which nm) | grep -q \"${BUILD}\"",
      "echo \"Checking size resolves to a path containing ${BUILD}\"",
      "readlink $(which size) | grep -q \"${BUILD}\"",
      "echo \"Checking strings resolves to a path containing ${BUILD}\"",
      "readlink $(which strings) | grep -q \"${BUILD}\"",
      "echo \"Checking strip resolves to a path containing ${BUILD}\"",
      "readlink $(which strip) | grep -q \"${BUILD}\"",
      "echo \"Checking checksyms resolves to a path containing ${BUILD}\"",
      "readlink $(which checksyms) | grep -q \"${BUILD}\"",
      "echo \"Checking codesign_allocate resolves to a path containing ${BUILD}\"",
      "readlink $(which codesign_allocate) | grep -q \"${BUILD}\"",
      "echo \"Checking indr resolves to a path containing ${BUILD}\"",
      "readlink $(which indr) | grep -q \"${BUILD}\"",
      "echo \"Checking install_name_tool resolves to a path containing ${BUILD}\"",
      "readlink $(which install_name_tool) | grep -q \"${BUILD}\"",
      "echo \"Checking libtool resolves to a path containing ${BUILD}\"",
      "readlink $(which libtool) | grep -q \"${BUILD}\"",
      "echo \"Checking lipo resolves to a path containing ${BUILD}\"",
      "readlink $(which lipo) | grep -q \"${BUILD}\"",
      "echo \"Checking nmedit resolves to a path containing ${BUILD}\"",
      "readlink $(which nmedit) | grep -q \"${BUILD}\"",
      "echo \"Checking otool resolves to a path containing ${BUILD}\"",
      "readlink $(which otool) | grep -q \"${BUILD}\"",
      "echo \"Checking pagestuff resolves to a path containing ${BUILD}\"",
      "readlink $(which pagestuff) | grep -q \"${BUILD}\"",
      "echo \"Checking ranlib resolves to a path containing ${BUILD}\"",
      "readlink $(which ranlib) | grep -q \"${BUILD}\"",
      "echo \"Checking redo_prebinding resolves to a path containing ${BUILD}\"",
      "readlink $(which redo_prebinding) | grep -q \"${BUILD}\"",
      "echo \"Checking seg_addr_table resolves to a path containing ${BUILD}\"",
      "readlink $(which seg_addr_table) | grep -q \"${BUILD}\"",
      "echo \"Checking seg_hack resolves to a path containing ${BUILD}\"",
      "readlink $(which seg_hack) | grep -q \"${BUILD}\"",
      "echo \"Checking segedit resolves to a path containing ${BUILD}\"",
      "readlink $(which segedit) | grep -q \"${BUILD}\"",
      "echo \"Checking ar resolves to a path containing ${BUILD}\"",
      "readlink $(which ar) | grep -q \"${BUILD}\"",
      "echo \"Checking as resolves to a path containing ${BUILD}\"",
      "readlink $(which as) | grep -q \"${BUILD}\"",
      "echo \"Checking ld resolves to a path containing ${BUILD}\"",
      "readlink $(which ld) | grep -q \"${BUILD}\"",
      "echo \"Checking nm resolves to a path containing ${BUILD}\"",
      "readlink $(which nm) | grep -q \"${BUILD}\"",
      "echo \"Checking size resolves to a path containing ${BUILD}\"",
      "readlink $(which size) | grep -q \"${BUILD}\"",
      "echo \"Checking strings resolves to a path containing ${BUILD}\"",
      "readlink $(which strings) | grep -q \"${BUILD}\"",
      "echo \"Checking strip resolves to a path containing ${BUILD}\"",
      "readlink $(which strip) | grep -q \"${BUILD}\"",
      "echo \"Checking checksyms resolves to a path containing ${BUILD}\"",
      "readlink $(which checksyms) | grep -q \"${BUILD}\"",
      "echo \"Checking codesign_allocate resolves to a path containing ${BUILD}\"",
      "readlink $(which codesign_allocate) | grep -q \"${BUILD}\"",
      "echo \"Checking indr resolves to a path containing ${BUILD}\"",
      "readlink $(which indr) | grep -q \"${BUILD}\"",
      "echo \"Checking install_name_tool resolves to a path containing ${BUILD}\"",
      "readlink $(which install_name_tool) | grep -q \"${BUILD}\"",
      "echo \"Checking libtool resolves to a path containing ${BUILD}\"",
      "readlink $(which libtool) | grep -q \"${BUILD}\"",
      "echo \"Checking lipo resolves to a path containing ${BUILD}\"",
      "readlink $(which lipo) | grep -q \"${BUILD}\"",
      "echo \"Checking nmedit resolves to a path containing ${BUILD}\"",
      "readlink $(which nmedit) | grep -q \"${BUILD}\"",
      "echo \"Checking otool resolves to a path containing ${BUILD}\"",
      "readlink $(which otool) | grep -q \"${BUILD}\"",
      "echo \"Checking pagestuff resolves to a path containing ${BUILD}\"",
      "readlink $(which pagestuff) | grep -q \"${BUILD}\"",
      "echo \"Checking ranlib resolves to a path containing ${BUILD}\"",
      "readlink $(which ranlib) | grep -q \"${BUILD}\"",
      "echo \"Checking redo_prebinding resolves to a path containing ${BUILD}\"",
      "readlink $(which redo_prebinding) | grep -q \"${BUILD}\"",
      "echo \"Checking seg_addr_table resolves to a path containing ${BUILD}\"",
      "readlink $(which seg_addr_table) | grep -q \"${BUILD}\"",
      "echo \"Checking seg_hack resolves to a path containing ${BUILD}\"",
      "readlink $(which seg_hack) | grep -q \"${BUILD}\"",
      "echo \"Checking segedit resolves to a path containing ${BUILD}\"",
      "readlink $(which segedit) | grep -q \"${BUILD}\""
     ]
    }
   },
   {
    "about":{
     "description":"This package is a generic way to obtain the C compiler for your system\nthat conda-forge used to compile its ecosystem.  This compiler is,\ntherefore, guaranteed to be ABI compatible with the conda packages\nyou have installed.\n\nThis compiler metapackage is a convenience ONLY for users.\nDo NOT use this package as a build or host dependency in other\nrecipes.  Use the Jinja template function compiler('c') instead.\n",
     "home":"https://conda-forge.org",
     "license":"BSD",
     "summary":"A metapackage to obtain a C compiler"
    },
    "name":"c-compiler",
    "requirements":{
     "host":[
      "c_compiler_stub",
      "binutils-meta"
     ],
     "run":[
      "c_compiler_stub",
      "binutils-meta"
     ]
    },
    "script":"build-symlinks.sh",
    "test":{
     "commands":[
      "$CC --help"
     ]
    }
   },
   {
    "about":{
     "description":"This package is a generic way to obtain the C++ compiler for your system\nthat conda-forge used to compile its ecosystem.  This compiler is,\ntherefore, guaranteed to be ABI compatible with the conda packages\nyou have installed.\n\nThis compiler metapackage is a convenience ONLY for users.\nDo NOT use this package as a build or host dependency in other\nrecipes.  Use the Jinja template function compiler('cxx') instead.\n",
     "home":"https://conda-forge.org",
     "license":"BSD",
     "summary":"A metapackage to obtain a C++ compiler"
    },
    "name":"cxx-compiler",
    "requirements":{
     "host":[
      "cxx_compiler_stub",
      "binutils-meta"
     ],
     "run":[
      "cxx_compiler_stub",
      "binutils-meta"
     ]
    },
    "script":"build-symlinks.sh",
    "test":{
     "commands":[
      "$CXX --help"
     ]
    }
   },
   {
    "about":{
     "description":"This package is a generic way to obtain the Fortran compiler for your\nsystem that conda-forge used to compile its ecosystem.  This compiler\nis, therefore, guaranteed to be ABI compatible with the conda packages\nyou have installed.\n\nThis compiler metapackage is a convenience ONLY for users.\nDo NOT use this package as a build or host dependency in other\nrecipes.  Use the Jinja template function compiler('fortran') instead.\n",
     "home":"https://conda-forge.org",
     "license":"BSD",
     "summary":"A metapackage to obtain a Fortran compiler"
    },
    "name":"fortran-compiler",
    "requirements":{
     "host":[
      "fortran_compiler_stub",
      "binutils-meta"
     ],
     "run":[
      "fortran_compiler_stub",
      "binutils-meta"
     ]
    },
    "test":{
     "commands":[
      "$FC --help"
     ]
    }
   },
   {
    "name":"compilers",
    "requirements":{
     "run":[
      "binutils-meta",
      "c-compiler",
      "cxx-compiler",
      "fortran-compiler"
     ]
    },
    "test":{
     "commands":[
      "$CC --help",
      "$CXX --help",
      "$FC --help"
     ]
    }
   },
   {
    "about":{
     "description":"This package is a generic way to obtain binutils for your system\nthat conda-forge used to compile its ecosystem.  This compiler is,\ntherefore, guaranteed to be ABI compatible with the conda packages\nyou have installed.\n\nThis compiler metapackage is a convenience ONLY for users.\nDo NOT use this package as a build or host dependency in other\nrecipes.\n",
     "home":"https://conda-forge.org",
     "license":"BSD",
     "summary":"A metapackage to obtain binutils"
    },
    "build":null,
    "name":"binutils-meta",
    "requirements":{
     "host":[
      "binutils_"
     ],
     "run":[
      "binutils_"
     ]
    },
    "script":"build-symlinks.sh",
    "test":{
     "commands":[
      "ar --help > /dev/null",
      "echo \"Checking ar resolves to a path containing ${BUILD}\"",
      "as --help > /dev/null",
      "echo \"Checking as resolves to a path containing ${BUILD}\"",
      "ld --help > /dev/null",
      "echo \"Checking ld resolves to a path containing ${BUILD}\"",
      "nm --help > /dev/null",
      "echo \"Checking nm resolves to a path containing ${BUILD}\"",
      "size --help > /dev/null",
      "echo \"Checking size resolves to a path containing ${BUILD}\"",
      "strings --help > /dev/null",
      "echo \"Checking strings resolves to a path containing ${BUILD}\"",
      "strip --help > /dev/null",
      "echo \"Checking strip resolves to a path containing ${BUILD}\"",
      "checksyms --help > /dev/null",
      "echo \"Checking checksyms resolves to a path containing ${BUILD}\"",
      "codesign_allocate --help > /dev/null",
      "echo \"Checking codesign_allocate resolves to a path containing ${BUILD}\"",
      "indr --help > /dev/null",
      "echo \"Checking indr resolves to a path containing ${BUILD}\"",
      "install_name_tool --help > /dev/null",
      "echo \"Checking install_name_tool resolves to a path containing ${BUILD}\"",
      "libtool --help > /dev/null",
      "echo \"Checking libtool resolves to a path containing ${BUILD}\"",
      "lipo --help > /dev/null",
      "echo \"Checking lipo resolves to a path containing ${BUILD}\"",
      "nmedit --help > /dev/null",
      "echo \"Checking nmedit resolves to a path containing ${BUILD}\"",
      "otool --help > /dev/null",
      "echo \"Checking otool resolves to a path containing ${BUILD}\"",
      "pagestuff --help > /dev/null",
      "echo \"Checking pagestuff resolves to a path containing ${BUILD}\"",
      "ranlib --help > /dev/null",
      "echo \"Checking ranlib resolves to a path containing ${BUILD}\"",
      "redo_prebinding --help > /dev/null",
      "echo \"Checking redo_prebinding resolves to a path containing ${BUILD}\"",
      "seg_addr_table --help > /dev/null",
      "echo \"Checking seg_addr_table resolves to a path containing ${BUILD}\"",
      "seg_hack --help > /dev/null",
      "echo \"Checking seg_hack resolves to a path containing ${BUILD}\"",
      "segedit --help > /dev/null",
      "echo \"Checking segedit resolves to a path containing ${BUILD}\"",
      "ar --help > /dev/null",
      "echo \"Checking ar resolves to a path containing ${BUILD}\"",
      "as --help > /dev/null",
      "echo \"Checking as resolves to a path containing ${BUILD}\"",
      "ld --help > /dev/null",
      "echo \"Checking ld resolves to a path containing ${BUILD}\"",
      "nm --help > /dev/null",
      "echo \"Checking nm resolves to a path containing ${BUILD}\"",
      "size --help > /dev/null",
      "echo \"Checking size resolves to a path containing ${BUILD}\"",
      "strings --help > /dev/null",
      "echo \"Checking strings resolves to a path containing ${BUILD}\"",
      "strip --help > /dev/null",
      "echo \"Checking strip resolves to a path containing ${BUILD}\"",
      "checksyms --help > /dev/null",
      "echo \"Checking checksyms resolves to a path containing ${BUILD}\"",
      "codesign_allocate --help > /dev/null",
      "echo \"Checking codesign_allocate resolves to a path containing ${BUILD}\"",
      "indr --help > /dev/null",
      "echo \"Checking indr resolves to a path containing ${BUILD}\"",
      "install_name_tool --help > /dev/null",
      "echo \"Checking install_name_tool resolves to a path containing ${BUILD}\"",
      "libtool --help > /dev/null",
      "echo \"Checking libtool resolves to a path containing ${BUILD}\"",
      "lipo --help > /dev/null",
      "echo \"Checking lipo resolves to a path containing ${BUILD}\"",
      "nmedit --help > /dev/null",
      "echo \"Checking nmedit resolves to a path containing ${BUILD}\"",
      "otool --help > /dev/null",
      "echo \"Checking otool resolves to a path containing ${BUILD}\"",
      "pagestuff --help > /dev/null",
      "echo \"Checking pagestuff resolves to a path containing ${BUILD}\"",
      "ranlib --help > /dev/null",
      "echo \"Checking ranlib resolves to a path containing ${BUILD}\"",
      "redo_prebinding --help > /dev/null",
      "echo \"Checking redo_prebinding resolves to a path containing ${BUILD}\"",
      "seg_addr_table --help > /dev/null",
      "echo \"Checking seg_addr_table resolves to a path containing ${BUILD}\"",
      "seg_hack --help > /dev/null",
      "echo \"Checking seg_hack resolves to a path containing ${BUILD}\"",
      "segedit --help > /dev/null",
      "echo \"Checking segedit resolves to a path containing ${BUILD}\"",
      "ar --help > /dev/null",
      "echo \"Checking ar resolves to a path containing ${BUILD}\"",
      "as --help > /dev/null",
      "echo \"Checking as resolves to a path containing ${BUILD}\"",
      "ld --help > /dev/null",
      "echo \"Checking ld resolves to a path containing ${BUILD}\"",
      "nm --help > /dev/null",
      "echo \"Checking nm resolves to a path containing ${BUILD}\"",
      "size --help > /dev/null",
      "echo \"Checking size resolves to a path containing ${BUILD}\"",
      "strings --help > /dev/null",
      "echo \"Checking strings resolves to a path containing ${BUILD}\"",
      "strip --help > /dev/null",
      "echo \"Checking strip resolves to a path containing ${BUILD}\"",
      "checksyms --help > /dev/null",
      "echo \"Checking checksyms resolves to a path containing ${BUILD}\"",
      "codesign_allocate --help > /dev/null",
      "echo \"Checking codesign_allocate resolves to a path containing ${BUILD}\"",
      "indr --help > /dev/null",
      "echo \"Checking indr resolves to a path containing ${BUILD}\"",
      "install_name_tool --help > /dev/null",
      "echo \"Checking install_name_tool resolves to a path containing ${BUILD}\"",
      "libtool --help > /dev/null",
      "echo \"Checking libtool resolves to a path containing ${BUILD}\"",
      "lipo --help > /dev/null",
      "echo \"Checking lipo resolves to a path containing ${BUILD}\"",
      "nmedit --help > /dev/null",
      "echo \"Checking nmedit resolves to a path containing ${BUILD}\"",
      "otool --help > /dev/null",
      "echo \"Checking otool resolves to a path containing ${BUILD}\"",
      "pagestuff --help > /dev/null",
      "echo \"Checking pagestuff resolves to a path containing ${BUILD}\"",
      "ranlib --help > /dev/null",
      "echo \"Checking ranlib resolves to a path containing ${BUILD}\"",
      "redo_prebinding --help > /dev/null",
      "echo \"Checking redo_prebinding resolves to a path containing ${BUILD}\"",
      "seg_addr_table --help > /dev/null",
      "echo \"Checking seg_addr_table resolves to a path containing ${BUILD}\"",
      "seg_hack --help > /dev/null",
      "echo \"Checking seg_hack resolves to a path containing ${BUILD}\"",
      "segedit --help > /dev/null",
      "echo \"Checking segedit resolves to a path containing ${BUILD}\"",
      "ar --help > /dev/null",
      "echo \"Checking ar resolves to a path containing ${BUILD}\"",
      "as --help > /dev/null",
      "echo \"Checking as resolves to a path containing ${BUILD}\"",
      "ld --help > /dev/null",
      "echo \"Checking ld resolves to a path containing ${BUILD}\"",
      "nm --help > /dev/null",
      "echo \"Checking nm resolves to a path containing ${BUILD}\"",
      "size --help > /dev/null",
      "echo \"Checking size resolves to a path containing ${BUILD}\"",
      "strings --help > /dev/null",
      "echo \"Checking strings resolves to a path containing ${BUILD}\"",
      "strip --help > /dev/null",
      "echo \"Checking strip resolves to a path containing ${BUILD}\"",
      "checksyms --help > /dev/null",
      "echo \"Checking checksyms resolves to a path containing ${BUILD}\"",
      "codesign_allocate --help > /dev/null",
      "echo \"Checking codesign_allocate resolves to a path containing ${BUILD}\"",
      "indr --help > /dev/null",
      "echo \"Checking indr resolves to a path containing ${BUILD}\"",
      "install_name_tool --help > /dev/null",
      "echo \"Checking install_name_tool resolves to a path containing ${BUILD}\"",
      "libtool --help > /dev/null",
      "echo \"Checking libtool resolves to a path containing ${BUILD}\"",
      "lipo --help > /dev/null",
      "echo \"Checking lipo resolves to a path containing ${BUILD}\"",
      "nmedit --help > /dev/null",
      "echo \"Checking nmedit resolves to a path containing ${BUILD}\"",
      "otool --help > /dev/null",
      "echo \"Checking otool resolves to a path containing ${BUILD}\"",
      "pagestuff --help > /dev/null",
      "echo \"Checking pagestuff resolves to a path containing ${BUILD}\"",
      "ranlib --help > /dev/null",
      "echo \"Checking ranlib resolves to a path containing ${BUILD}\"",
      "redo_prebinding --help > /dev/null",
      "echo \"Checking redo_prebinding resolves to a path containing ${BUILD}\"",
      "seg_addr_table --help > /dev/null",
      "echo \"Checking seg_addr_table resolves to a path containing ${BUILD}\"",
      "seg_hack --help > /dev/null",
      "echo \"Checking seg_hack resolves to a path containing ${BUILD}\"",
      "segedit --help > /dev/null",
      "echo \"Checking segedit resolves to a path containing ${BUILD}\"",
      "ar --help > /dev/null",
      "echo \"Checking ar resolves to a path containing ${BUILD}\"",
      "as --help > /dev/null",
      "echo \"Checking as resolves to a path containing ${BUILD}\"",
      "ld --help > /dev/null",
      "echo \"Checking ld resolves to a path containing ${BUILD}\"",
      "nm --help > /dev/null",
      "echo \"Checking nm resolves to a path containing ${BUILD}\"",
      "size --help > /dev/null",
      "echo \"Checking size resolves to a path containing ${BUILD}\"",
      "strings --help > /dev/null",
      "echo \"Checking strings resolves to a path containing ${BUILD}\"",
      "strip --help > /dev/null",
      "echo \"Checking strip resolves to a path containing ${BUILD}\"",
      "checksyms --help > /dev/null",
      "echo \"Checking checksyms resolves to a path containing ${BUILD}\"",
      "codesign_allocate --help > /dev/null",
      "echo \"Checking codesign_allocate resolves to a path containing ${BUILD}\"",
      "indr --help > /dev/null",
      "echo \"Checking indr resolves to a path containing ${BUILD}\"",
      "install_name_tool --help > /dev/null",
      "echo \"Checking install_name_tool resolves to a path containing ${BUILD}\"",
      "libtool --help > /dev/null",
      "echo \"Checking libtool resolves to a path containing ${BUILD}\"",
      "lipo --help > /dev/null",
      "echo \"Checking lipo resolves to a path containing ${BUILD}\"",
      "nmedit --help > /dev/null",
      "echo \"Checking nmedit resolves to a path containing ${BUILD}\"",
      "otool --help > /dev/null",
      "echo \"Checking otool resolves to a path containing ${BUILD}\"",
      "pagestuff --help > /dev/null",
      "echo \"Checking pagestuff resolves to a path containing ${BUILD}\"",
      "ranlib --help > /dev/null",
      "echo \"Checking ranlib resolves to a path containing ${BUILD}\"",
      "redo_prebinding --help > /dev/null",
      "echo \"Checking redo_prebinding resolves to a path containing ${BUILD}\"",
      "seg_addr_table --help > /dev/null",
      "echo \"Checking seg_addr_table resolves to a path containing ${BUILD}\"",
      "seg_hack --help > /dev/null",
      "echo \"Checking seg_hack resolves to a path containing ${BUILD}\"",
      "segedit --help > /dev/null",
      "echo \"Checking segedit resolves to a path containing ${BUILD}\"",
      "ar --help > /dev/null",
      "echo \"Checking ar resolves to a path containing ${BUILD}\"",
      "as --help > /dev/null",
      "echo \"Checking as resolves to a path containing ${BUILD}\"",
      "ld --help > /dev/null",
      "echo \"Checking ld resolves to a path containing ${BUILD}\"",
      "nm --help > /dev/null",
      "echo \"Checking nm resolves to a path containing ${BUILD}\"",
      "size --help > /dev/null",
      "echo \"Checking size resolves to a path containing ${BUILD}\"",
      "strings --help > /dev/null",
      "echo \"Checking strings resolves to a path containing ${BUILD}\"",
      "strip --help > /dev/null",
      "echo \"Checking strip resolves to a path containing ${BUILD}\"",
      "checksyms --help > /dev/null",
      "echo \"Checking checksyms resolves to a path containing ${BUILD}\"",
      "codesign_allocate --help > /dev/null",
      "echo \"Checking codesign_allocate resolves to a path containing ${BUILD}\"",
      "indr --help > /dev/null",
      "echo \"Checking indr resolves to a path containing ${BUILD}\"",
      "install_name_tool --help > /dev/null",
      "echo \"Checking install_name_tool resolves to a path containing ${BUILD}\"",
      "libtool --help > /dev/null",
      "echo \"Checking libtool resolves to a path containing ${BUILD}\"",
      "lipo --help > /dev/null",
      "echo \"Checking lipo resolves to a path containing ${BUILD}\"",
      "nmedit --help > /dev/null",
      "echo \"Checking nmedit resolves to a path containing ${BUILD}\"",
      "otool --help > /dev/null",
      "echo \"Checking otool resolves to a path containing ${BUILD}\"",
      "pagestuff --help > /dev/null",
      "echo \"Checking pagestuff resolves to a path containing ${BUILD}\"",
      "ranlib --help > /dev/null",
      "echo \"Checking ranlib resolves to a path containing ${BUILD}\"",
      "redo_prebinding --help > /dev/null",
      "echo \"Checking redo_prebinding resolves to a path containing ${BUILD}\"",
      "seg_addr_table --help > /dev/null",
      "echo \"Checking seg_addr_table resolves to a path containing ${BUILD}\"",
      "seg_hack --help > /dev/null",
      "echo \"Checking seg_hack resolves to a path containing ${BUILD}\"",
      "segedit --help > /dev/null",
      "echo \"Checking segedit resolves to a path containing ${BUILD}\"",
      "ar --help > /dev/null",
      "echo \"Checking ar resolves to a path containing ${BUILD}\"",
      "as --help > /dev/null",
      "echo \"Checking as resolves to a path containing ${BUILD}\"",
      "ld --help > /dev/null",
      "echo \"Checking ld resolves to a path containing ${BUILD}\"",
      "nm --help > /dev/null",
      "echo \"Checking nm resolves to a path containing ${BUILD}\"",
      "size --help > /dev/null",
      "echo \"Checking size resolves to a path containing ${BUILD}\"",
      "strings --help > /dev/null",
      "echo \"Checking strings resolves to a path containing ${BUILD}\"",
      "strip --help > /dev/null",
      "echo \"Checking strip resolves to a path containing ${BUILD}\"",
      "checksyms --help > /dev/null",
      "echo \"Checking checksyms resolves to a path containing ${BUILD}\"",
      "codesign_allocate --help > /dev/null",
      "echo \"Checking codesign_allocate resolves to a path containing ${BUILD}\"",
      "indr --help > /dev/null",
      "echo \"Checking indr resolves to a path containing ${BUILD}\"",
      "install_name_tool --help > /dev/null",
      "echo \"Checking install_name_tool resolves to a path containing ${BUILD}\"",
      "libtool --help > /dev/null",
      "echo \"Checking libtool resolves to a path containing ${BUILD}\"",
      "lipo --help > /dev/null",
      "echo \"Checking lipo resolves to a path containing ${BUILD}\"",
      "nmedit --help > /dev/null",
      "echo \"Checking nmedit resolves to a path containing ${BUILD}\"",
      "otool --help > /dev/null",
      "echo \"Checking otool resolves to a path containing ${BUILD}\"",
      "pagestuff --help > /dev/null",
      "echo \"Checking pagestuff resolves to a path containing ${BUILD}\"",
      "ranlib --help > /dev/null",
      "echo \"Checking ranlib resolves to a path containing ${BUILD}\"",
      "redo_prebinding --help > /dev/null",
      "echo \"Checking redo_prebinding resolves to a path containing ${BUILD}\"",
      "seg_addr_table --help > /dev/null",
      "echo \"Checking seg_addr_table resolves to a path containing ${BUILD}\"",
      "seg_hack --help > /dev/null",
      "echo \"Checking seg_hack resolves to a path containing ${BUILD}\"",
      "segedit --help > /dev/null",
      "echo \"Checking segedit resolves to a path containing ${BUILD}\"",
      "ar --help > /dev/null",
      "echo \"Checking ar resolves to a path containing ${BUILD}\"",
      "as --help > /dev/null",
      "echo \"Checking as resolves to a path containing ${BUILD}\"",
      "ld --help > /dev/null",
      "echo \"Checking ld resolves to a path containing ${BUILD}\"",
      "nm --help > /dev/null",
      "echo \"Checking nm resolves to a path containing ${BUILD}\"",
      "size --help > /dev/null",
      "echo \"Checking size resolves to a path containing ${BUILD}\"",
      "strings --help > /dev/null",
      "echo \"Checking strings resolves to a path containing ${BUILD}\"",
      "strip --help > /dev/null",
      "echo \"Checking strip resolves to a path containing ${BUILD}\"",
      "checksyms --help > /dev/null",
      "echo \"Checking checksyms resolves to a path containing ${BUILD}\"",
      "codesign_allocate --help > /dev/null",
      "echo \"Checking codesign_allocate resolves to a path containing ${BUILD}\"",
      "indr --help > /dev/null",
      "echo \"Checking indr resolves to a path containing ${BUILD}\"",
      "install_name_tool --help > /dev/null",
      "echo \"Checking install_name_tool resolves to a path containing ${BUILD}\"",
      "libtool --help > /dev/null",
      "echo \"Checking libtool resolves to a path containing ${BUILD}\"",
      "lipo --help > /dev/null",
      "echo \"Checking lipo resolves to a path containing ${BUILD}\"",
      "nmedit --help > /dev/null",
      "echo \"Checking nmedit resolves to a path containing ${BUILD}\"",
      "otool --help > /dev/null",
      "echo \"Checking otool resolves to a path containing ${BUILD}\"",
      "pagestuff --help > /dev/null",
      "echo \"Checking pagestuff resolves to a path containing ${BUILD}\"",
      "ranlib --help > /dev/null",
      "echo \"Checking ranlib resolves to a path containing ${BUILD}\"",
      "redo_prebinding --help > /dev/null",
      "echo \"Checking redo_prebinding resolves to a path containing ${BUILD}\"",
      "seg_addr_table --help > /dev/null",
      "echo \"Checking seg_addr_table resolves to a path containing ${BUILD}\"",
      "seg_hack --help > /dev/null",
      "echo \"Checking seg_hack resolves to a path containing ${BUILD}\"",
      "segedit --help > /dev/null",
      "echo \"Checking segedit resolves to a path containing ${BUILD}\"",
      "ar --help > /dev/null",
      "echo \"Checking ar resolves to a path containing ${BUILD}\"",
      "as --help > /dev/null",
      "echo \"Checking as resolves to a path containing ${BUILD}\"",
      "ld --help > /dev/null",
      "echo \"Checking ld resolves to a path containing ${BUILD}\"",
      "nm --help > /dev/null",
      "echo \"Checking nm resolves to a path containing ${BUILD}\"",
      "size --help > /dev/null",
      "echo \"Checking size resolves to a path containing ${BUILD}\"",
      "strings --help > /dev/null",
      "echo \"Checking strings resolves to a path containing ${BUILD}\"",
      "strip --help > /dev/null",
      "echo \"Checking strip resolves to a path containing ${BUILD}\"",
      "checksyms --help > /dev/null",
      "echo \"Checking checksyms resolves to a path containing ${BUILD}\"",
      "codesign_allocate --help > /dev/null",
      "echo \"Checking codesign_allocate resolves to a path containing ${BUILD}\"",
      "indr --help > /dev/null",
      "echo \"Checking indr resolves to a path containing ${BUILD}\"",
      "install_name_tool --help > /dev/null",
      "echo \"Checking install_name_tool resolves to a path containing ${BUILD}\"",
      "libtool --help > /dev/null",
      "echo \"Checking libtool resolves to a path containing ${BUILD}\"",
      "lipo --help > /dev/null",
      "echo \"Checking lipo resolves to a path containing ${BUILD}\"",
      "nmedit --help > /dev/null",
      "echo \"Checking nmedit resolves to a path containing ${BUILD}\"",
      "otool --help > /dev/null",
      "echo \"Checking otool resolves to a path containing ${BUILD}\"",
      "pagestuff --help > /dev/null",
      "echo \"Checking pagestuff resolves to a path containing ${BUILD}\"",
      "ranlib --help > /dev/null",
      "echo \"Checking ranlib resolves to a path containing ${BUILD}\"",
      "redo_prebinding --help > /dev/null",
      "echo \"Checking redo_prebinding resolves to a path containing ${BUILD}\"",
      "seg_addr_table --help > /dev/null",
      "echo \"Checking seg_addr_table resolves to a path containing ${BUILD}\"",
      "seg_hack --help > /dev/null",
      "echo \"Checking seg_hack resolves to a path containing ${BUILD}\"",
      "segedit --help > /dev/null",
      "echo \"Checking segedit resolves to a path containing ${BUILD}\"",
      "ar --help > /dev/null",
      "echo \"Checking ar resolves to a path containing ${BUILD}\"",
      "as --help > /dev/null",
      "echo \"Checking as resolves to a path containing ${BUILD}\"",
      "ld --help > /dev/null",
      "echo \"Checking ld resolves to a path containing ${BUILD}\"",
      "nm --help > /dev/null",
      "echo \"Checking nm resolves to a path containing ${BUILD}\"",
      "size --help > /dev/null",
      "echo \"Checking size resolves to a path containing ${BUILD}\"",
      "strings --help > /dev/null",
      "echo \"Checking strings resolves to a path containing ${BUILD}\"",
      "strip --help > /dev/null",
      "echo \"Checking strip resolves to a path containing ${BUILD}\"",
      "checksyms --help > /dev/null",
      "echo \"Checking checksyms resolves to a path containing ${BUILD}\"",
      "codesign_allocate --help > /dev/null",
      "echo \"Checking codesign_allocate resolves to a path containing ${BUILD}\"",
      "indr --help > /dev/null",
      "echo \"Checking indr resolves to a path containing ${BUILD}\"",
      "install_name_tool --help > /dev/null",
      "echo \"Checking install_name_tool resolves to a path containing ${BUILD}\"",
      "libtool --help > /dev/null",
      "echo \"Checking libtool resolves to a path containing ${BUILD}\"",
      "lipo --help > /dev/null",
      "echo \"Checking lipo resolves to a path containing ${BUILD}\"",
      "nmedit --help > /dev/null",
      "echo \"Checking nmedit resolves to a path containing ${BUILD}\"",
      "otool --help > /dev/null",
      "echo \"Checking otool resolves to a path containing ${BUILD}\"",
      "pagestuff --help > /dev/null",
      "echo \"Checking pagestuff resolves to a path containing ${BUILD}\"",
      "ranlib --help > /dev/null",
      "echo \"Checking ranlib resolves to a path containing ${BUILD}\"",
      "redo_prebinding --help > /dev/null",
      "echo \"Checking redo_prebinding resolves to a path containing ${BUILD}\"",
      "seg_addr_table --help > /dev/null",
      "echo \"Checking seg_addr_table resolves to a path containing ${BUILD}\"",
      "seg_hack --help > /dev/null",
      "echo \"Checking seg_hack resolves to a path containing ${BUILD}\"",
      "segedit --help > /dev/null",
      "echo \"Checking segedit resolves to a path containing ${BUILD}\"",
      "ar --help > /dev/null",
      "echo \"Checking ar resolves to a path containing ${BUILD}\"",
      "as --help > /dev/null",
      "echo \"Checking as resolves to a path containing ${BUILD}\"",
      "ld --help > /dev/null",
      "echo \"Checking ld resolves to a path containing ${BUILD}\"",
      "nm --help > /dev/null",
      "echo \"Checking nm resolves to a path containing ${BUILD}\"",
      "size --help > /dev/null",
      "echo \"Checking size resolves to a path containing ${BUILD}\"",
      "strings --help > /dev/null",
      "echo \"Checking strings resolves to a path containing ${BUILD}\"",
      "strip --help > /dev/null",
      "echo \"Checking strip resolves to a path containing ${BUILD}\"",
      "checksyms --help > /dev/null",
      "echo \"Checking checksyms resolves to a path containing ${BUILD}\"",
      "codesign_allocate --help > /dev/null",
      "echo \"Checking codesign_allocate resolves to a path containing ${BUILD}\"",
      "indr --help > /dev/null",
      "echo \"Checking indr resolves to a path containing ${BUILD}\"",
      "install_name_tool --help > /dev/null",
      "echo \"Checking install_name_tool resolves to a path containing ${BUILD}\"",
      "libtool --help > /dev/null",
      "echo \"Checking libtool resolves to a path containing ${BUILD}\"",
      "lipo --help > /dev/null",
      "echo \"Checking lipo resolves to a path containing ${BUILD}\"",
      "nmedit --help > /dev/null",
      "echo \"Checking nmedit resolves to a path containing ${BUILD}\"",
      "otool --help > /dev/null",
      "echo \"Checking otool resolves to a path containing ${BUILD}\"",
      "pagestuff --help > /dev/null",
      "echo \"Checking pagestuff resolves to a path containing ${BUILD}\"",
      "ranlib --help > /dev/null",
      "echo \"Checking ranlib resolves to a path containing ${BUILD}\"",
      "redo_prebinding --help > /dev/null",
      "echo \"Checking redo_prebinding resolves to a path containing ${BUILD}\"",
      "seg_addr_table --help > /dev/null",
      "echo \"Checking seg_addr_table resolves to a path containing ${BUILD}\"",
      "seg_hack --help > /dev/null",
      "echo \"Checking seg_hack resolves to a path containing ${BUILD}\"",
      "segedit --help > /dev/null",
      "echo \"Checking segedit resolves to a path containing ${BUILD}\"",
      "ar --help > /dev/null",
      "echo \"Checking ar resolves to a path containing ${BUILD}\"",
      "as --help > /dev/null",
      "echo \"Checking as resolves to a path containing ${BUILD}\"",
      "ld --help > /dev/null",
      "echo \"Checking ld resolves to a path containing ${BUILD}\"",
      "nm --help > /dev/null",
      "echo \"Checking nm resolves to a path containing ${BUILD}\"",
      "size --help > /dev/null",
      "echo \"Checking size resolves to a path containing ${BUILD}\"",
      "strings --help > /dev/null",
      "echo \"Checking strings resolves to a path containing ${BUILD}\"",
      "strip --help > /dev/null",
      "echo \"Checking strip resolves to a path containing ${BUILD}\"",
      "checksyms --help > /dev/null",
      "echo \"Checking checksyms resolves to a path containing ${BUILD}\"",
      "codesign_allocate --help > /dev/null",
      "echo \"Checking codesign_allocate resolves to a path containing ${BUILD}\"",
      "indr --help > /dev/null",
      "echo \"Checking indr resolves to a path containing ${BUILD}\"",
      "install_name_tool --help > /dev/null",
      "echo \"Checking install_name_tool resolves to a path containing ${BUILD}\"",
      "libtool --help > /dev/null",
      "echo \"Checking libtool resolves to a path containing ${BUILD}\"",
      "lipo --help > /dev/null",
      "echo \"Checking lipo resolves to a path containing ${BUILD}\"",
      "nmedit --help > /dev/null",
      "echo \"Checking nmedit resolves to a path containing ${BUILD}\"",
      "otool --help > /dev/null",
      "echo \"Checking otool resolves to a path containing ${BUILD}\"",
      "pagestuff --help > /dev/null",
      "echo \"Checking pagestuff resolves to a path containing ${BUILD}\"",
      "ranlib --help > /dev/null",
      "echo \"Checking ranlib resolves to a path containing ${BUILD}\"",
      "redo_prebinding --help > /dev/null",
      "echo \"Checking redo_prebinding resolves to a path containing ${BUILD}\"",
      "seg_addr_table --help > /dev/null",
      "echo \"Checking seg_addr_table resolves to a path containing ${BUILD}\"",
      "seg_hack --help > /dev/null",
      "echo \"Checking seg_hack resolves to a path containing ${BUILD}\"",
      "segedit --help > /dev/null",
      "echo \"Checking segedit resolves to a path containing ${BUILD}\"",
      "ar --help > /dev/null",
      "echo \"Checking ar resolves to a path containing ${BUILD}\"",
      "as --help > /dev/null",
      "echo \"Checking as resolves to a path containing ${BUILD}\"",
      "ld --help > /dev/null",
      "echo \"Checking ld resolves to a path containing ${BUILD}\"",
      "nm --help > /dev/null",
      "echo \"Checking nm resolves to a path containing ${BUILD}\"",
      "size --help > /dev/null",
      "echo \"Checking size resolves to a path containing ${BUILD}\"",
      "strings --help > /dev/null",
      "echo \"Checking strings resolves to a path containing ${BUILD}\"",
      "strip --help > /dev/null",
      "echo \"Checking strip resolves to a path containing ${BUILD}\"",
      "checksyms --help > /dev/null",
      "echo \"Checking checksyms resolves to a path containing ${BUILD}\"",
      "codesign_allocate --help > /dev/null",
      "echo \"Checking codesign_allocate resolves to a path containing ${BUILD}\"",
      "indr --help > /dev/null",
      "echo \"Checking indr resolves to a path containing ${BUILD}\"",
      "install_name_tool --help > /dev/null",
      "echo \"Checking install_name_tool resolves to a path containing ${BUILD}\"",
      "libtool --help > /dev/null",
      "echo \"Checking libtool resolves to a path containing ${BUILD}\"",
      "lipo --help > /dev/null",
      "echo \"Checking lipo resolves to a path containing ${BUILD}\"",
      "nmedit --help > /dev/null",
      "echo \"Checking nmedit resolves to a path containing ${BUILD}\"",
      "otool --help > /dev/null",
      "echo \"Checking otool resolves to a path containing ${BUILD}\"",
      "pagestuff --help > /dev/null",
      "echo \"Checking pagestuff resolves to a path containing ${BUILD}\"",
      "ranlib --help > /dev/null",
      "echo \"Checking ranlib resolves to a path containing ${BUILD}\"",
      "redo_prebinding --help > /dev/null",
      "echo \"Checking redo_prebinding resolves to a path containing ${BUILD}\"",
      "seg_addr_table --help > /dev/null",
      "echo \"Checking seg_addr_table resolves to a path containing ${BUILD}\"",
      "seg_hack --help > /dev/null",
      "echo \"Checking seg_hack resolves to a path containing ${BUILD}\"",
      "segedit --help > /dev/null",
      "echo \"Checking segedit resolves to a path containing ${BUILD}\"",
      "ar --help > /dev/null",
      "echo \"Checking ar resolves to a path containing ${BUILD}\"",
      "as --help > /dev/null",
      "echo \"Checking as resolves to a path containing ${BUILD}\"",
      "ld --help > /dev/null",
      "echo \"Checking ld resolves to a path containing ${BUILD}\"",
      "nm --help > /dev/null",
      "echo \"Checking nm resolves to a path containing ${BUILD}\"",
      "size --help > /dev/null",
      "echo \"Checking size resolves to a path containing ${BUILD}\"",
      "strings --help > /dev/null",
      "echo \"Checking strings resolves to a path containing ${BUILD}\"",
      "strip --help > /dev/null",
      "echo \"Checking strip resolves to a path containing ${BUILD}\"",
      "checksyms --help > /dev/null",
      "echo \"Checking checksyms resolves to a path containing ${BUILD}\"",
      "codesign_allocate --help > /dev/null",
      "echo \"Checking codesign_allocate resolves to a path containing ${BUILD}\"",
      "indr --help > /dev/null",
      "echo \"Checking indr resolves to a path containing ${BUILD}\"",
      "install_name_tool --help > /dev/null",
      "echo \"Checking install_name_tool resolves to a path containing ${BUILD}\"",
      "libtool --help > /dev/null",
      "echo \"Checking libtool resolves to a path containing ${BUILD}\"",
      "lipo --help > /dev/null",
      "echo \"Checking lipo resolves to a path containing ${BUILD}\"",
      "nmedit --help > /dev/null",
      "echo \"Checking nmedit resolves to a path containing ${BUILD}\"",
      "otool --help > /dev/null",
      "echo \"Checking otool resolves to a path containing ${BUILD}\"",
      "pagestuff --help > /dev/null",
      "echo \"Checking pagestuff resolves to a path containing ${BUILD}\"",
      "ranlib --help > /dev/null",
      "echo \"Checking ranlib resolves to a path containing ${BUILD}\"",
      "redo_prebinding --help > /dev/null",
      "echo \"Checking redo_prebinding resolves to a path containing ${BUILD}\"",
      "seg_addr_table --help > /dev/null",
      "echo \"Checking seg_addr_table resolves to a path containing ${BUILD}\"",
      "seg_hack --help > /dev/null",
      "echo \"Checking seg_hack resolves to a path containing ${BUILD}\"",
      "segedit --help > /dev/null",
      "echo \"Checking segedit resolves to a path containing ${BUILD}\"",
      "ar --help > /dev/null",
      "echo \"Checking ar resolves to a path containing ${BUILD}\"",
      "as --help > /dev/null",
      "echo \"Checking as resolves to a path containing ${BUILD}\"",
      "ld --help > /dev/null",
      "echo \"Checking ld resolves to a path containing ${BUILD}\"",
      "nm --help > /dev/null",
      "echo \"Checking nm resolves to a path containing ${BUILD}\"",
      "size --help > /dev/null",
      "echo \"Checking size resolves to a path containing ${BUILD}\"",
      "strings --help > /dev/null",
      "echo \"Checking strings resolves to a path containing ${BUILD}\"",
      "strip --help > /dev/null",
      "echo \"Checking strip resolves to a path containing ${BUILD}\"",
      "checksyms --help > /dev/null",
      "echo \"Checking checksyms resolves to a path containing ${BUILD}\"",
      "codesign_allocate --help > /dev/null",
      "echo \"Checking codesign_allocate resolves to a path containing ${BUILD}\"",
      "indr --help > /dev/null",
      "echo \"Checking indr resolves to a path containing ${BUILD}\"",
      "install_name_tool --help > /dev/null",
      "echo \"Checking install_name_tool resolves to a path containing ${BUILD}\"",
      "libtool --help > /dev/null",
      "echo \"Checking libtool resolves to a path containing ${BUILD}\"",
      "lipo --help > /dev/null",
      "echo \"Checking lipo resolves to a path containing ${BUILD}\"",
      "nmedit --help > /dev/null",
      "echo \"Checking nmedit resolves to a path containing ${BUILD}\"",
      "otool --help > /dev/null",
      "echo \"Checking otool resolves to a path containing ${BUILD}\"",
      "pagestuff --help > /dev/null",
      "echo \"Checking pagestuff resolves to a path containing ${BUILD}\"",
      "ranlib --help > /dev/null",
      "echo \"Checking ranlib resolves to a path containing ${BUILD}\"",
      "redo_prebinding --help > /dev/null",
      "echo \"Checking redo_prebinding resolves to a path containing ${BUILD}\"",
      "seg_addr_table --help > /dev/null",
      "echo \"Checking seg_addr_table resolves to a path containing ${BUILD}\"",
      "seg_hack --help > /dev/null",
      "echo \"Checking seg_hack resolves to a path containing ${BUILD}\"",
      "segedit --help > /dev/null",
      "echo \"Checking segedit resolves to a path containing ${BUILD}\"",
      "ar --help > /dev/null",
      "echo \"Checking ar resolves to a path containing ${BUILD}\"",
      "as --help > /dev/null",
      "echo \"Checking as resolves to a path containing ${BUILD}\"",
      "ld --help > /dev/null",
      "echo \"Checking ld resolves to a path containing ${BUILD}\"",
      "nm --help > /dev/null",
      "echo \"Checking nm resolves to a path containing ${BUILD}\"",
      "size --help > /dev/null",
      "echo \"Checking size resolves to a path containing ${BUILD}\"",
      "strings --help > /dev/null",
      "echo \"Checking strings resolves to a path containing ${BUILD}\"",
      "strip --help > /dev/null",
      "echo \"Checking strip resolves to a path containing ${BUILD}\"",
      "checksyms --help > /dev/null",
      "echo \"Checking checksyms resolves to a path containing ${BUILD}\"",
      "codesign_allocate --help > /dev/null",
      "echo \"Checking codesign_allocate resolves to a path containing ${BUILD}\"",
      "indr --help > /dev/null",
      "echo \"Checking indr resolves to a path containing ${BUILD}\"",
      "install_name_tool --help > /dev/null",
      "echo \"Checking install_name_tool resolves to a path containing ${BUILD}\"",
      "libtool --help > /dev/null",
      "echo \"Checking libtool resolves to a path containing ${BUILD}\"",
      "lipo --help > /dev/null",
      "echo \"Checking lipo resolves to a path containing ${BUILD}\"",
      "nmedit --help > /dev/null",
      "echo \"Checking nmedit resolves to a path containing ${BUILD}\"",
      "otool --help > /dev/null",
      "echo \"Checking otool resolves to a path containing ${BUILD}\"",
      "pagestuff --help > /dev/null",
      "echo \"Checking pagestuff resolves to a path containing ${BUILD}\"",
      "ranlib --help > /dev/null",
      "echo \"Checking ranlib resolves to a path containing ${BUILD}\"",
      "redo_prebinding --help > /dev/null",
      "echo \"Checking redo_prebinding resolves to a path containing ${BUILD}\"",
      "seg_addr_table --help > /dev/null",
      "echo \"Checking seg_addr_table resolves to a path containing ${BUILD}\"",
      "seg_hack --help > /dev/null",
      "echo \"Checking seg_hack resolves to a path containing ${BUILD}\"",
      "segedit --help > /dev/null",
      "echo \"Checking segedit resolves to a path containing ${BUILD}\"",
      "ar --help > /dev/null",
      "echo \"Checking ar resolves to a path containing ${BUILD}\"",
      "as --help > /dev/null",
      "echo \"Checking as resolves to a path containing ${BUILD}\"",
      "ld --help > /dev/null",
      "echo \"Checking ld resolves to a path containing ${BUILD}\"",
      "nm --help > /dev/null",
      "echo \"Checking nm resolves to a path containing ${BUILD}\"",
      "size --help > /dev/null",
      "echo \"Checking size resolves to a path containing ${BUILD}\"",
      "strings --help > /dev/null",
      "echo \"Checking strings resolves to a path containing ${BUILD}\"",
      "strip --help > /dev/null",
      "echo \"Checking strip resolves to a path containing ${BUILD}\"",
      "checksyms --help > /dev/null",
      "echo \"Checking checksyms resolves to a path containing ${BUILD}\"",
      "codesign_allocate --help > /dev/null",
      "echo \"Checking codesign_allocate resolves to a path containing ${BUILD}\"",
      "indr --help > /dev/null",
      "echo \"Checking indr resolves to a path containing ${BUILD}\"",
      "install_name_tool --help > /dev/null",
      "echo \"Checking install_name_tool resolves to a path containing ${BUILD}\"",
      "libtool --help > /dev/null",
      "echo \"Checking libtool resolves to a path containing ${BUILD}\"",
      "lipo --help > /dev/null",
      "echo \"Checking lipo resolves to a path containing ${BUILD}\"",
      "nmedit --help > /dev/null",
      "echo \"Checking nmedit resolves to a path containing ${BUILD}\"",
      "otool --help > /dev/null",
      "echo \"Checking otool resolves to a path containing ${BUILD}\"",
      "pagestuff --help > /dev/null",
      "echo \"Checking pagestuff resolves to a path containing ${BUILD}\"",
      "ranlib --help > /dev/null",
      "echo \"Checking ranlib resolves to a path containing ${BUILD}\"",
      "redo_prebinding --help > /dev/null",
      "echo \"Checking redo_prebinding resolves to a path containing ${BUILD}\"",
      "seg_addr_table --help > /dev/null",
      "echo \"Checking seg_addr_table resolves to a path containing ${BUILD}\"",
      "seg_hack --help > /dev/null",
      "echo \"Checking seg_hack resolves to a path containing ${BUILD}\"",
      "segedit --help > /dev/null",
      "echo \"Checking segedit resolves to a path containing ${BUILD}\"",
      "ar --help > /dev/null",
      "echo \"Checking ar resolves to a path containing ${BUILD}\"",
      "as --help > /dev/null",
      "echo \"Checking as resolves to a path containing ${BUILD}\"",
      "ld --help > /dev/null",
      "echo \"Checking ld resolves to a path containing ${BUILD}\"",
      "nm --help > /dev/null",
      "echo \"Checking nm resolves to a path containing ${BUILD}\"",
      "size --help > /dev/null",
      "echo \"Checking size resolves to a path containing ${BUILD}\"",
      "strings --help > /dev/null",
      "echo \"Checking strings resolves to a path containing ${BUILD}\"",
      "strip --help > /dev/null",
      "echo \"Checking strip resolves to a path containing ${BUILD}\"",
      "checksyms --help > /dev/null",
      "echo \"Checking checksyms resolves to a path containing ${BUILD}\"",
      "codesign_allocate --help > /dev/null",
      "echo \"Checking codesign_allocate resolves to a path containing ${BUILD}\"",
      "indr --help > /dev/null",
      "echo \"Checking indr resolves to a path containing ${BUILD}\"",
      "install_name_tool --help > /dev/null",
      "echo \"Checking install_name_tool resolves to a path containing ${BUILD}\"",
      "libtool --help > /dev/null",
      "echo \"Checking libtool resolves to a path containing ${BUILD}\"",
      "lipo --help > /dev/null",
      "echo \"Checking lipo resolves to a path containing ${BUILD}\"",
      "nmedit --help > /dev/null",
      "echo \"Checking nmedit resolves to a path containing ${BUILD}\"",
      "otool --help > /dev/null",
      "echo \"Checking otool resolves to a path containing ${BUILD}\"",
      "pagestuff --help > /dev/null",
      "echo \"Checking pagestuff resolves to a path containing ${BUILD}\"",
      "ranlib --help > /dev/null",
      "echo \"Checking ranlib resolves to a path containing ${BUILD}\"",
      "redo_prebinding --help > /dev/null",
      "echo \"Checking redo_prebinding resolves to a path containing ${BUILD}\"",
      "seg_addr_table --help > /dev/null",
      "echo \"Checking seg_addr_table resolves to a path containing ${BUILD}\"",
      "seg_hack --help > /dev/null",
      "echo \"Checking seg_hack resolves to a path containing ${BUILD}\"",
      "segedit --help > /dev/null",
      "echo \"Checking segedit resolves to a path containing ${BUILD}\""
     ]
    }
   },
   {
    "about":{
     "description":"This package is a generic way to obtain the C compiler for your system\nthat conda-forge used to compile its ecosystem.  This compiler is,\ntherefore, guaranteed to be ABI compatible with the conda packages\nyou have installed.\n\nThis compiler metapackage is a convenience ONLY for users.\nDo NOT use this package as a build or host dependency in other\nrecipes.  Use the Jinja template function compiler('c') instead.\n",
     "home":"https://conda-forge.org",
     "license":"BSD",
     "summary":"A metapackage to obtain a C compiler"
    },
    "name":"c-compiler",
    "requirements":{
     "host":[
      "c_compiler_stub",
      "binutils-meta"
     ],
     "run":[
      "c_compiler_stub",
      "binutils-meta"
     ]
    },
    "script":"build-symlinks.sh",
    "test":{
     "commands":[
      "$CC --help"
     ]
    }
   },
   {
    "about":{
     "description":"This package is a generic way to obtain the C++ compiler for your system\nthat conda-forge used to compile its ecosystem.  This compiler is,\ntherefore, guaranteed to be ABI compatible with the conda packages\nyou have installed.\n\nThis compiler metapackage is a convenience ONLY for users.\nDo NOT use this package as a build or host dependency in other\nrecipes.  Use the Jinja template function compiler('cxx') instead.\n",
     "home":"https://conda-forge.org",
     "license":"BSD",
     "summary":"A metapackage to obtain a C++ compiler"
    },
    "name":"cxx-compiler",
    "requirements":{
     "host":[
      "cxx_compiler_stub",
      "binutils-meta",
      "c-compiler"
     ],
     "run":[
      "cxx_compiler_stub",
      "binutils-meta"
     ]
    },
    "script":"build-symlinks.sh",
    "test":{
     "commands":[
      "$CXX --help"
     ]
    }
   },
   {
    "about":{
     "description":"This package is a generic way to obtain the Fortran compiler for your\nsystem that conda-forge used to compile its ecosystem.  This compiler\nis, therefore, guaranteed to be ABI compatible with the conda packages\nyou have installed.\n\nThis compiler metapackage is a convenience ONLY for users.\nDo NOT use this package as a build or host dependency in other\nrecipes.  Use the Jinja template function compiler('fortran') instead.\n",
     "home":"https://conda-forge.org",
     "license":"BSD",
     "summary":"A metapackage to obtain a Fortran compiler"
    },
    "name":"fortran-compiler",
    "requirements":{
     "host":[
      "fortran_compiler_stub",
      "binutils-meta"
     ],
     "run":[
      "fortran_compiler_stub",
      "binutils-meta"
     ]
    },
    "script":"build-symlinks.sh",
    "test":{
     "commands":[
      "$FC --help"
     ]
    }
   },
   {
    "name":"compilers",
    "requirements":{
     "run":[
      "binutils-meta",
      "c-compiler",
      "cxx-compiler",
      "fortran-compiler"
     ]
    },
    "test":{
     "commands":[
      "$CC --help",
      "$CXX --help",
      "$FC --help"
     ]
    }
   }
  ],
  "package":{
   "name":"compilers",
   "version":"1.0.4"
  }
 },
 "name":"compilers",
 "new_version":false,
 "outputs_names":[
  "binutils-meta",
  "c-compiler",
  "compilers",
  "cxx-compiler",
  "fortran-compiler"
 ],
 "pinning_version":"2019.09.24",
 "raw_meta_yaml":"{% set c_compiler = compiler('c').split('_')[0] %}\n{% set cxx_compiler = compiler('cxx').split('_')[0] %}\n{% set fortran_compiler = compiler('fortran').split('_')[0] %}\n\n{% set commands = {\n  'binutils-meta': {\n    'linux': ['ar', 'as', 'ld', 'nm', 'size', 'strings', 'strip',\n              'addr2line', 'c++filt', 'elfedit', 'gprof', 'ld.bfd',\n              'objcopy', 'objdump', 'ranlib', 'readelf'] +\n              ([] if target_platform == 'linux-ppc64le' else ['dwp', 'ld.gold']),\n    'osx': ['ar', 'as', 'ld', 'nm', 'size', 'strings', 'strip',\n            'checksyms', 'codesign_allocate', 'indr', 'install_name_tool',\n            'libtool', 'lipo', 'nmedit', 'otool', 'pagestuff', 'ranlib',\n            'redo_prebinding', 'seg_addr_table', 'seg_hack', 'segedit'],\n  },\n  'c-compiler': {\n    'gcc': ['cc', 'ct-ng.config', 'cpp', 'gcc', 'gcc-ar', 'gcc-nm',\n              'gcc-ranlib', 'gcov', 'gcov-dump', 'gcov-tool'],\n    'clang': ['clang'],\n    'vs2008': [],\n    'vs2010': [],\n    'vs2015': [],\n  }[c_compiler],\n  'cxx-compiler': {\n    'gxx': ['g++', 'c++'],\n    'clangxx': ['clang++'],\n    'vs2008': [],\n    'vs2010': [],\n    'vs2015': [],\n  }[cxx_compiler],\n  'fortran-compiler': {\n    'gfortran': ['gfortran'],\n  }[fortran_compiler],\n} %}\n\n\npackage:\n  name: compilers\n  version: 1.0.4\n\nbuild:\n   number: 0\n\noutputs:\n  - name: binutils-meta\n    requirements:\n      host:\n        - binutils_{{ target_platform }}  # [linux]\n        - cctools  # [osx]\n        - ld64  # [osx]\n      run:\n        - binutils_{{ target_platform }}  # [linux]\n        - cctools  # [osx]\n        - ld64  # [osx]\n    script: build-symlinks.sh  # [unix]\n    build:\n      skip: True  # [not unix]\n    test:\n      commands:\n        - $LD --help  # [linux]\n{%- for command in commands['binutils-meta']['linux'] %}  # [linux]\n{%- for command in commands['binutils-meta']['osx'] %}  # [osx]\n        - {{ command }} --help > /dev/null  # [linux] Return code for --help is 1 on OSX\n        - echo \"Checking {{ command }} resolves to a path containing ${BUILD}\"  # [unix]\n        - readlink $(which {{ command }}) | grep -q \"${BUILD}\"  # [unix]\n{%- endfor %}  # [linux]\n{%- endfor %}  # [osx]\n    about:\n      home: https://conda-forge.org\n      license: BSD\n      summary: A metapackage to obtain binutils\n      description: |\n        This package is a generic way to obtain binutils for your system\n        that conda-forge used to compile its ecosystem.  This compiler is,\n        therefore, guaranteed to be ABI compatible with the conda packages\n        you have installed.\n\n        This compiler metapackage is a convenience ONLY for users.\n        Do NOT use this package as a build or host dependency in other\n        recipes.\n\n  - name: c-compiler\n    requirements:\n      host:\n        - {{ compiler('c') }}\n        # Depend on the other metapackages to prevent making duplicate symlinks\n        - {{ pin_subpackage('binutils-meta', exact=True) }}  # [unix]\n      run:\n        - {{ compiler('c') }}\n        - {{ pin_subpackage('binutils-meta', exact=True) }}  # [unix]\n    script: build-symlinks.sh  # [unix]\n    test:\n      commands:\n        - $CC --help  # [unix]\n{%- for command in commands['c-compiler'] %}  # [unix]\n        - {{ command }} --help > /dev/null  # [unix]\n        - echo \"Checking {{ command }} resolves to a path containing ${BUILD}\"  # [unix]\n  {%- if c_compiler == 'gcc' %}  # [unix]\n        - readlink $(which {{ command }}) | grep -q \"${BUILD}\"  # [unix]\n  {%- elif c_compiler == 'clang' %}  # [unix]\n        # The prefixed compilers are a symlink on OSX - check they resolve to the same place\n        - \"[ \\\"$(readlink \\\"$(which {{ command }})\\\")\\\" = \\\"$(readlink \\\"$(which ${BUILD}-{{ command }})\\\")\\\" ]\"  # [unix]\n  {%- endif %}  # [unix]\n{%- endfor %}  # [unix]\n    about:\n      home: https://conda-forge.org\n      license: BSD\n      summary: A metapackage to obtain a C compiler\n      description: |\n        This package is a generic way to obtain the C compiler for your system\n        that conda-forge used to compile its ecosystem.  This compiler is,\n        therefore, guaranteed to be ABI compatible with the conda packages\n        you have installed.\n\n        This compiler metapackage is a convenience ONLY for users.\n        Do NOT use this package as a build or host dependency in other\n        recipes.  Use the Jinja template function compiler('c') instead.\n\n  - name: cxx-compiler\n    requirements:\n      host:\n        - {{ compiler('cxx') }}\n        # Depend on the other metapackages to prevent making duplicate symlinks\n        - {{ pin_subpackage('binutils-meta', exact=True) }}  # [unix]\n        - {{ pin_subpackage('c-compiler', exact=True) }}  # [linux]\n      run:\n        - {{ compiler('cxx') }}\n        - {{ pin_subpackage('binutils-meta', exact=True) }}  # [unix]\n    script: build-symlinks.sh  # [unix]\n    test:\n      commands:\n        - $CXX --help  # [unix]\n{%- for command in commands['cxx-compiler'] %}  # [unix]\n        - {{ command }} --help > /dev/null  # [unix]\n        - echo \"Checking {{ command }} resolves to a path containing ${BUILD}\"  # [unix]\n  {%- if cxx_compiler == 'gxx' %}  # [unix]\n        - readlink $(which {{ command }}) | grep -q \"${BUILD}\"  # [unix]\n  {%- elif cxx_compiler == 'clangxx' %}  # [unix]\n        # The prefixed compilers are a symlink on OSX - check they resolve to the same place\n        - \"[ \\\"$(readlink \\\"$(which {{ command }})\\\")\\\" = \\\"$(readlink \\\"$(which ${BUILD}-{{ command }})\\\")\\\" ]\"  # [unix]\n  {%- endif %}  # [unix]\n{%- endfor %}  # [unix]\n    about:\n      home: https://conda-forge.org\n      license: BSD\n      summary: A metapackage to obtain a C++ compiler\n      description: |\n        This package is a generic way to obtain the C++ compiler for your system\n        that conda-forge used to compile its ecosystem.  This compiler is,\n        therefore, guaranteed to be ABI compatible with the conda packages\n        you have installed.\n\n        This compiler metapackage is a convenience ONLY for users.\n        Do NOT use this package as a build or host dependency in other\n        recipes.  Use the Jinja template function compiler('cxx') instead.\n\n  - name: fortran-compiler\n    requirements:\n      host:\n        - {{ compiler('fortran') }}\n        # Depend on the other metapackages to prevent making duplicate symlinks\n        - {{ pin_subpackage('binutils-meta', exact=True) }}  # [unix]\n      run:\n        - {{ compiler('fortran') }}\n        - {{ pin_subpackage('binutils-meta', exact=True) }}  # [unix]\n    script: build-symlinks.sh  # [linux] gfortran is already available on OSX\n    test:\n      commands:\n        - $FC --help  # [unix]\n{%- for command in commands['fortran-compiler'] %}  # [unix]\n        - {{ command }} --help > /dev/null  # [unix]\n        - echo \"Checking {{ command }} resolves to a path containing ${BUILD}\"  # [linux]\n        - readlink $(which {{ command }}) | grep -q \"${BUILD}\"  # [linux]\n{%- endfor %}  # [unix]\n    about:\n      home: https://conda-forge.org\n      license: BSD\n      summary: A metapackage to obtain a Fortran compiler\n      description: |\n        This package is a generic way to obtain the Fortran compiler for your\n        system that conda-forge used to compile its ecosystem.  This compiler\n        is, therefore, guaranteed to be ABI compatible with the conda packages\n        you have installed.\n\n        This compiler metapackage is a convenience ONLY for users.\n        Do NOT use this package as a build or host dependency in other\n        recipes.  Use the Jinja template function compiler('fortran') instead.\n\n  - name: compilers\n    requirements:\n      run:\n        - {{ pin_subpackage('binutils-meta', exact=True) }}  # [unix]\n        - {{ pin_subpackage('c-compiler', exact=True) }}\n        - {{ pin_subpackage('cxx-compiler', exact=True) }}\n        - {{ pin_subpackage('fortran-compiler', exact=True) }}\n    test:\n      commands:\n        - $CC --help  # [unix]\n        - $CXX --help  # [unix]\n        - $FC --help  # [unix]\n\nabout:\n  home: https://conda-forge.org\n  license: BSD-3-Clause\n  license_family: BSD\n  license_file: LICENSE.txt\n  summary: A metapackage to obtain compilers\n  description: |\n    This package is a generic way to obtain the compilers for your system\n    that conda-forge used to compile its ecosystem. These compilers are,\n    therefore, guaranteed to be ABI compatible with the conda packages\n    you have installed.\n\n    These compiler metapackages are a convenience ONLY for users.\n    Do NOT use these packages as a build or host dependencies in other\n    recipes.  Use the compiler Jinja template function instead.\n    For C++ for example, use compiler('cxx') as usual.\n\nextra:\n  recipe-maintainers:\n    - duncanmmacleod\n    - scopatz\n    - chrisburr\n",
 "req":{
  "__set__":true,
  "elements":[
   "binutils-meta",
   "binutils_",
   "c-compiler",
   "c_compiler_stub",
   "cctools",
   "cxx-compiler",
   "cxx_compiler_stub",
   "fortran-compiler",
   "fortran_compiler_stub",
   "ld64"
  ]
 },
 "requirements":{
  "build":{
   "__set__":true,
   "elements":[]
  },
  "host":{
   "__set__":true,
   "elements":[
    "binutils-meta",
    "binutils_",
    "c-compiler",
    "c_compiler_stub",
    "cctools",
    "cxx_compiler_stub",
    "fortran_compiler_stub",
    "ld64"
   ]
  },
  "run":{
   "__set__":true,
   "elements":[
    "binutils-meta",
    "binutils_",
    "c-compiler",
    "c_compiler_stub",
    "cctools",
    "cxx-compiler",
    "cxx_compiler_stub",
    "fortran-compiler",
    "fortran_compiler_stub",
    "ld64"
   ]
  },
  "test":{
   "__set__":true,
   "elements":[]
  }
 },
 "smithy_version":"3.4.8",
 "strong_exports":false,
 "time":1568135299.70033,
 "total_requirements":{
  "build":{
   "__set__":true,
   "elements":[]
  },
  "host":{
   "__set__":true,
   "elements":[
    "binutils-meta",
    "binutils_",
    "c-compiler",
    "c_compiler_stub",
    "cctools",
    "cxx_compiler_stub",
    "fortran_compiler_stub",
    "ld64"
   ]
  },
  "run":{
   "__set__":true,
   "elements":[
    "binutils-meta",
    "binutils_",
    "c-compiler",
    "c_compiler_stub",
    "cctools",
    "cxx-compiler",
    "cxx_compiler_stub",
    "fortran-compiler",
    "fortran_compiler_stub",
    "ld64"
   ]
  },
  "test":{
   "__set__":true,
   "elements":[]
  }
 },
 "version":"1.0.4"
}