{
 "PRed":[
  {
   "PR":{
    "__lazy_json__":"pr_json/381956416.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"Version",
    "migrator_version":0,
    "version":"0.1.2"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/399230540.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"Version",
    "migrator_version":0,
    "version":"0.1.3"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/400429673.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"Version",
    "migrator_version":0,
    "version":"0.1.4"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  }
 ],
 "bad":false,
 "conda-forge.yml":{},
 "feedstock_name":"cmip6_preprocessing",
 "hash_type":"sha256",
 "meta_yaml":{
  "about":{
   "description":"Frustrated with how 'dirty' CMIP6 data still is? Do you just want to run a\nsimple (or complicated) analysis on various models and end up having to\nwrite logic for each seperate case? Then this package is for you.\n\nDeveloped during the cmip6-hackathon this package provides utility\nfunctions that play nicely with intake-esm.\n",
   "dev_url":"https://github.com/jbusecke/cmip6_preprocessing",
   "home":"https://github.com/jbusecke/cmip6_preprocessing",
   "license":"MIT",
   "license_family":"MIT",
   "license_file":"LICENSE",
   "summary":"Some code to homogenize naming and parse variables in a xgcm compatible xarray dataset"
  },
  "build":{
   "noarch":"python",
   "number":"0",
   "script":"-m pip install . -vv"
  },
  "extra":{
   "recipe-maintainers":[
    "jbusecke",
    "jbusecke",
    "jbusecke"
   ]
  },
  "package":{
   "name":"cmip6_preprocessing",
   "version":"0.1.4"
  },
  "requirements":{
   "host":[
    "python",
    "pip",
    "pytest-runner",
    "python",
    "pip",
    "pytest-runner",
    "python",
    "pip",
    "pytest-runner"
   ],
   "run":[
    "python",
    "xarray",
    "pandas",
    "numpy",
    "python",
    "xarray",
    "pandas",
    "numpy",
    "python",
    "xarray",
    "pandas",
    "numpy"
   ]
  },
  "source":{
   "sha256":"5f6c2a71580e2d68cc624b436150f4a77a9ddaa5f82d0e35abaf0c8215037467",
   "url":"https://pypi.io/packages/source/c/cmip6_preprocessing/cmip6_preprocessing-0.1.4.tar.gz"
  },
  "test":{
   "imports":[
    "cmip6_preprocessing",
    "cmip6_preprocessing",
    "cmip6_preprocessing"
   ]
  }
 },
 "name":"cmip6_preprocessing",
 "new_version":"0.1.4",
 "new_version_attempts":{
  "0.1.3":1,
  "0.1.4":1
 },
 "new_version_errors":{},
 "pinning_version":"2020.04.07",
 "raw_meta_yaml":"{% set name = \"cmip6_preprocessing\" %}\n{% set version = \"0.1.4\" %}\n\npackage:\n  name: {{ name|lower }}\n  version: {{ version }}\n\nsource:\n  url: https://pypi.io/packages/source/{{ name[0] }}/{{ name }}/{{ name }}-{{ version }}.tar.gz\n  sha256: 5f6c2a71580e2d68cc624b436150f4a77a9ddaa5f82d0e35abaf0c8215037467\n\nbuild:\n  noarch: python\n  number: 0\n  script: {{ PYTHON }} -m pip install . -vv\n\nrequirements:\n  host:\n    - python\n    - pip\n    - pytest-runner\n  run:\n    - python\n    - xarray\n    - pandas\n    - numpy\n\ntest:\n  imports:\n    - cmip6_preprocessing\n\nabout:\n  home: https://github.com/jbusecke/cmip6_preprocessing\n  license: MIT\n  license_family: MIT\n  license_file: LICENSE\n  summary: Some code to homogenize naming and parse variables in a xgcm compatible xarray dataset\n\n  description: |\n    Frustrated with how 'dirty' CMIP6 data still is? Do you just want to run a\n    simple (or complicated) analysis on various models and end up having to\n    write logic for each seperate case? Then this package is for you.\n\n    Developed during the cmip6-hackathon this package provides utility\n    functions that play nicely with intake-esm.\n  dev_url: https://github.com/jbusecke/cmip6_preprocessing\n\nextra:\n  recipe-maintainers:\n    - jbusecke\n",
 "req":{
  "__set__":true,
  "elements":[
   "numpy",
   "pandas",
   "pip",
   "pytest-runner",
   "python",
   "xarray"
  ]
 },
 "requirements":{
  "build":{
   "__set__":true,
   "elements":[]
  },
  "host":{
   "__set__":true,
   "elements":[
    "pip",
    "pytest-runner",
    "python"
   ]
  },
  "run":{
   "__set__":true,
   "elements":[
    "numpy",
    "pandas",
    "python",
    "xarray"
   ]
  },
  "test":{
   "__set__":true,
   "elements":[]
  }
 },
 "smithy_version":"No azure token. Create a token and\nput it in ~/.conda-smithy/azure.token\n3.6.15",
 "strong_exports":false,
 "total_requirements":{
  "build":{
   "__set__":true,
   "elements":[]
  },
  "host":{
   "__set__":true,
   "elements":[
    "pip",
    "pytest-runner",
    "python"
   ]
  },
  "run":{
   "__set__":true,
   "elements":[
    "numpy",
    "pandas",
    "python",
    "xarray"
   ]
  },
  "test":{
   "__set__":true,
   "elements":[]
  }
 },
 "url":"https://pypi.io/packages/source/c/cmip6_preprocessing/cmip6_preprocessing-0.1.1.tar.gz",
 "version":"0.1.4"
}