{
 "PRed":[
  {
   "PR":{
    "__lazy_json__":"pr_json/245811076.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"Version",
    "migrator_version":0,
    "version":"1.8.17"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/245946063.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"CompilerRebuild",
    "migrator_version":1,
    "name":"Python 3.7, GCC 7, R 3.5.1, openBLAS 0.3.2"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/283348227.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"Rebuild",
    "migrator_version":0,
    "name":"boost-1.70.0"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/327898596.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"MigrationYaml",
    "migrator_object_version":1,
    "migrator_version":0,
    "name":"ffmpeg41"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/342800851.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"MigrationYaml",
    "migrator_object_version":1,
    "migrator_version":0,
    "name":"libtiff-4.1.0"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/359374226.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"MigrationYaml",
    "migrator_object_version":1,
    "migrator_version":0,
    "name":"giflib52"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/369959609.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"Version",
    "migrator_version":0,
    "version":"2.1.11"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/378506628.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"MigrationYaml",
    "migrator_object_version":2,
    "migrator_version":0,
    "name":"boost172"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/379763933.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"MigrationYaml",
    "migrator_object_version":1,
    "migrator_version":0,
    "name":"python38"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/399987513.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"Version",
    "migrator_version":0,
    "version":"2.1.13"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/404058005.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"MigrationYaml",
    "migrator_object_version":1,
    "migrator_version":0,
    "name":"ffmpeg42"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/412501765.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"Version",
    "migrator_version":0,
    "version":"2.1.14"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/412983246.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"MigrationYaml",
    "migrator_object_version":1,
    "migrator_version":0,
    "name":"pypy"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/415866071.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"Version",
    "migrator_version":0,
    "version":"2.1.15"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  }
 ],
 "bad":false,
 "conda-forge.yml":{},
 "feedstock_name":"openimageio",
 "hash_type":"sha256",
 "meta_yaml":{
  "about":{
   "description":"OpenImageIO consists of:\n- Simple but powerful ImageInput and ImageOutput APIs that provide an abstraction\n  for reading and writing image files of nearly any format, without the calling\n  application needing to know any of the details of these file formats, and indeed\n  without the calling application needing to be aware of which formats are available.\n- Plugins implementing I/O for several popular image file formats, including TIFF,\n  JPEG/JFIF, OpenEXR, PNG, HDR/RGBE, ICO, BMP, Targa, JPEG-2000, RMan Zfile, FITS, DDS,\n  Softimage PIC, PNM, DPX, Cineon, IFF, Field3D, Ptex, Photoshop PSD, Wavefront RLA, SGI,\n  WebP, GIF, DICOM, many \\\"RAW\\\" digital camera formats, and a variety of movie formats\n  (readable as individual frames). More are being developed all the time.\n- An ImageCache class that transparently manages a cache so that it can access truly\n  vast amounts of image data (tens of thousands of image files totaling multiple TB)\n  very efficiently using only a tiny amount (tens of megabytes at most) of runtime memory.\n",
   "home":"https://sites.google.com/site/openimageio/home",
   "license":"BSD-3-Clause",
   "license_family":"BSD",
   "license_file":"LICENSE.md",
   "summary":"Simple but powerful APIs for reading & writing many image formats"
  },
  "build":{
   "number":"0",
   "run_exports":[
    "openimageio",
    "openimageio",
    "openimageio"
   ],
   "skip":true
  },
  "extra":{
   "recipe-maintainers":[
    "SylvainCorlay",
    "JohanMabille",
    "wolfv",
    "lgritz",
    "SylvainCorlay",
    "JohanMabille",
    "wolfv",
    "lgritz",
    "SylvainCorlay",
    "JohanMabille",
    "wolfv",
    "lgritz"
   ]
  },
  "outputs":[
   {
    "name":"openimageio",
    "script":"install_lib.sh",
    "test":{
     "commands":null
    }
   },
   {
    "name":"py-openimageio",
    "requirements":{
     "build":[
      "cmake",
      "cxx_compiler_stub"
     ],
     "host":[
      "openimageio",
      "python",
      "pybind11",
      "boost",
      "ffmpeg",
      "giflib",
      "jpeg",
      "libpng",
      "libtiff",
      "libwebp",
      "openexr"
     ],
     "run":[
      "openimageio",
      "python"
     ]
    },
    "script":"install_python.sh",
    "test":{
     "imports":[
      "OpenImageIO"
     ]
    }
   },
   {
    "name":"openimageio",
    "script":"install_lib.sh",
    "test":{
     "commands":[
      "test -d ${PREFIX}/include/OpenImageIO",
      "test -f ${PREFIX}/include/OpenImageIO/oiioversion.h",
      "test -f ${PREFIX}/lib/libOpenImageIO.dylib"
     ]
    }
   },
   {
    "name":"py-openimageio",
    "requirements":{
     "build":[
      "cmake",
      "cxx_compiler_stub"
     ],
     "host":[
      "openimageio",
      "python",
      "pybind11",
      "boost",
      "ffmpeg",
      "giflib",
      "jpeg",
      "libpng",
      "libtiff",
      "libwebp",
      "openexr"
     ],
     "run":[
      "openimageio",
      "python"
     ]
    },
    "script":"install_python.sh",
    "test":{
     "imports":[
      "OpenImageIO"
     ]
    }
   },
   {
    "name":"openimageio",
    "script":"install_lib.sh",
    "test":{
     "commands":[
      "test -d ${PREFIX}/include/OpenImageIO",
      "test -f ${PREFIX}/include/OpenImageIO/oiioversion.h",
      "test -f ${PREFIX}/lib/libOpenImageIO.so"
     ]
    }
   },
   {
    "name":"py-openimageio",
    "requirements":{
     "build":[
      "cmake",
      "cxx_compiler_stub"
     ],
     "host":[
      "openimageio",
      "python",
      "pybind11",
      "boost",
      "ffmpeg",
      "giflib",
      "jpeg",
      "libpng",
      "libtiff",
      "libwebp",
      "openexr"
     ],
     "run":[
      "openimageio",
      "python"
     ]
    },
    "script":"install_python.sh",
    "test":{
     "imports":[
      "OpenImageIO"
     ]
    }
   }
  ],
  "package":{
   "name":"openimageio",
   "version":"2.1.15"
  },
  "requirements":{
   "build":[
    "cmake",
    "cxx_compiler_stub",
    "cmake",
    "cxx_compiler_stub",
    "cmake",
    "cxx_compiler_stub"
   ],
   "host":[
    "python",
    "pybind11",
    "boost",
    "ffmpeg",
    "giflib",
    "jpeg",
    "libpng",
    "libtiff",
    "libwebp",
    "openexr",
    "python",
    "pybind11",
    "boost",
    "ffmpeg",
    "giflib",
    "jpeg",
    "libpng",
    "libtiff",
    "libwebp",
    "openexr",
    "python",
    "pybind11",
    "boost",
    "ffmpeg",
    "giflib",
    "jpeg",
    "libpng",
    "libtiff",
    "libwebp",
    "openexr"
   ],
   "run":[
    "boost",
    "libwebp",
    "ffmpeg",
    "boost",
    "libwebp",
    "ffmpeg",
    "boost",
    "libwebp",
    "ffmpeg"
   ]
  },
  "source":{
   "fn":"Release-2.1.15.tar.gz",
   "sha256":"95b90ba22b73765cbcbd9e11891769c2e78696ad24d4af77ef3f3c8674422401",
   "url":"https://github.com/OpenImageIO/oiio/archive/Release-2.1.15.0.tar.gz"
  }
 },
 "name":"openimageio",
 "new_version":"2.1.15",
 "new_version_attempts":{
  "2.1.13":1,
  "2.1.14":1,
  "2.1.15":1
 },
 "new_version_errors":{},
 "outputs_names":[
  "openimageio",
  "py-openimageio"
 ],
 "pinning_version":"2020.05.10.05.52.45",
 "raw_meta_yaml":"{% set name = \"openimageio\" %}\n{% set version = \"2.1.15\" %}\n{% set sha256 = \"95b90ba22b73765cbcbd9e11891769c2e78696ad24d4af77ef3f3c8674422401\" %}\n\npackage:\n  name: {{ name }}\n  version: {{ version }}\n\nsource:\n  fn: Release-{{ version }}.tar.gz\n  url: https://github.com/OpenImageIO/oiio/archive/Release-{{ version }}.0.tar.gz\n  sha256: {{ sha256 }}\n\nbuild:\n  number: 0\n  skip: true  # [win]\n  run_exports:\n    - {{ pin_subpackage(name, max_pin='x.x') }}\n\nrequirements:\n  build:\n    - cmake\n    - {{ compiler('cxx') }}\n  host:\n    - python\n    - pybind11\n    - boost\n    - ffmpeg\n    - giflib\n    - jpeg\n    - libpng\n    - libtiff\n    - libwebp\n    - openexr\n  run:\n    # boost and libwebp don't have a run_exports section\n    - {{ pin_compatible('boost', max_pin='x.x.x') }}\n    - {{ pin_compatible('libwebp', max_pin='x.x') }}\n    # ffmpeg 3.x does not have a run-export section\n    - {{ pin_compatible('ffmpeg', max_pin='x.x') }}\n\noutputs:\n  - name: openimageio\n    script: install_lib.sh\n    test:\n      commands:\n        - test -d ${PREFIX}/include/OpenImageIO  # [unix]\n        - test -f ${PREFIX}/include/OpenImageIO/oiioversion.h  # [unix]\n        - test -f ${PREFIX}/lib/libOpenImageIO.so  # [linux]\n        - test -f ${PREFIX}/lib/libOpenImageIO.dylib  # [osx]\n\n  - name: py-openimageio\n    script: install_python.sh\n    requirements:\n      build:\n        - cmake\n        - {{ compiler('cxx') }}\n      host:\n        - {{ pin_subpackage('openimageio', exact=True) }}\n        - python\n        - pybind11\n        - boost\n        - ffmpeg\n        - giflib\n        - jpeg\n        - libpng\n        - libtiff\n        - libwebp\n        - openexr\n      run:\n        - {{ pin_subpackage('openimageio', exact=True) }}\n        - python\n    test:\n      imports:\n        - OpenImageIO\n\nabout:\n  home: https://sites.google.com/site/openimageio/home\n  license: BSD-3-Clause\n  license_family: BSD\n  license_file: LICENSE.md\n  summary: Simple but powerful APIs for reading & writing many image formats\n  description: |\n    OpenImageIO consists of:\n    - Simple but powerful ImageInput and ImageOutput APIs that provide an abstraction\n      for reading and writing image files of nearly any format, without the calling\n      application needing to know any of the details of these file formats, and indeed\n      without the calling application needing to be aware of which formats are available.\n    - Plugins implementing I/O for several popular image file formats, including TIFF,\n      JPEG/JFIF, OpenEXR, PNG, HDR/RGBE, ICO, BMP, Targa, JPEG-2000, RMan Zfile, FITS, DDS,\n      Softimage PIC, PNM, DPX, Cineon, IFF, Field3D, Ptex, Photoshop PSD, Wavefront RLA, SGI,\n      WebP, GIF, DICOM, many \\\"RAW\\\" digital camera formats, and a variety of movie formats\n      (readable as individual frames). More are being developed all the time.\n    - An ImageCache class that transparently manages a cache so that it can access truly\n      vast amounts of image data (tens of thousands of image files totaling multiple TB)\n      very efficiently using only a tiny amount (tens of megabytes at most) of runtime memory.\n\nextra:\n  recipe-maintainers:\n    - SylvainCorlay\n    - JohanMabille\n    - wolfv\n    - lgritz\n",
 "req":{
  "__set__":true,
  "elements":[
   "boost",
   "cmake",
   "cxx_compiler_stub",
   "ffmpeg",
   "giflib",
   "jpeg",
   "libpng",
   "libtiff",
   "libwebp",
   "openexr",
   "openimageio",
   "pybind11",
   "python"
  ]
 },
 "requirements":{
  "build":{
   "__set__":true,
   "elements":[
    "cmake",
    "cxx_compiler_stub"
   ]
  },
  "host":{
   "__set__":true,
   "elements":[
    "boost",
    "ffmpeg",
    "giflib",
    "jpeg",
    "libpng",
    "libtiff",
    "libwebp",
    "openexr",
    "openimageio",
    "pybind11",
    "python"
   ]
  },
  "run":{
   "__set__":true,
   "elements":[
    "boost",
    "ffmpeg",
    "libwebp",
    "openimageio",
    "python"
   ]
  },
  "test":{
   "__set__":true,
   "elements":[]
  }
 },
 "smithy_version":"No azure token. Create a token and\nput it in ~/.conda-smithy/azure.token\n3.7.0\n",
 "strong_exports":false,
 "total_requirements":{
  "build":{
   "__set__":true,
   "elements":[
    "cmake",
    "cxx_compiler_stub"
   ]
  },
  "host":{
   "__set__":true,
   "elements":[
    "boost",
    "ffmpeg",
    "giflib",
    "jpeg",
    "libpng",
    "libtiff",
    "libwebp",
    "openexr",
    "openimageio",
    "pybind11",
    "python"
   ]
  },
  "run":{
   "__set__":true,
   "elements":[
    "boost",
    "ffmpeg",
    "libwebp",
    "openimageio",
    "python"
   ]
  },
  "test":{
   "__set__":true,
   "elements":[]
  }
 },
 "url":"https://github.com/OpenImageIO/oiio/archive/Release-1.8.17.tar.gz",
 "version":"2.1.15"
}