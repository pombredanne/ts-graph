{
 "PRed":[
  {
   "data":{
    "bot_rerun":false,
    "migrator_name":"Version",
    "migrator_version":0,
    "version":"1.4.0"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/199901048.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"Compiler",
    "migrator_version":0
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/222688743.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"CompilerRebuild",
    "migrator_version":1,
    "name":"Python 3.7, GCC 7, R 3.5.1, openBLAS 0.3.2"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/244941881.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"Version",
    "migrator_version":0,
    "version":"1.4.1"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/339391650.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"MigrationYaml",
    "migrator_object_version":1,
    "migrator_version":0,
    "name":"python38"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/375744359.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"MatplotlibBase",
    "migrator_version":0,
    "name":"matplotlib-to-matplotlib-base"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/398588752.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"Version",
    "migrator_version":0,
    "version":"1.5.0"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  }
 ],
 "bad":false,
 "conda-forge.yml":{
  "compiler_stack":"comp7",
  "max_py_ver":"37",
  "max_r_ver":"35"
 },
 "feedstock_name":"pykrige",
 "hash_type":"sha256",
 "meta_yaml":{
  "about":{
   "description":"The code supports two- and three- dimensional ordinary and universal\nkriging. Standard variogram models (linear, power, spherical,\ngaussian, exponential) are built in, but custom variogram models\ncan also be used with the code.\n",
   "dev_url":"https://github.com/GeoStat-Framework/PyKrige",
   "doc_url":"http://pykrige.readthedocs.io/",
   "home":"https://github.com/GeoStat-Framework/PyKrige",
   "license":"BSD-3-Clause",
   "license_family":"BSD",
   "license_file":"LICENSE",
   "summary":"Kriging Toolkit for Python"
  },
  "build":{
   "number":"0",
   "script":[
    "set SETUPTOOLS_SCM_PRETEND_VERSION=1.5.0",
    "-m pip install . --no-deps -vv",
    "export SETUPTOOLS_SCM_PRETEND_VERSION=1.5.0",
    "-m pip install . --no-deps -vv",
    "export SETUPTOOLS_SCM_PRETEND_VERSION=1.5.0",
    "-m pip install . --no-deps -vv"
   ]
  },
  "extra":{
   "recipe-maintainers":[
    "rth",
    "MuellerSeb",
    "rth",
    "MuellerSeb",
    "rth",
    "MuellerSeb"
   ]
  },
  "package":{
   "name":"pykrige",
   "version":"1.5.0"
  },
  "requirements":{
   "build":[
    "c_compiler_stub",
    "c_compiler_stub",
    "c_compiler_stub"
   ],
   "host":[
    "pip",
    "python",
    "setuptools >=45",
    "setuptools_scm >=3.5",
    "cython >=0.28.3",
    "numpy >=1.14.5",
    "scipy >=1.1.0",
    "pip",
    "python",
    "setuptools >=45",
    "setuptools_scm >=3.5",
    "cython >=0.28.3",
    "numpy >=1.14.5",
    "scipy >=1.1.0",
    "pip",
    "python",
    "setuptools >=45",
    "setuptools_scm >=3.5",
    "cython >=0.28.3",
    "numpy >=1.14.5",
    "scipy >=1.1.0"
   ],
   "run":[
    "python",
    "numpy",
    "scipy",
    "python",
    "numpy",
    "scipy",
    "python",
    "numpy",
    "scipy"
   ]
  },
  "source":{
   "fn":"PyKrige-1.5.0.tar.gz",
   "sha256":"f5b96f8f7244a4e0357b97130a42cf36042300458f238ce3a534d0580f71b121",
   "url":"https://pypi.io/packages/source/P/PyKrige/PyKrige-1.5.0.tar.gz"
  },
  "test":{
   "commands":[
    "pytest -vv tests",
    "pytest -vv tests",
    "pytest -vv tests"
   ],
   "imports":[
    "pykrige",
    "pykrige",
    "pykrige"
   ],
   "requires":[
    "pytest >=5.3.0",
    "scikit-learn >=0.19",
    "gstools >=1.1.1",
    "pytest >=5.3.0",
    "scikit-learn >=0.19",
    "gstools >=1.1.1",
    "pytest >=5.3.0",
    "scikit-learn >=0.19",
    "gstools >=1.1.1"
   ],
   "source_files":[
    "tests",
    "tests",
    "tests"
   ]
  }
 },
 "name":"pykrige",
 "new_version":"1.5.0",
 "pinning_version":"2020.04.03",
 "raw_meta_yaml":"{% set name = \"PyKrige\" %}\n{% set version = \"1.5.0\" %}\n{% set sha256 = \"f5b96f8f7244a4e0357b97130a42cf36042300458f238ce3a534d0580f71b121\" %}\n\npackage:\n  name: {{ name|lower }}\n  version: {{ version }}\n\nsource:\n  fn: {{ name }}-{{ version }}.tar.gz\n  url: https://pypi.io/packages/source/{{ name[0] }}/{{ name }}/{{ name }}-{{ version }}.tar.gz\n  sha256: {{ sha256 }}\n\nbuild:\n  number: 0\n  script:\n    - export SETUPTOOLS_SCM_PRETEND_VERSION={{ version }}    # [unix]\n    - set SETUPTOOLS_SCM_PRETEND_VERSION={{ version }}    # [win]\n    - {{ PYTHON }} -m pip install . --no-deps -vv\n\nrequirements:\n  build:\n    - {{ compiler('c') }}\n  host:\n    - pip\n    - python\n    - setuptools >=45\n    - setuptools_scm >=3.5\n    - cython >=0.28.3\n    - numpy >=1.14.5\n    - scipy >=1.1.0\n  run:\n    - python\n    - {{ pin_compatible('numpy') }}\n    - {{ pin_compatible('scipy') }}\n\ntest:\n  imports:\n    - pykrige\n  requires:\n    - pytest >=5.3.0\n    - scikit-learn >=0.19\n    - gstools >=1.1.1\n  source_files:\n    - tests\n  commands:\n    - pytest -vv tests\n\nabout:\n  home: https://github.com/GeoStat-Framework/PyKrige\n  license: BSD-3-Clause\n  license_family: BSD\n  license_file: LICENSE\n  summary: Kriging Toolkit for Python\n  description: |\n    The code supports two- and three- dimensional ordinary and universal\n    kriging. Standard variogram models (linear, power, spherical,\n    gaussian, exponential) are built in, but custom variogram models\n    can also be used with the code.\n  doc_url: http://pykrige.readthedocs.io/\n  dev_url: https://github.com/GeoStat-Framework/PyKrige\n\nextra:\n  recipe-maintainers:\n    - rth\n    - MuellerSeb\n",
 "req":{
  "__set__":true,
  "elements":[
   "c_compiler_stub",
   "cython",
   "numpy",
   "pip",
   "python",
   "scipy",
   "setuptools",
   "setuptools_scm"
  ]
 },
 "requirements":{
  "build":{
   "__set__":true,
   "elements":[
    "c_compiler_stub"
   ]
  },
  "host":{
   "__set__":true,
   "elements":[
    "cython",
    "numpy",
    "pip",
    "python",
    "scipy",
    "setuptools",
    "setuptools_scm"
   ]
  },
  "run":{
   "__set__":true,
   "elements":[
    "numpy",
    "python",
    "scipy"
   ]
  },
  "test":{
   "__set__":true,
   "elements":[
    "gstools",
    "pytest",
    "scikit-learn"
   ]
  }
 },
 "smithy_version":"No azure token. Create a token and\nput it in ~/.conda-smithy/azure.token\n3.6.15",
 "strong_exports":false,
 "total_requirements":{
  "build":{
   "__set__":true,
   "elements":[
    "c_compiler_stub"
   ]
  },
  "host":{
   "__set__":true,
   "elements":[
    "cython >=0.28.3",
    "numpy >=1.14.5",
    "pip",
    "python",
    "scipy >=1.1.0",
    "setuptools >=45",
    "setuptools_scm >=3.5"
   ]
  },
  "run":{
   "__set__":true,
   "elements":[
    "numpy",
    "python",
    "scipy"
   ]
  },
  "test":{
   "__set__":true,
   "elements":[
    "gstools >=1.1.1",
    "pytest >=5.3.0",
    "scikit-learn >=0.19"
   ]
  }
 },
 "url":"https://pypi.io/packages/source/P/PyKrige/PyKrige-1.4.0.tar.gz",
 "version":"1.5.0"
}