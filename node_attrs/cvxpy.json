{
 "PRed":[
  {
   "PR":{
    "__lazy_json__":"pr_json/210009691.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"Version",
    "migrator_version":0,
    "version":"1.0.8"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/220436514.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"Version",
    "migrator_version":0,
    "version":"1.0.9"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/223369121.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"Version",
    "migrator_version":0,
    "version":"1.0.10"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/228132928.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"CompilerRebuild",
    "migrator_version":1,
    "name":"Python 3.7, GCC 7, R 3.5.1, openBLAS 0.3.2"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/238844054.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"Version",
    "migrator_version":0,
    "version":"1.0.11"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/244663003.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"Version",
    "migrator_version":0,
    "version":"1.0.12"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/248393799.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"Version",
    "migrator_version":0,
    "version":"1.0.14"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "data":{
    "bot_rerun":false,
    "migrator_name":"Version",
    "migrator_version":0,
    "version":"1.0.15"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/254816117.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"Version",
    "migrator_version":0,
    "version":"1.0.16"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/254925943.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"Version",
    "migrator_version":0,
    "version":"1.0.17"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/255185678.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"Version",
    "migrator_version":0,
    "version":"1.0.18"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/280077109.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"Version",
    "migrator_version":0,
    "version":"1.0.22"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/280497274.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"Version",
    "migrator_version":0,
    "version":"1.0.23"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/284290083.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"Version",
    "migrator_version":0,
    "version":"1.0.24"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/309700235.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"Version",
    "migrator_version":0,
    "version":"1.0.25"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/329375388.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"ArchRebuild",
    "migrator_version":1,
    "name":"aarch64 and ppc64le addition"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/342370398.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"MigrationYaml",
    "migrator_object_version":1,
    "migrator_version":0,
    "name":"python38"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/378433492.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"Version",
    "migrator_version":0,
    "version":"1.0.26"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/379260882.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"Version",
    "migrator_version":0,
    "version":"1.0.27"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/379300959.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"Version",
    "migrator_version":0,
    "version":"1.0.28"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/397198330.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"Version",
    "migrator_version":0,
    "version":"1.0.29"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/401580351.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"Version",
    "migrator_version":0,
    "version":"1.0.31"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/403686914.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"MigrationYaml",
    "migrator_object_version":1,
    "migrator_version":0,
    "name":"pypy"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  }
 ],
 "bad":false,
 "conda-forge.yml":{
  "provider":{
   "linux_aarch64":"default",
   "linux_ppc64le":"default",
   "win":"azure"
  }
 },
 "feedstock_name":"cvxpy",
 "hash_type":"sha256",
 "meta_yaml":{
  "about":{
   "description":"CVXPY is a Python-embedded modeling language for convex optimization\nproblems. It allows you to express your problem in a natural way that\nfollows the math, rather than in the restrictive standard form required\nby solvers.\n",
   "dev_url":"https://github.com/cvxgrp/cvxpy",
   "doc_url":"http://www.cvxpy.org/",
   "home":"http://www.cvxpy.org/",
   "license":"Apache-2.0",
   "license_family":"Apache",
   "license_file":"LICENSE",
   "summary":"A Python-embedded modeling language for convex optimization problems"
  },
  "build":{
   "number":"1"
  },
  "extra":{
   "recipe-maintainers":[
    "SteveDiamond",
    "akshayka",
    "rileyjmurray",
    "djsutherland",
    "mcg1969",
    "scopatz",
    "h-vetinari",
    "SteveDiamond",
    "akshayka",
    "rileyjmurray",
    "djsutherland",
    "mcg1969",
    "scopatz",
    "h-vetinari",
    "SteveDiamond",
    "akshayka",
    "rileyjmurray",
    "djsutherland",
    "mcg1969",
    "scopatz",
    "h-vetinari"
   ]
  },
  "outputs":[
   {
    "name":"cvxpy",
    "requirements":{
     "host":[
      "python"
     ],
     "run":[
      "python",
      "cvxpy-base",
      "osqp",
      "ecos >=2",
      "scs >=1.1.3"
     ]
    },
    "test":{
     "commands":[
      "nosetests cvxpy"
     ],
     "imports":[
      "cvxpy",
      "cvxpy.cvxcore",
      "cvxpy.cvxcore.python"
     ],
     "requires":[
      "nose"
     ]
    }
   },
   {
    "build":{
     "script":"-m pip install . --no-deps -vvv"
    },
    "name":"cvxpy-base",
    "requirements":{
     "build":[
      "c_compiler_stub",
      "cxx_compiler_stub"
     ],
     "host":[
      "python",
      "numpy",
      "pip"
     ],
     "run":[
      "python",
      "numpy",
      "scipy >=1.1.0",
      "multiprocess",
      "six"
     ]
    },
    "test":{
     "imports":[
      "cvxpy",
      "cvxpy.cvxcore",
      "cvxpy.cvxcore.python"
     ]
    }
   },
   {
    "name":"cvxpy",
    "requirements":{
     "host":[
      "python"
     ],
     "run":[
      "python",
      "cvxpy-base",
      "osqp",
      "ecos >=2",
      "scs >=1.1.3"
     ]
    },
    "test":{
     "commands":[
      "nosetests cvxpy"
     ],
     "imports":[
      "cvxpy",
      "cvxpy.cvxcore",
      "cvxpy.cvxcore.python"
     ],
     "requires":[
      "nose"
     ]
    }
   },
   {
    "build":{
     "script":"-m pip install . --no-deps -vvv"
    },
    "name":"cvxpy-base",
    "requirements":{
     "build":[
      "c_compiler_stub",
      "cxx_compiler_stub"
     ],
     "host":[
      "python",
      "numpy",
      "pip"
     ],
     "run":[
      "python",
      "numpy",
      "scipy >=1.1.0",
      "multiprocess",
      "six"
     ]
    },
    "test":{
     "imports":[
      "cvxpy",
      "cvxpy.cvxcore",
      "cvxpy.cvxcore.python"
     ]
    }
   },
   {
    "name":"cvxpy",
    "requirements":{
     "host":[
      "python"
     ],
     "run":[
      "python",
      "cvxpy-base",
      "osqp",
      "ecos >=2",
      "scs >=1.1.3"
     ]
    },
    "test":{
     "commands":[
      "nosetests cvxpy"
     ],
     "imports":[
      "cvxpy",
      "cvxpy.cvxcore",
      "cvxpy.cvxcore.python"
     ],
     "requires":[
      "nose"
     ]
    }
   },
   {
    "build":{
     "script":"-m pip install . --no-deps -vvv"
    },
    "name":"cvxpy-base",
    "requirements":{
     "build":[
      "c_compiler_stub",
      "cxx_compiler_stub"
     ],
     "host":[
      "python",
      "numpy",
      "pip"
     ],
     "run":[
      "python",
      "numpy",
      "scipy >=1.1.0",
      "multiprocess",
      "six"
     ]
    },
    "test":{
     "imports":[
      "cvxpy",
      "cvxpy.cvxcore",
      "cvxpy.cvxcore.python"
     ]
    }
   }
  ],
  "package":{
   "name":"cvxpy",
   "version":"1.0.31"
  },
  "requirements":{
   "build":[
    "c_compiler_stub",
    "cxx_compiler_stub",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "c_compiler_stub",
    "cxx_compiler_stub"
   ],
   "host":[
    "python",
    "python",
    "python"
   ],
   "run":[
    "python",
    "python",
    "python"
   ]
  },
  "source":{
   "patches":[
    "patches/0001-remove-pyproject.toml-requires-in-setup.py.patch",
    "patches/0001-remove-pyproject.toml-requires-in-setup.py.patch",
    "patches/0001-remove-pyproject.toml-requires-in-setup.py.patch"
   ],
   "sha256":"b398754f9e9ceaa46b07806b5ae85f90fd8de748475db22a6b99c5943cebe69d",
   "url":"https://pypi.io/packages/source/c/cvxpy/cvxpy-1.0.31.tar.gz"
  }
 },
 "name":"cvxpy",
 "new_version":"1.0.31",
 "new_version_attempts":{
  "1.0.30":8,
  "1.0.31":2
 },
 "new_version_errors":{
  "1.0.30":"The recipe did not change in the version migration, a URL did not hash, or there is jinja2 syntax the bot cannot handle!\n\nPlease check the URLs in your recipe with version '1.0.30' to make sure they exist!\n\nWe also found the following errors:\n\n - could not hash URL template 'https://pypi.io/packages/source/{{ name[0] }}/{{ name }}/{{ name }}-{{ version }}.tar.gz'\n",
  "1.0.31":"The recipe did not change in the version migration, a URL did not hash, or there is jinja2 syntax the bot cannot handle!\n\nPlease check the URLs in your recipe with version '1.0.31' to make sure they exist!\n\nWe also found the following errors:\n\n - could not hash URL template 'https://pypi.io/packages/source/{{ name[0] }}/{{ name }}/{{ name }}-{{ version }}.tar.gz'\n"
 },
 "outputs_names":[
  "cvxpy",
  "cvxpy-base"
 ],
 "pinning_version":"2020.04.15.00.37.28",
 "raw_meta_yaml":"{% set name = \"cvxpy\" %}\n{% set version = \"1.0.31\" %}\n\npackage:\n  name: {{ name|lower }}\n  version: {{ version }}\n\nsource:\n  url: https://pypi.io/packages/source/{{ name[0] }}/{{ name }}/{{ name }}-{{ version }}.tar.gz\n  sha256: b398754f9e9ceaa46b07806b5ae85f90fd8de748475db22a6b99c5943cebe69d\n  patches:\n    - patches/0001-remove-pyproject.toml-requires-in-setup.py.patch\n\nbuild:\n  number: 1\n  skip: true  # [py==27 and win]\n  skip: true  # [py==27 and not x86_64]\n\n# Need these up here for conda-smithy to handle them properly.\nrequirements:\n  build:\n    - {{ compiler('c') }}\n    - {{ compiler('cxx') }}\n  host:\n    - python\n  run:\n    - python\n\noutputs:\n  - name: cvxpy\n    requirements:\n      host:\n        - python\n      run:\n        - python\n        - {{ pin_subpackage('cvxpy-base', exact=True) }}\n        - osqp\n        - ecos >=2\n        - scs >=1.1.3\n    test:\n      imports:\n        - cvxpy\n        - cvxpy.cvxcore\n        - cvxpy.cvxcore.python\n      requires:\n        - nose\n      commands:\n        - nosetests cvxpy\n  - name: cvxpy-base\n    build:\n      script: {{ PYTHON }} -m pip install . --no-deps -vvv\n    requirements:\n      build:\n        - {{ compiler('c') }}\n        - {{ compiler('cxx') }}\n      host:\n        - python\n        # conda-forge recipe inserts oldest numpy per platform/runtime\n        - numpy\n        - pip\n      run:\n        - python\n        - {{ pin_compatible('numpy') }}\n        - scipy >=1.1.0\n        - multiprocess\n        - six\n    test:\n      imports:\n        - cvxpy\n        - cvxpy.cvxcore\n        - cvxpy.cvxcore.python\n\nabout:\n  home: http://www.cvxpy.org/\n  license: Apache-2.0\n  license_family: Apache\n  license_file: LICENSE\n  summary: A Python-embedded modeling language for convex optimization problems\n  description: |\n    CVXPY is a Python-embedded modeling language for convex optimization\n    problems. It allows you to express your problem in a natural way that\n    follows the math, rather than in the restrictive standard form required\n    by solvers.\n  doc_url: http://www.cvxpy.org/\n  dev_url: https://github.com/cvxgrp/cvxpy\n\nextra:\n  recipe-maintainers:\n    - SteveDiamond\n    - akshayka\n    - rileyjmurray\n    - djsutherland\n    - mcg1969\n    - scopatz\n    - h-vetinari\n",
 "req":{
  "__set__":true,
  "elements":[
   "c_compiler_stub",
   "cvxpy-base",
   "cxx_compiler_stub",
   "ecos",
   "multiprocess",
   "numpy",
   "osqp",
   "pip",
   "python",
   "scipy",
   "scs",
   "six"
  ]
 },
 "requirements":{
  "build":{
   "__set__":true,
   "elements":[
    "c_compiler_stub",
    "cxx_compiler_stub"
   ]
  },
  "host":{
   "__set__":true,
   "elements":[
    "numpy",
    "pip",
    "python"
   ]
  },
  "run":{
   "__set__":true,
   "elements":[
    "cvxpy-base",
    "ecos",
    "multiprocess",
    "numpy",
    "osqp",
    "python",
    "scipy",
    "scs",
    "six"
   ]
  },
  "test":{
   "__set__":true,
   "elements":[
    "nose"
   ]
  }
 },
 "smithy_version":"No azure token. Create a token and\nput it in ~/.conda-smithy/azure.token\n3.6.16",
 "strong_exports":false,
 "total_requirements":{
  "build":{
   "__set__":true,
   "elements":[
    "c_compiler_stub",
    "cxx_compiler_stub"
   ]
  },
  "host":{
   "__set__":true,
   "elements":[
    "numpy",
    "pip",
    "python"
   ]
  },
  "run":{
   "__set__":true,
   "elements":[
    "cvxpy-base",
    "ecos >=2",
    "multiprocess",
    "numpy",
    "osqp",
    "python",
    "scipy >=1.1.0",
    "scs >=1.1.3",
    "six"
   ]
  },
  "test":{
   "__set__":true,
   "elements":[
    "nose"
   ]
  }
 },
 "url":"https://pypi.io/packages/source/c/cvxpy/cvxpy-1.0.25.tar.gz",
 "version":"1.0.31"
}