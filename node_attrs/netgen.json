{
 "PRed":[
  {
   "data":{
    "bot_rerun":false,
    "migrator_name":"Version",
    "migrator_version":0,
    "version":"6.2.1804"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/198605418.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"Compiler",
    "migrator_version":0
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/215198182.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"Version",
    "migrator_version":0,
    "version":"6.2.1808"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/230326406.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"CompilerRebuild",
    "migrator_version":1,
    "name":"Python 3.7, GCC 7, R 3.5.1, openBLAS 0.3.2"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/235409220.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"Version",
    "migrator_version":0,
    "version":"6.2.1810"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/335673450.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"MigrationYaml",
    "migrator_object_version":1,
    "migrator_version":0,
    "name":"python38"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/340580628.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"MigrationYaml",
    "migrator_object_version":1,
    "migrator_version":0,
    "name":"occt74"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/343507643.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"Version",
    "migrator_version":0,
    "version":"6.2.1909"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/366910961.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"Version",
    "migrator_version":0,
    "version":"6.2.1910"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/0e346c8d-d1c8-4c19-a30c-557f8cd5533f.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"MigrationYaml",
    "migrator_object_version":1,
    "migrator_version":0,
    "name":"pypy"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/402236040.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"Version",
    "migrator_version":0,
    "version":"6.2.1809"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/409784279.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"Version",
    "migrator_version":0,
    "version":"6.2.2004"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  }
 ],
 "bad":false,
 "conda-forge.yml":{
  "provider":{
   "win":"azure"
  }
 },
 "feedstock_name":"netgen",
 "hash_type":"sha256",
 "meta_yaml":{
  "about":{
   "description":"NETGEN is an automatic 3d tetrahedral mesh generator. It accepts input from constructive solid geometry (CSG) or boundary representation (BRep) from STL file format. The connection to a geometry kernel allows the handling of IGES and STEP files. NETGEN contains modules for mesh optimization and hierarchical mesh refinement. Netgen is open source based on the LGPL license. It is available for Unix/Linux and Windows.",
   "dev_url":"https://sourceforge.net/projects/netgen-mesher/",
   "doc_url":"http://www.hpfem.jku.at/netgen/",
   "home":"https://sourceforge.net/projects/netgen-mesher/",
   "license":"LGPL2.1",
   "license_family":"LGPL",
   "license_file":"LICENSE",
   "summary":"this is netgen"
  },
  "build":{
   "number":"1"
  },
  "extra":{
   "recipe-maintainers":[
    "looooo",
    "looooo",
    "looooo"
   ]
  },
  "package":{
   "name":"netgen",
   "version":"6.2.2004"
  },
  "requirements":{
   "build":[
    "cxx_compiler_stub",
    "ninja",
    "cmake",
    "cxx_compiler_stub",
    "ninja",
    "cmake",
    "cxx_compiler_stub",
    "ninja",
    "cmake"
   ],
   "host":[
    "occt",
    "python",
    "pybind11",
    "zlib",
    "occt",
    "python",
    "pybind11",
    "zlib",
    "occt",
    "python",
    "pybind11",
    "zlib"
   ],
   "run":[
    "occt",
    "python",
    "zlib",
    "occt",
    "python",
    "zlib",
    "occt",
    "python",
    "zlib"
   ]
  },
  "source":{
   "fn":"netgen_v6.2.2004.tar.gz",
   "patches":[
    "cmake.patch",
    "dll_header.patch",
    "cmake.patch",
    "dll_header.patch",
    "cmake.patch",
    "dll_header.patch"
   ],
   "sha256":"a41111470baf65090066df85957aea8afdcb568a18f1915946228f3918d91928",
   "url":"https://github.com/NGSolve/netgen/archive/v6.2.2004.tar.gz"
  },
  "test":{
   "commands":[
    "python -c \"import sys; print(sys.version); import netgen;\"",
    "python -c \"import sys; print(sys.version); import netgen;\"",
    "python -c \"import sys; print(sys.version); import netgen;\""
   ]
  }
 },
 "name":"netgen",
 "new_version":"6.2.2004",
 "new_version_attempts":{
  "6.2.1809":1,
  "6.2.2004":1
 },
 "new_version_errors":{},
 "pinning_version":"2020.04.27.17.45.41",
 "raw_meta_yaml":"{% set name = \"netgen\" %}\n{% set version = \"6.2.2004\" %}\n{% set sha256 = \"a41111470baf65090066df85957aea8afdcb568a18f1915946228f3918d91928\" %}\n\n\npackage:\n  name: {{ name }}\n  version: {{ version }}\n\nsource:\n  fn: netgen_v{{ version }}.tar.gz\n  url: https://github.com/NGSolve/netgen/archive/v{{ version }}.tar.gz\n  sha256: {{ sha256 }}\n  patches:\n    - cmake.patch\n    - dll_header.patch\n\nbuild:\n  number: 1\n  skip: true  # [py27]\n\nrequirements:\n  build:\n    - {{ compiler('cxx') }}\n    - ninja\n    - cmake\n  host:\n    - occt\n    - python\n    - pybind11\n    - zlib\n  run:\n    - occt\n    - python\n    - zlib\n\ntest:\n  commands:\n    - python -c \"import sys; print(sys.version); import netgen;\"\n\nabout:\n  home: https://sourceforge.net/projects/netgen-mesher/\n  license: LGPL2.1\n  license_family: LGPL\n  license_file: LICENSE\n  summary: this is netgen\n  description: NETGEN is an automatic 3d tetrahedral mesh generator. It accepts input from constructive solid geometry (CSG) or boundary representation (BRep) from STL file format. The connection to a geometry kernel allows the handling of IGES and STEP files. NETGEN contains modules for mesh optimization and hierarchical\n    mesh refinement. Netgen is open source based on the LGPL license. It is available for Unix/Linux and Windows.\n  doc_url: http://www.hpfem.jku.at/netgen/\n  dev_url: https://sourceforge.net/projects/netgen-mesher/\n\nextra:\n  recipe-maintainers:\n    - looooo\n",
 "req":{
  "__set__":true,
  "elements":[
   "cmake",
   "cxx_compiler_stub",
   "ninja",
   "occt",
   "pybind11",
   "python",
   "zlib"
  ]
 },
 "requirements":{
  "build":{
   "__set__":true,
   "elements":[
    "cmake",
    "cxx_compiler_stub",
    "ninja"
   ]
  },
  "host":{
   "__set__":true,
   "elements":[
    "occt",
    "pybind11",
    "python",
    "zlib"
   ]
  },
  "run":{
   "__set__":true,
   "elements":[
    "occt",
    "python",
    "zlib"
   ]
  },
  "test":{
   "__set__":true,
   "elements":[]
  }
 },
 "smithy_version":"No azure token. Create a token and\nput it in ~/.conda-smithy/azure.token\n3.7.0",
 "strong_exports":false,
 "total_requirements":{
  "build":{
   "__set__":true,
   "elements":[
    "cmake",
    "cxx_compiler_stub",
    "ninja"
   ]
  },
  "host":{
   "__set__":true,
   "elements":[
    "occt",
    "pybind11",
    "python",
    "zlib"
   ]
  },
  "run":{
   "__set__":true,
   "elements":[
    "occt",
    "python",
    "zlib"
   ]
  },
  "test":{
   "__set__":true,
   "elements":[]
  }
 },
 "url":"https://github.com/NGSolve/netgen/archive/v6.2.1808.tar.gz",
 "version":"6.2.2004"
}