{
 "PRed":[
  {
   "PR":{
    "__lazy_json__":"pr_json/240031943.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"CompilerRebuild",
    "migrator_version":1,
    "name":"Python 3.7, GCC 7, R 3.5.1, openBLAS 0.3.2"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/308292412.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"GFortranOSXRebuild",
    "migrator_version":0,
    "name":"fortran_compiler_stub-7"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/339408640.json"
   },
   "data":{
    "bot_rerun":1579272528.5933468,
    "migrator_name":"MigrationYaml",
    "migrator_object_version":1,
    "migrator_version":0,
    "name":"python38"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/339538910.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"MigrationYaml",
    "migrator_object_version":1,
    "migrator_version":0,
    "name":"python38"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/346597614.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"Version",
    "migrator_version":0,
    "version":"1.0.12"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/356500125.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"Version",
    "migrator_version":0,
    "version":"1.1.0"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/374693787.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"MatplotlibBase",
    "migrator_version":0,
    "name":"matplotlib-to-matplotlib-base"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/375513689.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"Version",
    "migrator_version":0,
    "version":"1.1.1"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/395351968.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"MigrationYaml",
    "migrator_object_version":1,
    "migrator_version":0,
    "name":"pypy"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/396877775.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"Version",
    "migrator_version":0,
    "version":"1.1.2"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/418833381.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"Version",
    "migrator_version":0,
    "version":"1.1.3"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  }
 ],
 "bad":false,
 "conda-forge.yml":{
  "bot":{
   "automerge":true
  },
  "provider":{
   "win":"azure"
  }
 },
 "feedstock_name":"camb",
 "hash_type":"sha256",
 "meta_yaml":{
  "about":{
   "description":"Code for Anisotropies in the Microwave Background\nby Antony Lewis and Anthony Challinor\n\nFeatures:\n  - Support for closed, open and flat models\n  - Scalar, vector and tensor modes including polarization\n  - Output Cl, matter transfer functions, matter power spectrum and \u03c38\n  - Fast computation to ~0.3-0.1% accuracy, with controllable accuracy level\n  - Relatively structured and easily extendable Fortran 90 code\n  - Efficient support for massive neutrinos\n  - Absolute computations from correctly normalized initial power spectra\n  - Computation of lensed CMB power spectra and lensing potential power spectrum\n  - Internally parallelized for fast execution on multi-processor machines\n  - Use CAMB with CosmoMC for Monte-Carlo parameter estimation\n  - Constant equation of state quintessence (or variable PPF)\n  - Support for general correlated adiabatic/isocurvature initial conditions\n  - Accurate full-sky calculation of lensed power spectra (astro-ph/0502425)\n  - Integrated interface to HALOFIT for non-linear fitting\n  - support for arbitrary neutrino mass splittings\n  - For 21cm, lensing and number count power spectra see this extension\n  - For perturbed recombination and effect on small-scale baryons see this extension\n  - Calculation of local primordial and CMB lensing bispectra\n  - Easy-to-use Python wrapper\n",
   "dev_url":"https://github.com/cmbant/CAMB",
   "doc_url":"https://camb.info/readme.html",
   "home":"https://camb.info/",
   "license":"modified LGPL",
   "license_family":"LGPL",
   "license_file":"/LICENSE",
   "summary":"Code for Anisotropies in the Microwave Background"
  },
  "build":{
   "number":"0"
  },
  "extra":{
   "recipe-maintainers":[
    "beckermr",
    "cmbant",
    "beckermr",
    "cmbant",
    "beckermr",
    "cmbant"
   ]
  },
  "package":{
   "name":"camb",
   "version":"1.1.3"
  },
  "requirements":{
   "build":[
    "m2w64-toolchain",
    "m2-git",
    "m2-make",
    "python",
    "setuptools",
    "pip",
    "c_compiler_stub",
    "fortran_compiler_stub",
    "git",
    "make",
    "python",
    "setuptools",
    "pip",
    "c_compiler_stub",
    "fortran_compiler_stub",
    "git",
    "make",
    "python",
    "setuptools",
    "pip"
   ],
   "host":[
    "python",
    "pip",
    "setuptools",
    "python",
    "pip",
    "setuptools",
    "python",
    "pip",
    "setuptools"
   ],
   "run":[
    "python",
    "numpy",
    "six",
    "mock",
    "setuptools",
    "sympy >=1.0",
    "scipy >=1.0",
    "python",
    "numpy",
    "six",
    "mock",
    "setuptools",
    "sympy >=1.0",
    "scipy >=1.0",
    "fortran_compiler_stub",
    "python",
    "numpy",
    "six",
    "mock",
    "setuptools",
    "sympy >=1.0",
    "scipy >=1.0",
    "fortran_compiler_stub"
   ]
  },
  "source":{
   "sha256":"d3959b7984a363b855ea45267fb9e977e68b7c78de020fa47352b169b85ee6a4",
   "url":"https://github.com/cmbant/CAMB/archive/1.1.3.tar.gz"
  },
  "test":{
   "files":[
    "params.ini",
    "test_pycamb.py",
    "run_test.sh",
    "params.ini",
    "test_pycamb.py",
    "params.ini",
    "test_pycamb.py"
   ],
   "imports":[
    "camb",
    "camb",
    "camb"
   ]
  }
 },
 "name":"camb",
 "new_version":"1.1.3",
 "new_version_attempts":{
  "1.1.3":1
 },
 "new_version_errors":{},
 "outputs_names":[
  "camb",
  "pycamb"
 ],
 "pinning_version":"2020.05.14.17.14.20",
 "raw_meta_yaml":"{% set name = \"camb\" %}\n{% set version = \"1.1.3\" %}\n\npackage:\n  name: {{ name|lower }}\n  version: {{ version }}\n\nsource:\n  url: https://github.com/cmbant/CAMB/archive/{{ version }}.tar.gz\n  sha256: d3959b7984a363b855ea45267fb9e977e68b7c78de020fa47352b169b85ee6a4\n\nbuild:\n  number: 0\n  skip: true  # [py2k]\n\nrequirements:\n  build:\n    - {{ compiler('c') }}  # [not win]\n    - {{ compiler('fortran') }}  # [not win]\n    - m2w64-toolchain  # [win]\n    - git  # [not win]\n    - m2-git  # [win]\n    - make  # [not win]\n    - m2-make  # [win]\n    - python\n    - setuptools\n    - pip\n  host:\n    - python\n    - pip\n    - setuptools\n  run:\n    - python\n    - numpy\n    - six  # TODO: remove for next update\n    - mock\n    - setuptools  # for an import of pkg_resources\n    - sympy >=1.0\n    - scipy >=1.0\n    - {{ compiler('fortran') }}  # [not win]\n\ntest:\n  imports:\n    - camb\n  files:\n    - params.ini\n    - test_pycamb.py\n    - run_test.sh  # [win]\n\nabout:\n  home: https://camb.info/\n  license: modified LGPL\n  license_family: LGPL\n  license_file: {{ RECIPE_DIR }}/LICENSE\n  summary: Code for Anisotropies in the Microwave Background\n  description: |\n    Code for Anisotropies in the Microwave Background\n    by Antony Lewis and Anthony Challinor\n\n    Features:\n      - Support for closed, open and flat models\n      - Scalar, vector and tensor modes including polarization\n      - Output Cl, matter transfer functions, matter power spectrum and \u03c38\n      - Fast computation to ~0.3-0.1% accuracy, with controllable accuracy level\n      - Relatively structured and easily extendable Fortran 90 code\n      - Efficient support for massive neutrinos\n      - Absolute computations from correctly normalized initial power spectra\n      - Computation of lensed CMB power spectra and lensing potential power spectrum\n      - Internally parallelized for fast execution on multi-processor machines\n      - Use CAMB with CosmoMC for Monte-Carlo parameter estimation\n      - Constant equation of state quintessence (or variable PPF)\n      - Support for general correlated adiabatic/isocurvature initial conditions\n      - Accurate full-sky calculation of lensed power spectra (astro-ph/0502425)\n      - Integrated interface to HALOFIT for non-linear fitting\n      - support for arbitrary neutrino mass splittings\n      - For 21cm, lensing and number count power spectra see this extension\n      - For perturbed recombination and effect on small-scale baryons see this extension\n      - Calculation of local primordial and CMB lensing bispectra\n      - Easy-to-use Python wrapper\n  doc_url: https://camb.info/readme.html\n  dev_url: https://github.com/cmbant/CAMB\n\nextra:\n  recipe-maintainers:\n    - beckermr\n    - cmbant\n",
 "req":{
  "__set__":true,
  "elements":[
   "c_compiler_stub",
   "fortran_compiler_stub",
   "git",
   "m2-git",
   "m2-make",
   "m2w64-toolchain",
   "make",
   "mock",
   "numpy",
   "pip",
   "python",
   "scipy",
   "setuptools",
   "six",
   "sympy"
  ]
 },
 "requirements":{
  "build":{
   "__set__":true,
   "elements":[
    "c_compiler_stub",
    "fortran_compiler_stub",
    "git",
    "m2-git",
    "m2-make",
    "m2w64-toolchain",
    "make",
    "pip",
    "python",
    "setuptools"
   ]
  },
  "host":{
   "__set__":true,
   "elements":[
    "pip",
    "python",
    "setuptools"
   ]
  },
  "run":{
   "__set__":true,
   "elements":[
    "fortran_compiler_stub",
    "mock",
    "numpy",
    "python",
    "scipy",
    "setuptools",
    "six",
    "sympy"
   ]
  },
  "test":{
   "__set__":true,
   "elements":[]
  }
 },
 "smithy_version":"No azure token. Create a token and\nput it in ~/.conda-smithy/azure.token\n3.7.1\n",
 "strong_exports":false,
 "time":1568135296.5952687,
 "total_requirements":{
  "build":{
   "__set__":true,
   "elements":[
    "c_compiler_stub",
    "fortran_compiler_stub",
    "git",
    "m2-git",
    "m2-make",
    "m2w64-toolchain",
    "make",
    "pip",
    "python",
    "setuptools"
   ]
  },
  "host":{
   "__set__":true,
   "elements":[
    "pip",
    "python",
    "setuptools"
   ]
  },
  "run":{
   "__set__":true,
   "elements":[
    "fortran_compiler_stub",
    "mock",
    "numpy",
    "python",
    "scipy >=1.0",
    "setuptools",
    "six",
    "sympy >=1.0"
   ]
  },
  "test":{
   "__set__":true,
   "elements":[]
  }
 },
 "url":"https://github.com/cmbant/CAMB/archive/1.0.10.tar.gz",
 "version":"1.1.3"
}